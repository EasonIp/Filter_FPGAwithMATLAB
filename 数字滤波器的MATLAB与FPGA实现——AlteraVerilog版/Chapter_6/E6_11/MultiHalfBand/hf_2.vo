//IP Functional Simulation Model
//VERSION_BEGIN 12.1 cbx_mgl 2012:11:07:18:06:30:SJ cbx_simgen 2012:11:07:18:03:51:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



// Copyright (C) 1991-2012 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// You may only use these simulation model output files for simulation
// purposes and expressly not for synthesis or any other purposes (in which
// event Altera disclaims all warranties of any kind).


//synopsys translate_off

//synthesis_resources = altshift_taps 2 lpm_mult 1 lut 591 mux21 551 oper_add 5 oper_mux 4 oper_selector 4 scfifo 1 
`timescale 1 ps / 1 ps
module  hf_2
	( 
	ast_sink_data,
	ast_sink_error,
	ast_sink_ready,
	ast_sink_valid,
	ast_source_data,
	ast_source_error,
	ast_source_ready,
	ast_source_valid,
	clk,
	reset_n) /* synthesis synthesis_clearbox=1 */;
	input   [19:0]  ast_sink_data;
	input   [1:0]  ast_sink_error;
	output   ast_sink_ready;
	input   ast_sink_valid;
	output   [31:0]  ast_source_data;
	output   [1:0]  ast_source_error;
	input   ast_source_ready;
	output   ast_source_valid;
	input   clk;
	input   reset_n;

	wire  [19:0]   wire_ni0O1l_taps;
	wire  [19:0]   wire_nii0Oi_taps;
	reg	n0ilOO;
	wire	wire_n0ilOl_ENA;
	reg	n0iliO;
	reg	n0iOll;
	reg	n0iOlO;
	reg	n0iOOi;
	reg	n0iOOl;
	reg	n0iOOO;
	reg	n0l10i;
	reg	n0l10l;
	reg	n0l10O;
	reg	n0l11i;
	reg	n0l11l;
	reg	n0l11O;
	reg	n0l1ii;
	reg	n0l1il;
	reg	n0l1iO;
	reg	n0l1li;
	reg	n0l1ll;
	reg	n0l1lO;
	reg	n0l1Oi;
	reg	n0l1OO;
	reg	n0O11l;
	reg	n000i;
	reg	n000l;
	reg	n000O;
	reg	n001i;
	reg	n001l;
	reg	n001O;
	reg	n00ii;
	reg	n00il;
	reg	n00iO;
	reg	n00li;
	reg	n00ll;
	reg	n00lO;
	reg	n00Oi;
	reg	n00Ol;
	reg	n00OO;
	reg	n010i;
	reg	n010l;
	reg	n010O;
	reg	n011O;
	reg	n01ii;
	reg	n01il;
	reg	n01iO;
	reg	n01li;
	reg	n01ll;
	reg	n01lO;
	reg	n01Oi;
	reg	n01Ol;
	reg	n01OO;
	reg	n0i1i;
	reg	n0i1l;
	reg	n0i1O;
	reg	n0Oil;
	reg	ni0O0i;
	reg	ni0O0l;
	reg	ni0O0O;
	reg	ni0O1O;
	reg	ni0Oii;
	reg	ni0Oil;
	reg	ni0OiO;
	reg	ni0Oli;
	reg	ni0Oll;
	reg	ni0OlO;
	reg	ni0OOi;
	reg	ni0OOl;
	reg	ni0OOO;
	reg	nii0Ol;
	reg	nii0OO;
	reg	nii10i;
	reg	nii10l;
	reg	nii10O;
	reg	nii11i;
	reg	nii11l;
	reg	nii11O;
	reg	nii1ii;
	reg	niii0i;
	reg	niii0l;
	reg	niii0O;
	reg	niii1i;
	reg	niii1l;
	reg	niii1O;
	reg	niiiii;
	reg	niiiil;
	reg	niiiiO;
	reg	niiili;
	reg	niiill;
	reg	niiilO;
	reg	niiiOi;
	reg	niiiOl;
	reg	niiiOO;
	reg	niil1i;
	reg	niil1l;
	reg	niil1O;
	reg	nll0li;
	reg	nll0ll;
	reg	nll0lO;
	reg	nll0Oi;
	reg	nll0Ol;
	reg	nll0OO;
	reg	nlli0i;
	reg	nlli0l;
	reg	nlli0O;
	reg	nlli1i;
	reg	nlli1l;
	reg	nlli1O;
	reg	nlliii;
	reg	nlliil;
	reg	nlliiO;
	reg	nllili;
	reg	nllill;
	reg	nllilO;
	reg	nlliOi;
	reg	nlliOl;
	reg	nlll1i;
	reg	nlO0il;
	reg	nlO0iO;
	reg	nlO0li;
	reg	nlO0ll;
	reg	nlO0lO;
	reg	nlO0Oi;
	reg	nlO0Ol;
	reg	nlO0OO;
	reg	nlOi0i;
	reg	nlOi0l;
	reg	nlOi0O;
	reg	nlOi1i;
	reg	nlOi1l;
	reg	nlOi1O;
	reg	nlOiii;
	reg	nlOiil;
	reg	nlOiiO;
	reg	nlOili;
	reg	nlOill;
	reg	nlOilO;
	reg	nlOiOi;
	reg	nlOiOl;
	reg	nlOiOO;
	reg	nlOl0i;
	reg	nlOl0l;
	reg	nlOl0O;
	reg	nlOl1i;
	reg	nlOl1l;
	reg	nlOl1O;
	reg	nlOlii;
	reg	nlOlil;
	reg	nlOliO;
	reg	nlOlli;
	reg	n011l;
	reg	n0OiO;
	reg	n0Oli;
	reg	n0Oll;
	reg	n0OlO;
	reg	n0OOi;
	reg	n0OOl;
	reg	n0OOO;
	reg	n110i;
	reg	n110l;
	reg	n110O;
	reg	n111i;
	reg	n111l;
	reg	n111O;
	reg	n11ii;
	reg	n11il;
	reg	n11iO;
	reg	n11li;
	reg	n11ll;
	reg	n11lO;
	reg	n11O;
	reg	n1il;
	reg	n1iO;
	reg	n1ll;
	reg	ni00i;
	reg	ni00l;
	reg	ni00O;
	reg	ni01i;
	reg	ni01l;
	reg	ni01O;
	reg	ni0ii;
	reg	ni0il;
	reg	ni0iO;
	reg	ni10i;
	reg	ni10l;
	reg	ni10O;
	reg	ni11i;
	reg	ni11l;
	reg	ni11O;
	reg	ni1ii;
	reg	ni1il;
	reg	ni1iO;
	reg	ni1li;
	reg	ni1ll;
	reg	ni1lO;
	reg	ni1Oi;
	reg	ni1Ol;
	reg	ni1OO;
	reg	nillil;
	reg	nilliO;
	reg	nillli;
	reg	nillll;
	reg	nilllO;
	reg	nillOi;
	reg	nillOl;
	reg	nillOO;
	reg	nilO0i;
	reg	nilO0l;
	reg	nilO0O;
	reg	nilO1i;
	reg	nilO1l;
	reg	nilO1O;
	reg	nilOii;
	reg	nilOil;
	reg	nilOiO;
	reg	nilOli;
	reg	nilOll;
	reg	nilOlO;
	reg	nilOOi;
	reg	nilOOl;
	reg	nilOOO;
	reg	niO10l;
	reg	niO10O;
	reg	niO11i;
	reg	niO11l;
	reg	niO1ii;
	reg	niO1il;
	reg	niO1iO;
	reg	niO1li;
	reg	niO1ll;
	reg	niO1lO;
	reg	niO1Oi;
	reg	niO1Ol;
	reg	nl00i;
	reg	nl00l;
	reg	nl00li;
	reg	nl00ll;
	reg	nl00lO;
	reg	nl00O;
	reg	nl00Oi;
	reg	nl00Ol;
	reg	nl00OO;
	reg	nl01O;
	reg	nl0i0i;
	reg	nl0i0l;
	reg	nl0i1i;
	reg	nl0i1l;
	reg	nl0i1O;
	reg	nl0ii;
	reg	nl0iil;
	reg	nl0iiO;
	reg	nl0il;
	reg	nl0ili;
	reg	nl0ill;
	reg	nl0ilO;
	reg	nl0iO;
	reg	nl0iOi;
	reg	nl0iOl;
	reg	nl0iOO;
	reg	nl0l0i;
	reg	nl0l0l;
	reg	nl0l0O;
	reg	nl0l1i;
	reg	nl0l1l;
	reg	nl0l1O;
	reg	nl0li;
	reg	nl0lii;
	reg	nl0lil;
	reg	nl0liO;
	reg	nl0lli;
	reg	nl0lll;
	reg	nl0llO;
	reg	nl0lOi;
	reg	nl0lOl;
	reg	nl0lOO;
	reg	nl0O0i;
	reg	nl0O0l;
	reg	nl0O0O;
	reg	nl0O1i;
	reg	nl0O1l;
	reg	nl0O1O;
	reg	nl0Oii;
	reg	nl0Oil;
	reg	nl0OiO;
	reg	nl0Ol;
	reg	nl0Oli;
	reg	nl0Oll;
	reg	nl1OO;
	reg	nli0O;
	reg	nli1O;
	reg	nliiO;
	reg	nlilOi;
	reg	nliO0i;
	reg	nliO0l;
	reg	nliO0O;
	reg	nliO1i;
	reg	nliO1l;
	reg	nliO1O;
	reg	nliOii;
	reg	nliOil;
	reg	nliOiO;
	reg	nliOli;
	reg	nliOll;
	reg	nliOlO;
	reg	nliOOi;
	reg	nliOOl;
	reg	nliOOO;
	reg	nll10i;
	reg	nll11i;
	reg	nll11l;
	reg	nll11O;
	reg	nlO0O;
	reg	nlOllO;
	reg	nlOlO;
	reg	nlOlOi;
	reg	nlOlOl;
	reg	nlOlOO;
	reg	nlOO0i;
	reg	nlOO0l;
	reg	nlOO0O;
	reg	nlOO1i;
	reg	nlOO1l;
	reg	nlOO1O;
	reg	nlOOii;
	reg	nlOOil;
	reg	nlOOiO;
	reg	nlOOli;
	reg	nlOOll;
	reg	nlOOlO;
	reg	nlOOOi;
	reg	nlOOOl;
	reg	nlOOOO;
	reg	ni010i;
	reg	ni010l;
	reg	ni010O;
	reg	ni011i;
	reg	ni011l;
	reg	ni011O;
	reg	ni01ii;
	reg	ni01il;
	reg	ni01li;
	reg	ni1lil;
	reg	ni1liO;
	reg	ni1lli;
	reg	ni1lll;
	reg	ni1llO;
	reg	ni1lOi;
	reg	ni1lOl;
	reg	ni1lOO;
	reg	ni1O0i;
	reg	ni1O0l;
	reg	ni1O0O;
	reg	ni1O1i;
	reg	ni1O1l;
	reg	ni1O1O;
	reg	ni1Oii;
	reg	ni1Oil;
	reg	ni1OiO;
	reg	ni1Oli;
	reg	ni1Oll;
	reg	ni1OlO;
	reg	ni1OOi;
	reg	ni1OOl;
	reg	ni1OOO;
	reg	n0l00i;
	reg	n0l00l;
	reg	n0l01i;
	reg	n0l01l;
	reg	n0l01O;
	reg	n0l0ii;
	reg	n0lOOO;
	reg	n0O1li;
	reg	ni01lO;
	reg	ni1l0i;
	reg	ni1l0l;
	reg	ni1l0O;
	reg	ni1lii;
	reg	n0l00O;
	reg	ni001i;
	reg	ni01Oi;
	reg	ni01Ol;
	reg	n0O1ii;
	reg	n0OlOl;
	reg	n0OlOO;
	reg	n0OO0i;
	reg	n0OO0l;
	reg	n0OO0O;
	reg	n0OO1i;
	reg	n0OO1l;
	reg	n0OO1O;
	reg	n0OOii;
	reg	n0OOil;
	reg	n0OOiO;
	reg	n0OOli;
	reg	n0OOll;
	reg	n0OOlO;
	reg	n0OOOi;
	reg	n0OOOl;
	reg	n0OOOO;
	reg	ni110i;
	reg	ni110l;
	reg	ni110O;
	reg	ni111i;
	reg	ni111l;
	reg	ni111O;
	reg	ni11ii;
	reg	ni11il;
	reg	ni11iO;
	reg	ni11li;
	reg	ni11ll;
	reg	ni11lO;
	reg	ni11Oi;
	reg	ni11OO;
	reg	ni100i;
	reg	ni100l;
	reg	ni100O;
	reg	ni101i;
	reg	ni101l;
	reg	ni101O;
	reg	ni10ii;
	reg	ni10il;
	reg	ni10iO;
	reg	ni10li;
	reg	ni10ll;
	reg	ni10lO;
	reg	ni10Oi;
	reg	ni10Ol;
	reg	ni10OO;
	reg	ni1i0i;
	reg	ni1i0l;
	reg	ni1i0O;
	reg	ni1i1i;
	reg	ni1i1l;
	reg	ni1i1O;
	reg	ni1iii;
	reg	ni1iil;
	reg	ni1iiO;
	reg	ni1ili;
	reg	ni1ill;
	reg	ni1ilO;
	reg	ni1iOi;
	reg	ni1iOl;
	reg	ni1iOO;
	reg	ni1l1i;
	reg	ni1l1O;
	reg	niiOiO;
	reg	niiOli;
	reg	niiOll;
	reg	niiOlO;
	reg	niiOOi;
	reg	niiOOl;
	reg	niiOOO;
	reg	nil00i;
	reg	nil00l;
	reg	nil00O;
	reg	nil01i;
	reg	nil01l;
	reg	nil01O;
	reg	nil0ii;
	reg	nil0il;
	reg	nil0iO;
	reg	nil0li;
	reg	nil0ll;
	reg	nil0lO;
	reg	nil0Oi;
	reg	nil0Ol;
	reg	nil0OO;
	reg	nil10i;
	reg	nil10l;
	reg	nil10O;
	reg	nil11i;
	reg	nil11l;
	reg	nil11O;
	reg	nil1ii;
	reg	nil1il;
	reg	nil1iO;
	reg	nil1li;
	reg	nil1ll;
	reg	nil1lO;
	reg	nil1Oi;
	reg	nil1Ol;
	reg	nil1OO;
	reg	nili0i;
	reg	nili0l;
	reg	nili0O;
	reg	nili1i;
	reg	nili1l;
	reg	nili1O;
	reg	niliii;
	reg	niliil;
	reg	niliiO;
	reg	nilili;
	reg	nilill;
	reg	nililO;
	reg	niliOi;
	reg	niliOl;
	reg	niliOO;
	reg	nill0i;
	reg	nill0l;
	reg	nill0O;
	reg	nill1i;
	reg	nill1l;
	reg	nill1O;
	reg	nillii;
	reg	niO10i;
	reg	nlilOl;
	reg	nll00i;
	reg	nll00l;
	reg	nll00O;
	reg	nll01i;
	reg	nll01l;
	reg	nll01O;
	reg	nll0ii;
	reg	nll0iO;
	reg	nll10l;
	reg	nll10O;
	reg	nll1ii;
	reg	nll1il;
	reg	nll1iO;
	reg	nll1li;
	reg	nll1ll;
	reg	nll1lO;
	reg	nll1Oi;
	reg	nll1Ol;
	reg	nll1OO;
	reg	nlllil;
	reg	nlllll;
	reg	nlO00i;
	reg	nlO00O;
	reg	nlO01i;
	reg	nlO01l;
	reg	nlO01O;
	reg	nlO10O;
	reg	nlO1OO;
	reg	ni00ii;
	reg	ni00il;
	reg	ni00iO;
	reg	ni00li;
	reg	ni00ll;
	reg	ni00lO;
	reg	ni00Oi;
	reg	ni00Ol;
	reg	ni00OO;
	reg	ni0i0i;
	reg	ni0i0l;
	reg	ni0i0O;
	reg	ni0i1i;
	reg	ni0i1l;
	reg	ni0i1O;
	reg	ni0iii;
	reg	ni0iil;
	reg	ni0iiO;
	reg	ni0ili;
	reg	ni0O1i;
	reg	nlll0i;
	reg	nlll0l;
	reg	nlll0O;
	reg	nlll1l;
	reg	nlll1O;
	reg	nlllii;
	reg	nllliO;
	reg	nlllli;
	reg	nllllO;
	reg	nlllOi;
	reg	nlllOl;
	reg	nlllOO;
	reg	nllO0i;
	reg	nllO0l;
	reg	nllO0O;
	reg	nllO1i;
	reg	nllO1l;
	reg	nllO1O;
	reg	nllOii;
	reg	nllOil;
	reg	nllOiO;
	reg	nllOli;
	reg	nllOll;
	reg	nllOlO;
	reg	nllOOi;
	reg	nllOOl;
	reg	nllOOO;
	reg	nlO10i;
	reg	nlO10l;
	reg	nlO11i;
	reg	nlO11l;
	reg	nlO11O;
	reg	nlO1ii;
	reg	nlO1il;
	reg	nlO1iO;
	reg	nlO1li;
	reg	nlO1ll;
	reg	nlO1lO;
	reg	nlO1Ol;
	wire  [32:0]   wire_nlO0ii_result;
	wire	wire_n011i_dataout;
	wire	wire_n0i0i_dataout;
	wire	wire_n0i0l_dataout;
	wire	wire_n0i0O_dataout;
	wire	wire_n0iii_dataout;
	wire	wire_n0iil_dataout;
	wire	wire_n0iiO_dataout;
	wire	wire_n0ili_dataout;
	wire	wire_n0ill_dataout;
	wire	wire_n0ilO_dataout;
	wire	wire_n0iO0i_dataout;
	wire	wire_n0iO1i_dataout;
	wire	wire_n0iO1l_dataout;
	wire	wire_n0iO1O_dataout;
	wire	wire_n0iOi_dataout;
	wire	wire_n0iOl_dataout;
	wire	wire_n0iOO_dataout;
	wire	wire_n0l0i_dataout;
	wire	wire_n0l0il_dataout;
	wire	wire_n0l0iO_dataout;
	wire	wire_n0l0l_dataout;
	wire	wire_n0l0li_dataout;
	wire	wire_n0l0ll_dataout;
	wire	wire_n0l0lO_dataout;
	wire	wire_n0l0O_dataout;
	wire	wire_n0l0Oi_dataout;
	wire	wire_n0l0Ol_dataout;
	wire	wire_n0l0OO_dataout;
	wire	wire_n0l1i_dataout;
	wire	wire_n0l1l_dataout;
	wire	wire_n0l1O_dataout;
	wire	wire_n0lii_dataout;
	wire	wire_n0liiO_dataout;
	wire	wire_n0lil_dataout;
	wire	wire_n0liO_dataout;
	wire	wire_n0liOO_dataout;
	wire	wire_n0ll0i_dataout;
	wire	wire_n0lli_dataout;
	wire	wire_n0lll_dataout;
	wire	wire_n0llll_dataout;
	wire	wire_n0llO_dataout;
	wire	wire_n0lO1i_dataout;
	wire	wire_n0lOi_dataout;
	wire	wire_n0lOil_dataout;
	wire	wire_n0lOl_dataout;
	wire	wire_n0lOO_dataout;
	wire	wire_n0O00i_dataout;
	wire	wire_n0O00l_dataout;
	wire	wire_n0O00O_dataout;
	wire	wire_n0O01i_dataout;
	wire	wire_n0O01l_dataout;
	wire	wire_n0O01O_dataout;
	wire	wire_n0O0i_dataout;
	wire	wire_n0O0ii_dataout;
	wire	wire_n0O0il_dataout;
	wire	wire_n0O0l_dataout;
	wire	wire_n0O0lO_dataout;
	wire	wire_n0O0Oi_dataout;
	wire	wire_n0O0Ol_dataout;
	wire	wire_n0O0OO_dataout;
	wire	wire_n0O10i_dataout;
	wire	wire_n0O11O_dataout;
	wire	wire_n0O1i_dataout;
	wire	wire_n0O1il_dataout;
	wire	wire_n0O1l_dataout;
	wire	wire_n0O1ll_dataout;
	wire	wire_n0O1O_dataout;
	wire	wire_n0Oi0i_dataout;
	wire	wire_n0Oi0l_dataout;
	wire	wire_n0Oi0O_dataout;
	wire	wire_n0Oi1i_dataout;
	wire	wire_n0Oi1l_dataout;
	wire	wire_n0Oi1O_dataout;
	wire	wire_n0Oiii_dataout;
	wire	wire_n0Oiil_dataout;
	wire	wire_n0OiiO_dataout;
	wire	wire_n0Oili_dataout;
	wire	wire_n0Oill_dataout;
	wire	wire_n0OilO_dataout;
	wire	wire_n0OiOi_dataout;
	wire	wire_n0OiOl_dataout;
	wire	wire_n0OiOO_dataout;
	wire	wire_n0Ol0i_dataout;
	wire	wire_n0Ol0l_dataout;
	wire	wire_n0Ol0O_dataout;
	wire	wire_n0Ol1i_dataout;
	wire	wire_n0Ol1l_dataout;
	wire	wire_n0Ol1O_dataout;
	wire	wire_n0Olii_dataout;
	wire	wire_n0Olil_dataout;
	wire	wire_n0OliO_dataout;
	wire	wire_n0Olli_dataout;
	wire	wire_n0Olll_dataout;
	wire	wire_n0OllO_dataout;
	wire	wire_n0OlOi_dataout;
	wire	wire_n100i_dataout;
	wire	wire_n100l_dataout;
	wire	wire_n100O_dataout;
	wire	wire_n101i_dataout;
	wire	wire_n101l_dataout;
	wire	wire_n101O_dataout;
	wire	wire_n10i_dataout;
	wire	wire_n10ii_dataout;
	wire	wire_n10il_dataout;
	wire	wire_n10iO_dataout;
	wire	wire_n10l_dataout;
	wire	wire_n10li_dataout;
	wire	wire_n10ll_dataout;
	wire	wire_n10lO_dataout;
	wire	wire_n10O_dataout;
	wire	wire_n10Oi_dataout;
	wire	wire_n10Ol_dataout;
	wire	wire_n10OO_dataout;
	wire	wire_n11Oi_dataout;
	wire	wire_n11Ol_dataout;
	wire	wire_n11OO_dataout;
	wire	wire_n1i0i_dataout;
	wire	wire_n1i0l_dataout;
	wire	wire_n1i0O_dataout;
	wire	wire_n1i1i_dataout;
	wire	wire_n1i1l_dataout;
	wire	wire_n1i1O_dataout;
	wire	wire_n1ii_dataout;
	wire	wire_n1iii_dataout;
	wire	wire_n1iil_dataout;
	wire	wire_n1iiO_dataout;
	wire	wire_n1ili_dataout;
	wire	wire_n1ill_dataout;
	wire	wire_n1ilO_dataout;
	wire	wire_n1iOi_dataout;
	wire	wire_n1iOl_dataout;
	wire	wire_n1iOO_dataout;
	wire	wire_n1l0i_dataout;
	wire	wire_n1l0l_dataout;
	wire	wire_n1l0O_dataout;
	wire	wire_n1l1i_dataout;
	wire	wire_n1l1l_dataout;
	wire	wire_n1l1O_dataout;
	wire	wire_n1lii_dataout;
	wire	wire_n1lil_dataout;
	wire	wire_n1liO_dataout;
	wire	wire_n1lli_dataout;
	wire	wire_n1lll_dataout;
	wire	wire_n1llO_dataout;
	wire	wire_n1lO_dataout;
	wire	wire_n1lOi_dataout;
	wire	wire_n1lOl_dataout;
	wire	wire_n1lOO_dataout;
	wire	wire_n1O0i_dataout;
	wire	wire_n1O0l_dataout;
	wire	wire_n1O0O_dataout;
	wire	wire_n1O1i_dataout;
	wire	wire_n1O1l_dataout;
	wire	wire_n1O1O_dataout;
	wire	wire_n1Oi_dataout;
	wire	wire_n1Oii_dataout;
	wire	wire_n1Oil_dataout;
	wire	wire_n1OiO_dataout;
	wire	wire_n1Oli_dataout;
	wire	wire_n1Oll_dataout;
	wire	wire_n1OlO_dataout;
	wire	wire_n1OOi_dataout;
	wire	wire_n1OOl_dataout;
	wire	wire_n1OOO_dataout;
	wire	wire_ni000i_dataout;
	wire	wire_ni001l_dataout;
	wire	wire_ni0ill_dataout;
	wire	wire_ni0ilO_dataout;
	wire	wire_ni0iOi_dataout;
	wire	wire_ni0iOl_dataout;
	wire	wire_ni0iOO_dataout;
	wire	wire_ni0l0i_dataout;
	wire	wire_ni0l0l_dataout;
	wire	wire_ni0l0O_dataout;
	wire	wire_ni0l1i_dataout;
	wire	wire_ni0l1l_dataout;
	wire	wire_ni0l1O_dataout;
	wire	wire_ni0li_dataout;
	wire	wire_ni0lii_dataout;
	wire	wire_ni0lil_dataout;
	wire	wire_ni0liO_dataout;
	wire	wire_ni0ll_dataout;
	wire	wire_ni0lli_dataout;
	wire	wire_ni0lll_dataout;
	wire	wire_ni0llO_dataout;
	wire	wire_ni0lO_dataout;
	wire	wire_ni0lOi_dataout;
	wire	wire_ni0lOl_dataout;
	wire	wire_ni0lOO_dataout;
	wire	wire_ni0Oi_dataout;
	wire	wire_ni0Ol_dataout;
	wire	wire_ni0OO_dataout;
	wire	wire_nii00i_dataout;
	wire	wire_nii00l_dataout;
	wire	wire_nii00O_dataout;
	wire	wire_nii01i_dataout;
	wire	wire_nii01l_dataout;
	wire	wire_nii01O_dataout;
	wire	wire_nii0i_dataout;
	wire	wire_nii0ii_dataout;
	wire	wire_nii0il_dataout;
	wire	wire_nii0iO_dataout;
	wire	wire_nii0l_dataout;
	wire	wire_nii0li_dataout;
	wire	wire_nii0ll_dataout;
	wire	wire_nii0lO_dataout;
	wire	wire_nii0O_dataout;
	wire	wire_nii1i_dataout;
	wire	wire_nii1il_dataout;
	wire	wire_nii1iO_dataout;
	wire	wire_nii1l_dataout;
	wire	wire_nii1li_dataout;
	wire	wire_nii1ll_dataout;
	wire	wire_nii1lO_dataout;
	wire	wire_nii1O_dataout;
	wire	wire_nii1Oi_dataout;
	wire	wire_nii1Ol_dataout;
	wire	wire_nii1OO_dataout;
	wire	wire_niiii_dataout;
	wire	wire_niiil_dataout;
	wire	wire_niiiO_dataout;
	wire	wire_niil0i_dataout;
	wire	wire_niil0l_dataout;
	wire	wire_niil0O_dataout;
	wire	wire_niili_dataout;
	wire	wire_niilii_dataout;
	wire	wire_niilil_dataout;
	wire	wire_niiliO_dataout;
	wire	wire_niill_dataout;
	wire	wire_niilli_dataout;
	wire	wire_niilll_dataout;
	wire	wire_niillO_dataout;
	wire	wire_niilO_dataout;
	wire	wire_niilOi_dataout;
	wire	wire_niilOl_dataout;
	wire	wire_niilOO_dataout;
	wire	wire_niiO0i_dataout;
	wire	wire_niiO0l_dataout;
	wire	wire_niiO0O_dataout;
	wire	wire_niiO1i_dataout;
	wire	wire_niiO1l_dataout;
	wire	wire_niiO1O_dataout;
	wire	wire_niiOi_dataout;
	wire	wire_niiOii_dataout;
	wire	wire_niiOil_dataout;
	wire	wire_niiOl_dataout;
	wire	wire_niiOO_dataout;
	wire	wire_nil0i_dataout;
	wire	wire_nil0l_dataout;
	wire	wire_nil0O_dataout;
	wire	wire_nil1i_dataout;
	wire	wire_nil1l_dataout;
	wire	wire_nil1O_dataout;
	wire	wire_nilii_dataout;
	wire	wire_nilil_dataout;
	wire	wire_niliO_dataout;
	wire	wire_nilli_dataout;
	wire	wire_nilll_dataout;
	wire	wire_nillO_dataout;
	wire	wire_nilOi_dataout;
	wire	wire_nilOl_dataout;
	wire	wire_nilOO_dataout;
	wire	wire_niO00i_dataout;
	wire	wire_niO00l_dataout;
	wire	wire_niO00O_dataout;
	wire	wire_niO01i_dataout;
	wire	wire_niO01l_dataout;
	wire	wire_niO01O_dataout;
	wire	wire_niO0i_dataout;
	wire	wire_niO0ii_dataout;
	wire	wire_niO0il_dataout;
	wire	wire_niO0iO_dataout;
	wire	wire_niO0l_dataout;
	wire	wire_niO0li_dataout;
	wire	wire_niO0ll_dataout;
	wire	wire_niO0lO_dataout;
	wire	wire_niO0O_dataout;
	wire	wire_niO0Oi_dataout;
	wire	wire_niO0Ol_dataout;
	wire	wire_niO0OO_dataout;
	wire	wire_niO1i_dataout;
	wire	wire_niO1l_dataout;
	wire	wire_niO1O_dataout;
	wire	wire_niO1OO_dataout;
	wire	wire_niOi0i_dataout;
	wire	wire_niOi0l_dataout;
	wire	wire_niOi0O_dataout;
	wire	wire_niOi1i_dataout;
	wire	wire_niOi1l_dataout;
	wire	wire_niOi1O_dataout;
	wire	wire_niOii_dataout;
	wire	wire_niOiii_dataout;
	wire	wire_niOiil_dataout;
	wire	wire_niOiiO_dataout;
	wire	wire_niOil_dataout;
	wire	wire_niOili_dataout;
	wire	wire_niOill_dataout;
	wire	wire_niOilO_dataout;
	wire	wire_niOiO_dataout;
	wire	wire_niOiOi_dataout;
	wire	wire_niOiOl_dataout;
	wire	wire_niOiOO_dataout;
	wire	wire_niOl0i_dataout;
	wire	wire_niOl0l_dataout;
	wire	wire_niOl0O_dataout;
	wire	wire_niOl1i_dataout;
	wire	wire_niOl1l_dataout;
	wire	wire_niOl1O_dataout;
	wire	wire_niOli_dataout;
	wire	wire_niOlii_dataout;
	wire	wire_niOlil_dataout;
	wire	wire_niOliO_dataout;
	wire	wire_niOll_dataout;
	wire	wire_niOlli_dataout;
	wire	wire_niOlll_dataout;
	wire	wire_niOllO_dataout;
	wire	wire_niOlO_dataout;
	wire	wire_niOlOi_dataout;
	wire	wire_niOlOl_dataout;
	wire	wire_niOlOO_dataout;
	wire	wire_niOO0i_dataout;
	wire	wire_niOO0l_dataout;
	wire	wire_niOO0O_dataout;
	wire	wire_niOO1i_dataout;
	wire	wire_niOO1l_dataout;
	wire	wire_niOO1O_dataout;
	wire	wire_niOOi_dataout;
	wire	wire_niOOii_dataout;
	wire	wire_niOOil_dataout;
	wire	wire_niOOiO_dataout;
	wire	wire_niOOl_dataout;
	wire	wire_niOOli_dataout;
	wire	wire_niOOll_dataout;
	wire	wire_niOOlO_dataout;
	wire	wire_niOOO_dataout;
	wire	wire_niOOOi_dataout;
	wire	wire_niOOOl_dataout;
	wire	wire_niOOOO_dataout;
	wire	wire_nl000i_dataout;
	wire	wire_nl000l_dataout;
	wire	wire_nl000O_dataout;
	wire	wire_nl001i_dataout;
	wire	wire_nl001l_dataout;
	wire	wire_nl001O_dataout;
	wire	wire_nl00ii_dataout;
	wire	wire_nl00il_dataout;
	wire	wire_nl00iO_dataout;
	wire	wire_nl010i_dataout;
	wire	wire_nl010l_dataout;
	wire	wire_nl010O_dataout;
	wire	wire_nl011i_dataout;
	wire	wire_nl011l_dataout;
	wire	wire_nl011O_dataout;
	wire	wire_nl01ii_dataout;
	wire	wire_nl01il_dataout;
	wire	wire_nl01iO_dataout;
	wire	wire_nl01li_dataout;
	wire	wire_nl01ll_dataout;
	wire	wire_nl01lO_dataout;
	wire	wire_nl01Oi_dataout;
	wire	wire_nl01Ol_dataout;
	wire	wire_nl01OO_dataout;
	wire	wire_nl0ll_dataout;
	wire	wire_nl0lO_dataout;
	wire	wire_nl0Oi_dataout;
	wire	wire_nl0OlO_dataout;
	wire	wire_nl0OO_dataout;
	wire	wire_nl0OOi_dataout;
	wire	wire_nl0OOl_dataout;
	wire	wire_nl0OOO_dataout;
	wire	wire_nl100i_dataout;
	wire	wire_nl100l_dataout;
	wire	wire_nl100O_dataout;
	wire	wire_nl101i_dataout;
	wire	wire_nl101l_dataout;
	wire	wire_nl101O_dataout;
	wire	wire_nl10i_dataout;
	wire	wire_nl10ii_dataout;
	wire	wire_nl10il_dataout;
	wire	wire_nl10iO_dataout;
	wire	wire_nl10l_dataout;
	wire	wire_nl10li_dataout;
	wire	wire_nl10ll_dataout;
	wire	wire_nl10lO_dataout;
	wire	wire_nl10O_dataout;
	wire	wire_nl10Oi_dataout;
	wire	wire_nl10Ol_dataout;
	wire	wire_nl10OO_dataout;
	wire	wire_nl110i_dataout;
	wire	wire_nl110l_dataout;
	wire	wire_nl110O_dataout;
	wire	wire_nl111i_dataout;
	wire	wire_nl111l_dataout;
	wire	wire_nl111O_dataout;
	wire	wire_nl11i_dataout;
	wire	wire_nl11ii_dataout;
	wire	wire_nl11il_dataout;
	wire	wire_nl11iO_dataout;
	wire	wire_nl11l_dataout;
	wire	wire_nl11li_dataout;
	wire	wire_nl11ll_dataout;
	wire	wire_nl11lO_dataout;
	wire	wire_nl11O_dataout;
	wire	wire_nl11Oi_dataout;
	wire	wire_nl11Ol_dataout;
	wire	wire_nl11OO_dataout;
	wire	wire_nl1i0i_dataout;
	wire	wire_nl1i0l_dataout;
	wire	wire_nl1i0O_dataout;
	wire	wire_nl1i1i_dataout;
	wire	wire_nl1i1l_dataout;
	wire	wire_nl1i1O_dataout;
	wire	wire_nl1ii_dataout;
	wire	wire_nl1iii_dataout;
	wire	wire_nl1iil_dataout;
	wire	wire_nl1iiO_dataout;
	wire	wire_nl1il_dataout;
	wire	wire_nl1ili_dataout;
	wire	wire_nl1ill_dataout;
	wire	wire_nl1ilO_dataout;
	wire	wire_nl1iO_dataout;
	wire	wire_nl1iOi_dataout;
	wire	wire_nl1iOl_dataout;
	wire	wire_nl1iOO_dataout;
	wire	wire_nl1l0i_dataout;
	wire	wire_nl1l0l_dataout;
	wire	wire_nl1l0O_dataout;
	wire	wire_nl1l1i_dataout;
	wire	wire_nl1l1l_dataout;
	wire	wire_nl1l1O_dataout;
	wire	wire_nl1li_dataout;
	wire	wire_nl1lii_dataout;
	wire	wire_nl1lil_dataout;
	wire	wire_nl1liO_dataout;
	wire	wire_nl1ll_dataout;
	wire	wire_nl1lli_dataout;
	wire	wire_nl1lll_dataout;
	wire	wire_nl1llO_dataout;
	wire	wire_nl1lO_dataout;
	wire	wire_nl1lOi_dataout;
	wire	wire_nl1lOl_dataout;
	wire	wire_nl1lOO_dataout;
	wire	wire_nl1O0i_dataout;
	wire	wire_nl1O0l_dataout;
	wire	wire_nl1O0O_dataout;
	wire	wire_nl1O1i_dataout;
	wire	wire_nl1O1l_dataout;
	wire	wire_nl1O1O_dataout;
	wire	wire_nl1Oi_dataout;
	wire	wire_nl1Oii_dataout;
	wire	wire_nl1Oil_dataout;
	wire	wire_nl1OiO_dataout;
	wire	wire_nl1Oli_dataout;
	wire	wire_nl1Oll_dataout;
	wire	wire_nl1OlO_dataout;
	wire	wire_nl1OOi_dataout;
	wire	wire_nl1OOl_dataout;
	wire	wire_nl1OOO_dataout;
	wire	wire_nli00i_dataout;
	wire	wire_nli00l_dataout;
	wire	wire_nli00O_dataout;
	wire	wire_nli01i_dataout;
	wire	wire_nli01l_dataout;
	wire	wire_nli01O_dataout;
	wire	wire_nli0i_dataout;
	wire	wire_nli0ii_dataout;
	wire	wire_nli0il_dataout;
	wire	wire_nli0iO_dataout;
	wire	wire_nli0l_dataout;
	wire	wire_nli0li_dataout;
	wire	wire_nli0ll_dataout;
	wire	wire_nli0lO_dataout;
	wire	wire_nli0Oi_dataout;
	wire	wire_nli0Ol_dataout;
	wire	wire_nli0OO_dataout;
	wire	wire_nli10i_dataout;
	wire	wire_nli10l_dataout;
	wire	wire_nli10O_dataout;
	wire	wire_nli11i_dataout;
	wire	wire_nli11l_dataout;
	wire	wire_nli11O_dataout;
	wire	wire_nli1i_dataout;
	wire	wire_nli1ii_dataout;
	wire	wire_nli1il_dataout;
	wire	wire_nli1iO_dataout;
	wire	wire_nli1li_dataout;
	wire	wire_nli1ll_dataout;
	wire	wire_nli1lO_dataout;
	wire	wire_nli1Oi_dataout;
	wire	wire_nli1Ol_dataout;
	wire	wire_nli1OO_dataout;
	wire	wire_nlii0i_dataout;
	wire	wire_nlii0l_dataout;
	wire	wire_nlii0O_dataout;
	wire	wire_nlii1i_dataout;
	wire	wire_nlii1l_dataout;
	wire	wire_nlii1O_dataout;
	wire	wire_nliii_dataout;
	wire	wire_nliiii_dataout;
	wire	wire_nliiil_dataout;
	wire	wire_nliiiO_dataout;
	wire	wire_nliil_dataout;
	wire	wire_nliili_dataout;
	wire	wire_nliill_dataout;
	wire	wire_nliilO_dataout;
	wire	wire_nliiOi_dataout;
	wire	wire_nliiOl_dataout;
	wire	wire_nliiOO_dataout;
	wire	wire_nlil0i_dataout;
	wire	wire_nlil0l_dataout;
	wire	wire_nlil0O_dataout;
	wire	wire_nlil1i_dataout;
	wire	wire_nlil1l_dataout;
	wire	wire_nlil1O_dataout;
	wire	wire_nlili_dataout;
	wire	wire_nlilii_dataout;
	wire	wire_nlilil_dataout;
	wire	wire_nliliO_dataout;
	wire	wire_nlill_dataout;
	wire	wire_nlilli_dataout;
	wire	wire_nlilll_dataout;
	wire	wire_nlilO_dataout;
	wire	wire_nliOi_dataout;
	wire	wire_nliOl_dataout;
	wire	wire_nliOO_dataout;
	wire	wire_nll0i_dataout;
	wire	wire_nll0l_dataout;
	wire	wire_nll0O_dataout;
	wire	wire_nll1i_dataout;
	wire	wire_nll1l_dataout;
	wire	wire_nll1O_dataout;
	wire	wire_nllii_dataout;
	wire	wire_nllil_dataout;
	wire	wire_nlliO_dataout;
	wire	wire_nllli_dataout;
	wire	wire_nllll_dataout;
	wire	wire_nlllO_dataout;
	wire	wire_nllOi_dataout;
	wire	wire_nllOl_dataout;
	wire	wire_nllOO_dataout;
	wire	wire_nlO0i_dataout;
	wire	wire_nlO1i_dataout;
	wire	wire_nlO1l_dataout;
	wire	wire_nlO1O_dataout;
	wire	wire_nlOii_dataout;
	wire	wire_nlOil_dataout;
	wire	wire_nlOiO_dataout;
	wire	wire_nlOli_dataout;
	wire	wire_nlOOi_dataout;
	wire	wire_nlOOl_dataout;
	wire	wire_nlOOO_dataout;
	wire  [31:0]   wire_n0O0O_o;
	wire  [0:0]   wire_n11i_o;
	wire  [20:0]   wire_nlliOO_o;
	wire  [3:0]   wire_nlO0l_o;
	wire  [33:0]   wire_nlOlll_o;
	wire  wire_n0O1lO_o;
	wire  wire_n0O1Oi_o;
	wire  wire_n0O1Ol_o;
	wire  wire_n0O1OO_o;
	wire  wire_n0illi_o;
	wire  wire_n0illl_o;
	wire  wire_n0illO_o;
	wire  wire_n0ilOi_o;
	wire  wire_n0ilil_almost_full;
	wire  wire_n0ilil_empty;
	wire  [21:0]   wire_n0ilil_q;
	wire  [2:0]   wire_n0ilil_usedw;
	wire  n0i0li;
	wire  n0i0ll;
	wire  n0i0lO;
	wire  n0i0Oi;
	wire  n0i0Ol;
	wire  n0i0OO;
	wire  n0ii0i;
	wire  n0ii0l;
	wire  n0ii0O;
	wire  n0ii1i;
	wire  n0ii1l;
	wire  n0ii1O;
	wire  n0iiii;
	wire  n0iiil;
	wire  n0iiiO;
	wire  n0iili;
	wire  n0iill;
	wire  n0iilO;
	wire  n0iiOi;
	wire  n0iiOl;
	wire  n0iiOO;
	wire  n0il0i;
	wire  n0il0l;
	wire  n0il1i;
	wire  n0il1l;
	wire  n0il1O;

	altshift_taps   ni0O1l
	( 
	.clken((~ ni001i)),
	.clock(clk),
	.shiftin({wire_nii1il_dataout, wire_nii1iO_dataout, wire_nii1li_dataout, wire_nii1ll_dataout, wire_nii1lO_dataout, wire_nii1Oi_dataout, wire_nii1Ol_dataout, wire_nii1OO_dataout, wire_nii01i_dataout, wire_nii01l_dataout, wire_nii01O_dataout, wire_nii00i_dataout, wire_nii00l_dataout, wire_nii00O_dataout, wire_nii0ii_dataout, wire_nii0il_dataout, wire_nii0iO_dataout, wire_nii0li_dataout, wire_nii0ll_dataout, wire_nii0lO_dataout}),
	.shiftout(),
	.taps(wire_ni0O1l_taps),
	.aclr()
	);
	defparam
		ni0O1l.intended_device_family = "Cyclone IV E",
		ni0O1l.number_of_taps = 1,
		ni0O1l.tap_distance = 3,
		ni0O1l.width = 20,
		ni0O1l.lpm_hint = "WIDTH_BYTEENA=1";
	altshift_taps   nii0Oi
	( 
	.clken((~ ni001i)),
	.clock(clk),
	.shiftin({wire_niil0i_dataout, wire_niil0l_dataout, wire_niil0O_dataout, wire_niilii_dataout, wire_niilil_dataout, wire_niiliO_dataout, wire_niilli_dataout, wire_niilll_dataout, wire_niillO_dataout, wire_niilOi_dataout, wire_niilOl_dataout, wire_niilOO_dataout, wire_niiO1i_dataout, wire_niiO1l_dataout, wire_niiO1O_dataout, wire_niiO0i_dataout, wire_niiO0l_dataout, wire_niiO0O_dataout, wire_niiOii_dataout, wire_niiOil_dataout}),
	.shiftout(),
	.taps(wire_nii0Oi_taps),
	.aclr()
	);
	defparam
		nii0Oi.intended_device_family = "Cyclone IV E",
		nii0Oi.number_of_taps = 1,
		nii0Oi.tap_distance = 3,
		nii0Oi.width = 20,
		nii0Oi.lpm_hint = "WIDTH_BYTEENA=1";
	initial
	begin
		n0ilOO = 0;
	end
	always @ ( posedge clk or  negedge reset_n)
	begin
		if (reset_n == 1'b0) 
		begin
			n0ilOO <= 0;
		end
		else if  (wire_n0ilOl_ENA == 1'b1) 
		begin
			n0ilOO <= n0il0l;
		end
	end
	assign
		wire_n0ilOl_ENA = wire_n0ilil_usedw[0];
	initial
	begin
		n0iliO = 0;
		n0iOll = 0;
		n0iOlO = 0;
		n0iOOi = 0;
		n0iOOl = 0;
		n0iOOO = 0;
		n0l10i = 0;
		n0l10l = 0;
		n0l10O = 0;
		n0l11i = 0;
		n0l11l = 0;
		n0l11O = 0;
		n0l1ii = 0;
		n0l1il = 0;
		n0l1iO = 0;
		n0l1li = 0;
		n0l1ll = 0;
		n0l1lO = 0;
		n0l1Oi = 0;
		n0l1OO = 0;
	end
	always @ ( posedge clk or  negedge reset_n)
	begin
		if (reset_n == 1'b0) 
		begin
			n0iliO <= 0;
			n0iOll <= 0;
			n0iOlO <= 0;
			n0iOOi <= 0;
			n0iOOl <= 0;
			n0iOOO <= 0;
			n0l10i <= 0;
			n0l10l <= 0;
			n0l10O <= 0;
			n0l11i <= 0;
			n0l11l <= 0;
			n0l11O <= 0;
			n0l1ii <= 0;
			n0l1il <= 0;
			n0l1iO <= 0;
			n0l1li <= 0;
			n0l1ll <= 0;
			n0l1lO <= 0;
			n0l1Oi <= 0;
			n0l1OO <= 0;
		end
		else if  (n0ii1O == 1'b1) 
		begin
			n0iliO <= ast_sink_data[0];
			n0iOll <= ast_sink_data[1];
			n0iOlO <= ast_sink_data[2];
			n0iOOi <= ast_sink_data[3];
			n0iOOl <= ast_sink_data[4];
			n0iOOO <= ast_sink_data[5];
			n0l10i <= ast_sink_data[9];
			n0l10l <= ast_sink_data[10];
			n0l10O <= ast_sink_data[11];
			n0l11i <= ast_sink_data[6];
			n0l11l <= ast_sink_data[7];
			n0l11O <= ast_sink_data[8];
			n0l1ii <= ast_sink_data[12];
			n0l1il <= ast_sink_data[13];
			n0l1iO <= ast_sink_data[14];
			n0l1li <= ast_sink_data[15];
			n0l1ll <= ast_sink_data[16];
			n0l1lO <= ast_sink_data[17];
			n0l1Oi <= ast_sink_data[18];
			n0l1OO <= ast_sink_data[19];
		end
	end
	initial
	begin
		n0O11l = 0;
	end
	always @ ( posedge clk or  negedge reset_n)
	begin
		if (reset_n == 1'b0) 
		begin
			n0O11l <= 0;
		end
		else if  (n0iili == 1'b1) 
		begin
			n0O11l <= wire_n0O1ll_dataout;
		end
	end
	initial
	begin
		n000i = 0;
		n000l = 0;
		n000O = 0;
		n001i = 0;
		n001l = 0;
		n001O = 0;
		n00ii = 0;
		n00il = 0;
		n00iO = 0;
		n00li = 0;
		n00ll = 0;
		n00lO = 0;
		n00Oi = 0;
		n00Ol = 0;
		n00OO = 0;
		n010i = 0;
		n010l = 0;
		n010O = 0;
		n011O = 0;
		n01ii = 0;
		n01il = 0;
		n01iO = 0;
		n01li = 0;
		n01ll = 0;
		n01lO = 0;
		n01Oi = 0;
		n01Ol = 0;
		n01OO = 0;
		n0i1i = 0;
		n0i1l = 0;
		n0i1O = 0;
		n0Oil = 0;
		ni0O0i = 0;
		ni0O0l = 0;
		ni0O0O = 0;
		ni0O1O = 0;
		ni0Oii = 0;
		ni0Oil = 0;
		ni0OiO = 0;
		ni0Oli = 0;
		ni0Oll = 0;
		ni0OlO = 0;
		ni0OOi = 0;
		ni0OOl = 0;
		ni0OOO = 0;
		nii0Ol = 0;
		nii0OO = 0;
		nii10i = 0;
		nii10l = 0;
		nii10O = 0;
		nii11i = 0;
		nii11l = 0;
		nii11O = 0;
		nii1ii = 0;
		niii0i = 0;
		niii0l = 0;
		niii0O = 0;
		niii1i = 0;
		niii1l = 0;
		niii1O = 0;
		niiiii = 0;
		niiiil = 0;
		niiiiO = 0;
		niiili = 0;
		niiill = 0;
		niiilO = 0;
		niiiOi = 0;
		niiiOl = 0;
		niiiOO = 0;
		niil1i = 0;
		niil1l = 0;
		niil1O = 0;
		nll0li = 0;
		nll0ll = 0;
		nll0lO = 0;
		nll0Oi = 0;
		nll0Ol = 0;
		nll0OO = 0;
		nlli0i = 0;
		nlli0l = 0;
		nlli0O = 0;
		nlli1i = 0;
		nlli1l = 0;
		nlli1O = 0;
		nlliii = 0;
		nlliil = 0;
		nlliiO = 0;
		nllili = 0;
		nllill = 0;
		nllilO = 0;
		nlliOi = 0;
		nlliOl = 0;
		nlll1i = 0;
		nlO0il = 0;
		nlO0iO = 0;
		nlO0li = 0;
		nlO0ll = 0;
		nlO0lO = 0;
		nlO0Oi = 0;
		nlO0Ol = 0;
		nlO0OO = 0;
		nlOi0i = 0;
		nlOi0l = 0;
		nlOi0O = 0;
		nlOi1i = 0;
		nlOi1l = 0;
		nlOi1O = 0;
		nlOiii = 0;
		nlOiil = 0;
		nlOiiO = 0;
		nlOili = 0;
		nlOill = 0;
		nlOilO = 0;
		nlOiOi = 0;
		nlOiOl = 0;
		nlOiOO = 0;
		nlOl0i = 0;
		nlOl0l = 0;
		nlOl0O = 0;
		nlOl1i = 0;
		nlOl1l = 0;
		nlOl1O = 0;
		nlOlii = 0;
		nlOlil = 0;
		nlOliO = 0;
		nlOlli = 0;
	end
	always @ ( posedge clk)
	begin
		if (ni001i == 1'b0) 
		begin
			n000i <= wire_n0l0i_dataout;
			n000l <= wire_n0l1O_dataout;
			n000O <= wire_n0l1l_dataout;
			n001i <= wire_n0lii_dataout;
			n001l <= wire_n0l0O_dataout;
			n001O <= wire_n0l0l_dataout;
			n00ii <= wire_n0l1i_dataout;
			n00il <= wire_n0iOO_dataout;
			n00iO <= wire_n0iOl_dataout;
			n00li <= wire_n0iOi_dataout;
			n00ll <= wire_n0ilO_dataout;
			n00lO <= wire_n0ill_dataout;
			n00Oi <= wire_n0ili_dataout;
			n00Ol <= wire_n0iiO_dataout;
			n00OO <= wire_n0iil_dataout;
			n010i <= wire_n0O0i_dataout;
			n010l <= wire_n0O1O_dataout;
			n010O <= wire_n0O1l_dataout;
			n011O <= wire_n0O0l_dataout;
			n01ii <= wire_n0O1i_dataout;
			n01il <= wire_n0lOO_dataout;
			n01iO <= wire_n0lOl_dataout;
			n01li <= wire_n0lOi_dataout;
			n01ll <= wire_n0llO_dataout;
			n01lO <= wire_n0lll_dataout;
			n01Oi <= wire_n0lli_dataout;
			n01Ol <= wire_n0liO_dataout;
			n01OO <= wire_n0lil_dataout;
			n0i1i <= wire_n0iii_dataout;
			n0i1l <= wire_n0i0O_dataout;
			n0i1O <= wire_n0i0l_dataout;
			n0Oil <= wire_n0i0i_dataout;
			ni0O0i <= wire_ni0O1l_taps[1];
			ni0O0l <= wire_ni0O1l_taps[2];
			ni0O0O <= wire_ni0O1l_taps[3];
			ni0O1O <= wire_ni0O1l_taps[0];
			ni0Oii <= wire_ni0O1l_taps[4];
			ni0Oil <= wire_ni0O1l_taps[5];
			ni0OiO <= wire_ni0O1l_taps[6];
			ni0Oli <= wire_ni0O1l_taps[7];
			ni0Oll <= wire_ni0O1l_taps[8];
			ni0OlO <= wire_ni0O1l_taps[9];
			ni0OOi <= wire_ni0O1l_taps[10];
			ni0OOl <= wire_ni0O1l_taps[11];
			ni0OOO <= wire_ni0O1l_taps[12];
			nii0Ol <= wire_nii0Oi_taps[0];
			nii0OO <= wire_nii0Oi_taps[1];
			nii10i <= wire_ni0O1l_taps[16];
			nii10l <= wire_ni0O1l_taps[17];
			nii10O <= wire_ni0O1l_taps[18];
			nii11i <= wire_ni0O1l_taps[13];
			nii11l <= wire_ni0O1l_taps[14];
			nii11O <= wire_ni0O1l_taps[15];
			nii1ii <= wire_ni0O1l_taps[19];
			niii0i <= wire_nii0Oi_taps[5];
			niii0l <= wire_nii0Oi_taps[6];
			niii0O <= wire_nii0Oi_taps[7];
			niii1i <= wire_nii0Oi_taps[2];
			niii1l <= wire_nii0Oi_taps[3];
			niii1O <= wire_nii0Oi_taps[4];
			niiiii <= wire_nii0Oi_taps[8];
			niiiil <= wire_nii0Oi_taps[9];
			niiiiO <= wire_nii0Oi_taps[10];
			niiili <= wire_nii0Oi_taps[11];
			niiill <= wire_nii0Oi_taps[12];
			niiilO <= wire_nii0Oi_taps[13];
			niiiOi <= wire_nii0Oi_taps[14];
			niiiOl <= wire_nii0Oi_taps[15];
			niiiOO <= wire_nii0Oi_taps[16];
			niil1i <= wire_nii0Oi_taps[17];
			niil1l <= wire_nii0Oi_taps[18];
			niil1O <= wire_nii0Oi_taps[19];
			nll0li <= wire_nlliOO_o[20];
			nll0ll <= wire_nlliOO_o[19];
			nll0lO <= wire_nlliOO_o[18];
			nll0Oi <= wire_nlliOO_o[17];
			nll0Ol <= wire_nlliOO_o[16];
			nll0OO <= wire_nlliOO_o[15];
			nlli0i <= wire_nlliOO_o[11];
			nlli0l <= wire_nlliOO_o[10];
			nlli0O <= wire_nlliOO_o[9];
			nlli1i <= wire_nlliOO_o[14];
			nlli1l <= wire_nlliOO_o[13];
			nlli1O <= wire_nlliOO_o[12];
			nlliii <= wire_nlliOO_o[8];
			nlliil <= wire_nlliOO_o[7];
			nlliiO <= wire_nlliOO_o[6];
			nllili <= wire_nlliOO_o[5];
			nllill <= wire_nlliOO_o[4];
			nllilO <= wire_nlliOO_o[3];
			nlliOi <= wire_nlliOO_o[2];
			nlliOl <= wire_nlliOO_o[1];
			nlll1i <= wire_nlliOO_o[0];
			nlO0il <= wire_nlO0ii_result[32];
			nlO0iO <= wire_nlO0ii_result[31];
			nlO0li <= wire_nlO0ii_result[30];
			nlO0ll <= wire_nlO0ii_result[29];
			nlO0lO <= wire_nlO0ii_result[28];
			nlO0Oi <= wire_nlO0ii_result[27];
			nlO0Ol <= wire_nlO0ii_result[26];
			nlO0OO <= wire_nlO0ii_result[25];
			nlOi0i <= wire_nlO0ii_result[21];
			nlOi0l <= wire_nlO0ii_result[20];
			nlOi0O <= wire_nlO0ii_result[19];
			nlOi1i <= wire_nlO0ii_result[24];
			nlOi1l <= wire_nlO0ii_result[23];
			nlOi1O <= wire_nlO0ii_result[22];
			nlOiii <= wire_nlO0ii_result[18];
			nlOiil <= wire_nlO0ii_result[17];
			nlOiiO <= wire_nlO0ii_result[16];
			nlOili <= wire_nlO0ii_result[15];
			nlOill <= wire_nlO0ii_result[14];
			nlOilO <= wire_nlO0ii_result[13];
			nlOiOi <= wire_nlO0ii_result[12];
			nlOiOl <= wire_nlO0ii_result[11];
			nlOiOO <= wire_nlO0ii_result[10];
			nlOl0i <= wire_nlO0ii_result[6];
			nlOl0l <= wire_nlO0ii_result[5];
			nlOl0O <= wire_nlO0ii_result[4];
			nlOl1i <= wire_nlO0ii_result[9];
			nlOl1l <= wire_nlO0ii_result[8];
			nlOl1O <= wire_nlO0ii_result[7];
			nlOlii <= wire_nlO0ii_result[3];
			nlOlil <= wire_nlO0ii_result[2];
			nlOliO <= wire_nlO0ii_result[1];
			nlOlli <= wire_nlO0ii_result[0];
		end
	end
	initial
	begin
		n011l = 0;
		n0OiO = 0;
		n0Oli = 0;
		n0Oll = 0;
		n0OlO = 0;
		n0OOi = 0;
		n0OOl = 0;
		n0OOO = 0;
		n110i = 0;
		n110l = 0;
		n110O = 0;
		n111i = 0;
		n111l = 0;
		n111O = 0;
		n11ii = 0;
		n11il = 0;
		n11iO = 0;
		n11li = 0;
		n11ll = 0;
		n11lO = 0;
		n11O = 0;
		n1il = 0;
		n1iO = 0;
		n1ll = 0;
		ni00i = 0;
		ni00l = 0;
		ni00O = 0;
		ni01i = 0;
		ni01l = 0;
		ni01O = 0;
		ni0ii = 0;
		ni0il = 0;
		ni0iO = 0;
		ni10i = 0;
		ni10l = 0;
		ni10O = 0;
		ni11i = 0;
		ni11l = 0;
		ni11O = 0;
		ni1ii = 0;
		ni1il = 0;
		ni1iO = 0;
		ni1li = 0;
		ni1ll = 0;
		ni1lO = 0;
		ni1Oi = 0;
		ni1Ol = 0;
		ni1OO = 0;
		nillil = 0;
		nilliO = 0;
		nillli = 0;
		nillll = 0;
		nilllO = 0;
		nillOi = 0;
		nillOl = 0;
		nillOO = 0;
		nilO0i = 0;
		nilO0l = 0;
		nilO0O = 0;
		nilO1i = 0;
		nilO1l = 0;
		nilO1O = 0;
		nilOii = 0;
		nilOil = 0;
		nilOiO = 0;
		nilOli = 0;
		nilOll = 0;
		nilOlO = 0;
		nilOOi = 0;
		nilOOl = 0;
		nilOOO = 0;
		niO10l = 0;
		niO10O = 0;
		niO11i = 0;
		niO11l = 0;
		niO1ii = 0;
		niO1il = 0;
		niO1iO = 0;
		niO1li = 0;
		niO1ll = 0;
		niO1lO = 0;
		niO1Oi = 0;
		niO1Ol = 0;
		nl00i = 0;
		nl00l = 0;
		nl00li = 0;
		nl00ll = 0;
		nl00lO = 0;
		nl00O = 0;
		nl00Oi = 0;
		nl00Ol = 0;
		nl00OO = 0;
		nl01O = 0;
		nl0i0i = 0;
		nl0i0l = 0;
		nl0i1i = 0;
		nl0i1l = 0;
		nl0i1O = 0;
		nl0ii = 0;
		nl0iil = 0;
		nl0iiO = 0;
		nl0il = 0;
		nl0ili = 0;
		nl0ill = 0;
		nl0ilO = 0;
		nl0iO = 0;
		nl0iOi = 0;
		nl0iOl = 0;
		nl0iOO = 0;
		nl0l0i = 0;
		nl0l0l = 0;
		nl0l0O = 0;
		nl0l1i = 0;
		nl0l1l = 0;
		nl0l1O = 0;
		nl0li = 0;
		nl0lii = 0;
		nl0lil = 0;
		nl0liO = 0;
		nl0lli = 0;
		nl0lll = 0;
		nl0llO = 0;
		nl0lOi = 0;
		nl0lOl = 0;
		nl0lOO = 0;
		nl0O0i = 0;
		nl0O0l = 0;
		nl0O0O = 0;
		nl0O1i = 0;
		nl0O1l = 0;
		nl0O1O = 0;
		nl0Oii = 0;
		nl0Oil = 0;
		nl0OiO = 0;
		nl0Ol = 0;
		nl0Oli = 0;
		nl0Oll = 0;
		nl1OO = 0;
		nli0O = 0;
		nli1O = 0;
		nliiO = 0;
		nlilOi = 0;
		nliO0i = 0;
		nliO0l = 0;
		nliO0O = 0;
		nliO1i = 0;
		nliO1l = 0;
		nliO1O = 0;
		nliOii = 0;
		nliOil = 0;
		nliOiO = 0;
		nliOli = 0;
		nliOll = 0;
		nliOlO = 0;
		nliOOi = 0;
		nliOOl = 0;
		nliOOO = 0;
		nll10i = 0;
		nll11i = 0;
		nll11l = 0;
		nll11O = 0;
		nlO0O = 0;
		nlOllO = 0;
		nlOlO = 0;
		nlOlOi = 0;
		nlOlOl = 0;
		nlOlOO = 0;
		nlOO0i = 0;
		nlOO0l = 0;
		nlOO0O = 0;
		nlOO1i = 0;
		nlOO1l = 0;
		nlOO1O = 0;
		nlOOii = 0;
		nlOOil = 0;
		nlOOiO = 0;
		nlOOli = 0;
		nlOOll = 0;
		nlOOlO = 0;
		nlOOOi = 0;
		nlOOOl = 0;
		nlOOOO = 0;
	end
	always @ ( posedge clk)
	begin
		
		begin
			n011l <= wire_n11Oi_dataout;
			n0OiO <= wire_nilll_dataout;
			n0Oli <= wire_nilli_dataout;
			n0Oll <= wire_niliO_dataout;
			n0OlO <= wire_nilil_dataout;
			n0OOi <= wire_nilii_dataout;
			n0OOl <= wire_nil0O_dataout;
			n0OOO <= wire_nil0l_dataout;
			n110i <= wire_n10ii_dataout;
			n110l <= wire_n100O_dataout;
			n110O <= wire_n100l_dataout;
			n111i <= wire_n10li_dataout;
			n111l <= wire_n10iO_dataout;
			n111O <= wire_n10il_dataout;
			n11ii <= wire_n100i_dataout;
			n11il <= wire_n101O_dataout;
			n11iO <= wire_n101l_dataout;
			n11li <= wire_n101i_dataout;
			n11ll <= wire_n11OO_dataout;
			n11lO <= wire_n11Ol_dataout;
			n11O <= wire_nl0Oi_dataout;
			n1il <= wire_nlill_dataout;
			n1iO <= wire_n1lO_dataout;
			n1ll <= wire_nlilO_dataout;
			ni00i <= wire_nii1i_dataout;
			ni00l <= wire_ni0OO_dataout;
			ni00O <= wire_ni0Ol_dataout;
			ni01i <= wire_nii0i_dataout;
			ni01l <= wire_nii1O_dataout;
			ni01O <= wire_nii1l_dataout;
			ni0ii <= wire_ni0Oi_dataout;
			ni0il <= wire_ni0lO_dataout;
			ni0iO <= wire_ni0ll_dataout;
			ni10i <= wire_nil1i_dataout;
			ni10l <= wire_niiOO_dataout;
			ni10O <= wire_niiOl_dataout;
			ni11i <= wire_nil0i_dataout;
			ni11l <= wire_nil1O_dataout;
			ni11O <= wire_nil1l_dataout;
			ni1ii <= wire_niiOi_dataout;
			ni1il <= wire_niilO_dataout;
			ni1iO <= wire_niill_dataout;
			ni1li <= wire_niili_dataout;
			ni1ll <= wire_niiiO_dataout;
			ni1lO <= wire_niiil_dataout;
			ni1Oi <= wire_niiii_dataout;
			ni1Ol <= wire_nii0O_dataout;
			ni1OO <= wire_nii0l_dataout;
			nillil <= wire_nl100i_dataout;
			nilliO <= wire_nl101O_dataout;
			nillli <= wire_nl101l_dataout;
			nillll <= wire_nl101i_dataout;
			nilllO <= wire_nl11OO_dataout;
			nillOi <= wire_nl11Ol_dataout;
			nillOl <= wire_nl11Oi_dataout;
			nillOO <= wire_nl11lO_dataout;
			nilO0i <= wire_nl11il_dataout;
			nilO0l <= wire_nl11ii_dataout;
			nilO0O <= wire_nl110O_dataout;
			nilO1i <= wire_nl11ll_dataout;
			nilO1l <= wire_nl11li_dataout;
			nilO1O <= wire_nl11iO_dataout;
			nilOii <= wire_nl110l_dataout;
			nilOil <= wire_nl110i_dataout;
			nilOiO <= wire_nl111O_dataout;
			nilOli <= wire_niO1OO_dataout;
			nilOll <= wire_niO01i_dataout;
			nilOlO <= wire_niO01l_dataout;
			nilOOi <= wire_niO01O_dataout;
			nilOOl <= wire_niO00i_dataout;
			nilOOO <= wire_niO00l_dataout;
			niO10l <= wire_niO0il_dataout;
			niO10O <= wire_niO0iO_dataout;
			niO11i <= wire_niO00O_dataout;
			niO11l <= wire_niO0ii_dataout;
			niO1ii <= wire_niO0li_dataout;
			niO1il <= wire_niO0ll_dataout;
			niO1iO <= wire_niO0lO_dataout;
			niO1li <= wire_niO0Oi_dataout;
			niO1ll <= wire_niO0Ol_dataout;
			niO1lO <= wire_niO0OO_dataout;
			niO1Oi <= wire_niOi1i_dataout;
			niO1Ol <= wire_niOi1l_dataout;
			nl00i <= wire_nlOil_dataout;
			nl00l <= wire_nlOii_dataout;
			nl00li <= wire_niOi1O_dataout;
			nl00ll <= wire_niOi0i_dataout;
			nl00lO <= wire_niOi0l_dataout;
			nl00O <= wire_nllii_dataout;
			nl00Oi <= wire_niOi0O_dataout;
			nl00Ol <= wire_niOiii_dataout;
			nl00OO <= wire_niOiil_dataout;
			nl01O <= wire_n10l_dataout;
			nl0i0i <= wire_niOilO_dataout;
			nl0i0l <= wire_niOiOi_dataout;
			nl0i1i <= wire_niOiiO_dataout;
			nl0i1l <= wire_niOili_dataout;
			nl0i1O <= wire_niOill_dataout;
			nl0ii <= wire_nll0O_dataout;
			nl0iil <= wire_niOiOl_dataout;
			nl0iiO <= wire_niOiOO_dataout;
			nl0il <= wire_nll0l_dataout;
			nl0ili <= wire_niOl1i_dataout;
			nl0ill <= wire_niOl1l_dataout;
			nl0ilO <= wire_niOl1O_dataout;
			nl0iO <= wire_nliOi_dataout;
			nl0iOi <= wire_niOl0i_dataout;
			nl0iOl <= wire_niOl0l_dataout;
			nl0iOO <= wire_niOl0O_dataout;
			nl0l0i <= wire_niOlli_dataout;
			nl0l0l <= wire_niOlll_dataout;
			nl0l0O <= wire_niOllO_dataout;
			nl0l1i <= wire_niOlii_dataout;
			nl0l1l <= wire_niOlil_dataout;
			nl0l1O <= wire_niOliO_dataout;
			nl0li <= wire_nl0OO_dataout;
			nl0lii <= wire_niOlOi_dataout;
			nl0lil <= wire_niOlOl_dataout;
			nl0liO <= wire_niOlOO_dataout;
			nl0lli <= wire_niOO1i_dataout;
			nl0lll <= wire_niOO1l_dataout;
			nl0llO <= wire_niOO1O_dataout;
			nl0lOi <= wire_niOO0i_dataout;
			nl0lOl <= wire_niOO0l_dataout;
			nl0lOO <= wire_niOO0O_dataout;
			nl0O0i <= wire_niOOli_dataout;
			nl0O0l <= wire_niOOll_dataout;
			nl0O0O <= wire_niOOlO_dataout;
			nl0O1i <= wire_niOOii_dataout;
			nl0O1l <= wire_niOOil_dataout;
			nl0O1O <= wire_niOOiO_dataout;
			nl0Oii <= wire_niOOOi_dataout;
			nl0Oil <= wire_niOOOl_dataout;
			nl0OiO <= wire_niOOOO_dataout;
			nl0Ol <= wire_nli0i_dataout;
			nl0Oli <= wire_nl111i_dataout;
			nl0Oll <= wire_nl111l_dataout;
			nl1OO <= wire_ni0li_dataout;
			nli0O <= wire_nlili_dataout;
			nli1O <= wire_nliii_dataout;
			nliiO <= wire_nll0i_dataout;
			nlilOi <= wire_nl0OlO_dataout;
			nliO0i <= wire_nli11i_dataout;
			nliO0l <= wire_nli11l_dataout;
			nliO0O <= wire_nli11O_dataout;
			nliO1i <= wire_nl0OOi_dataout;
			nliO1l <= wire_nl0OOl_dataout;
			nliO1O <= wire_nl0OOO_dataout;
			nliOii <= wire_nli10i_dataout;
			nliOil <= wire_nli10l_dataout;
			nliOiO <= wire_nli10O_dataout;
			nliOli <= wire_nli1ii_dataout;
			nliOll <= wire_nli1il_dataout;
			nliOlO <= wire_nli1iO_dataout;
			nliOOi <= wire_nli1li_dataout;
			nliOOl <= wire_nli1ll_dataout;
			nliOOO <= wire_nli1lO_dataout;
			nll10i <= wire_nli01i_dataout;
			nll11i <= wire_nli1Oi_dataout;
			nll11l <= wire_nli1Ol_dataout;
			nll11O <= wire_nli1OO_dataout;
			nlO0O <= wire_nlOOi_dataout;
			nlOllO <= wire_n1iOl_dataout;
			nlOlO <= wire_n10i_dataout;
			nlOlOi <= wire_n1iOi_dataout;
			nlOlOl <= wire_n1ilO_dataout;
			nlOlOO <= wire_n1ill_dataout;
			nlOO0i <= wire_n1iii_dataout;
			nlOO0l <= wire_n1i0O_dataout;
			nlOO0O <= wire_n1i0l_dataout;
			nlOO1i <= wire_n1ili_dataout;
			nlOO1l <= wire_n1iiO_dataout;
			nlOO1O <= wire_n1iil_dataout;
			nlOOii <= wire_n1i0i_dataout;
			nlOOil <= wire_n1i1O_dataout;
			nlOOiO <= wire_n1i1l_dataout;
			nlOOli <= wire_n1i1i_dataout;
			nlOOll <= wire_n10OO_dataout;
			nlOOlO <= wire_n10Ol_dataout;
			nlOOOi <= wire_n10Oi_dataout;
			nlOOOl <= wire_n10lO_dataout;
			nlOOOO <= wire_n10ll_dataout;
		end
	end
	initial
	begin
		ni010i = 0;
		ni010l = 0;
		ni010O = 0;
		ni011i = 0;
		ni011l = 0;
		ni011O = 0;
		ni01ii = 0;
		ni01il = 0;
		ni01li = 0;
		ni1lil = 0;
		ni1liO = 0;
		ni1lli = 0;
		ni1lll = 0;
		ni1llO = 0;
		ni1lOi = 0;
		ni1lOl = 0;
		ni1lOO = 0;
		ni1O0i = 0;
		ni1O0l = 0;
		ni1O0O = 0;
		ni1O1i = 0;
		ni1O1l = 0;
		ni1O1O = 0;
		ni1Oii = 0;
		ni1Oil = 0;
		ni1OiO = 0;
		ni1Oli = 0;
		ni1Oll = 0;
		ni1OlO = 0;
		ni1OOi = 0;
		ni1OOl = 0;
		ni1OOO = 0;
	end
	always @ ( posedge clk or  negedge reset_n)
	begin
		if (reset_n == 1'b0) 
		begin
			ni010i <= 0;
			ni010l <= 0;
			ni010O <= 0;
			ni011i <= 0;
			ni011l <= 0;
			ni011O <= 0;
			ni01ii <= 0;
			ni01il <= 0;
			ni01li <= 0;
			ni1lil <= 0;
			ni1liO <= 0;
			ni1lli <= 0;
			ni1lll <= 0;
			ni1llO <= 0;
			ni1lOi <= 0;
			ni1lOl <= 0;
			ni1lOO <= 0;
			ni1O0i <= 0;
			ni1O0l <= 0;
			ni1O0O <= 0;
			ni1O1i <= 0;
			ni1O1l <= 0;
			ni1O1O <= 0;
			ni1Oii <= 0;
			ni1Oil <= 0;
			ni1OiO <= 0;
			ni1Oli <= 0;
			ni1Oll <= 0;
			ni1OlO <= 0;
			ni1OOi <= 0;
			ni1OOl <= 0;
			ni1OOO <= 0;
		end
		else if  (wire_n0O1Ol_o == 1'b1) 
		begin
			ni010i <= wire_n0Olil_dataout;
			ni010l <= wire_n0OliO_dataout;
			ni010O <= wire_n0Olli_dataout;
			ni011i <= wire_n0Ol0l_dataout;
			ni011l <= wire_n0Ol0O_dataout;
			ni011O <= wire_n0Olii_dataout;
			ni01ii <= wire_n0Olll_dataout;
			ni01il <= wire_n0OllO_dataout;
			ni01li <= wire_n0OlOi_dataout;
			ni1lil <= wire_n0O0lO_dataout;
			ni1liO <= wire_n0O0Oi_dataout;
			ni1lli <= wire_n0O0Ol_dataout;
			ni1lll <= wire_n0O0OO_dataout;
			ni1llO <= wire_n0Oi1i_dataout;
			ni1lOi <= wire_n0Oi1l_dataout;
			ni1lOl <= wire_n0Oi1O_dataout;
			ni1lOO <= wire_n0Oi0i_dataout;
			ni1O0i <= wire_n0Oiil_dataout;
			ni1O0l <= wire_n0OiiO_dataout;
			ni1O0O <= wire_n0Oili_dataout;
			ni1O1i <= wire_n0Oi0l_dataout;
			ni1O1l <= wire_n0Oi0O_dataout;
			ni1O1O <= wire_n0Oiii_dataout;
			ni1Oii <= wire_n0Oill_dataout;
			ni1Oil <= wire_n0OilO_dataout;
			ni1OiO <= wire_n0OiOi_dataout;
			ni1Oli <= wire_n0OiOl_dataout;
			ni1Oll <= wire_n0OiOO_dataout;
			ni1OlO <= wire_n0Ol1i_dataout;
			ni1OOi <= wire_n0Ol1l_dataout;
			ni1OOl <= wire_n0Ol1O_dataout;
			ni1OOO <= wire_n0Ol0i_dataout;
		end
	end
	initial
	begin
		n0l00i = 0;
		n0l00l = 0;
		n0l01i = 0;
		n0l01l = 0;
		n0l01O = 0;
		n0l0ii = 0;
		n0lOOO = 0;
		n0O1li = 0;
		ni01lO = 0;
		ni1l0i = 0;
		ni1l0l = 0;
		ni1l0O = 0;
		ni1lii = 0;
	end
	always @ ( posedge clk or  negedge reset_n)
	begin
		if (reset_n == 1'b0) 
		begin
			n0l00i <= 0;
			n0l00l <= 0;
			n0l01i <= 0;
			n0l01l <= 0;
			n0l01O <= 0;
			n0l0ii <= 0;
			n0lOOO <= 0;
			n0O1li <= 0;
			ni01lO <= 0;
			ni1l0i <= 0;
			ni1l0l <= 0;
			ni1l0O <= 0;
			ni1lii <= 0;
		end
		else 
		begin
			n0l00i <= wire_n0illi_o;
			n0l00l <= wire_n0illl_o;
			n0l01i <= n0iiOi;
			n0l01l <= (~ wire_n0ilil_almost_full);
			n0l01O <= (~ ((~ ast_sink_error[0]) & (~ wire_n0l0il_dataout)));
			n0l0ii <= wire_n0l0iO_dataout;
			n0lOOO <= wire_n0O1OO_o;
			n0O1li <= wire_n0O11O_dataout;
			ni01lO <= n0l01O;
			ni1l0i <= ni01lO;
			ni1l0l <= wire_n0ll0i_dataout;
			ni1l0O <= wire_n0lO1i_dataout;
			ni1lii <= wire_n0liiO_dataout;
		end
	end
	initial
	begin
		n0l00O = 0;
		ni001i = 0;
		ni01Oi = 0;
		ni01Ol = 0;
	end
	always @ ( posedge clk or  negedge reset_n)
	begin
		if (reset_n == 1'b0) 
		begin
			n0l00O <= 1;
			ni001i <= 1;
			ni01Oi <= 1;
			ni01Ol <= 1;
		end
		else 
		begin
			n0l00O <= wire_n0illO_o;
			ni001i <= (n0iiOi | wire_n0O1OO_o);
			ni01Oi <= wire_n0O1OO_o;
			ni01Ol <= n0iiOi;
		end
	end
	event n0l00O_event;
	event ni001i_event;
	event ni01Oi_event;
	event ni01Ol_event;
	initial
		#1 ->n0l00O_event;
	initial
		#1 ->ni001i_event;
	initial
		#1 ->ni01Oi_event;
	initial
		#1 ->ni01Ol_event;
	always @(n0l00O_event)
		n0l00O <= 1;
	always @(ni001i_event)
		ni001i <= 1;
	always @(ni01Oi_event)
		ni01Oi <= 1;
	always @(ni01Ol_event)
		ni01Ol <= 1;
	initial
	begin
		n0O1ii = 0;
		n0OlOl = 0;
		n0OlOO = 0;
		n0OO0i = 0;
		n0OO0l = 0;
		n0OO0O = 0;
		n0OO1i = 0;
		n0OO1l = 0;
		n0OO1O = 0;
		n0OOii = 0;
		n0OOil = 0;
		n0OOiO = 0;
		n0OOli = 0;
		n0OOll = 0;
		n0OOlO = 0;
		n0OOOi = 0;
		n0OOOl = 0;
		n0OOOO = 0;
		ni110i = 0;
		ni110l = 0;
		ni110O = 0;
		ni111i = 0;
		ni111l = 0;
		ni111O = 0;
		ni11ii = 0;
		ni11il = 0;
		ni11iO = 0;
		ni11li = 0;
		ni11ll = 0;
		ni11lO = 0;
		ni11Oi = 0;
		ni11OO = 0;
	end
	always @ ( posedge clk or  negedge reset_n)
	begin
		if (reset_n == 1'b0) 
		begin
			n0O1ii <= 0;
			n0OlOl <= 0;
			n0OlOO <= 0;
			n0OO0i <= 0;
			n0OO0l <= 0;
			n0OO0O <= 0;
			n0OO1i <= 0;
			n0OO1l <= 0;
			n0OO1O <= 0;
			n0OOii <= 0;
			n0OOil <= 0;
			n0OOiO <= 0;
			n0OOli <= 0;
			n0OOll <= 0;
			n0OOlO <= 0;
			n0OOOi <= 0;
			n0OOOl <= 0;
			n0OOOO <= 0;
			ni110i <= 0;
			ni110l <= 0;
			ni110O <= 0;
			ni111i <= 0;
			ni111l <= 0;
			ni111O <= 0;
			ni11ii <= 0;
			ni11il <= 0;
			ni11iO <= 0;
			ni11li <= 0;
			ni11ll <= 0;
			ni11lO <= 0;
			ni11Oi <= 0;
			ni11OO <= 0;
		end
		else if  (wire_n0O1lO_o == 1'b1) 
		begin
			n0O1ii <= nl1OO;
			n0OlOl <= ni0iO;
			n0OlOO <= ni0il;
			n0OO0i <= ni00i;
			n0OO0l <= ni01O;
			n0OO0O <= ni01l;
			n0OO1i <= ni0ii;
			n0OO1l <= ni00O;
			n0OO1O <= ni00l;
			n0OOii <= ni01i;
			n0OOil <= ni1OO;
			n0OOiO <= ni1Ol;
			n0OOli <= ni1Oi;
			n0OOll <= ni1lO;
			n0OOlO <= ni1ll;
			n0OOOi <= ni1li;
			n0OOOl <= ni1iO;
			n0OOOO <= ni1il;
			ni110i <= ni10i;
			ni110l <= ni11O;
			ni110O <= ni11l;
			ni111i <= ni1ii;
			ni111l <= ni10O;
			ni111O <= ni10l;
			ni11ii <= ni11i;
			ni11il <= n0OOO;
			ni11iO <= n0OOl;
			ni11li <= n0OOi;
			ni11ll <= n0OlO;
			ni11lO <= n0Oll;
			ni11Oi <= n0Oli;
			ni11OO <= n0OiO;
		end
	end
	initial
	begin
		ni100i = 0;
		ni100l = 0;
		ni100O = 0;
		ni101i = 0;
		ni101l = 0;
		ni101O = 0;
		ni10ii = 0;
		ni10il = 0;
		ni10iO = 0;
		ni10li = 0;
		ni10ll = 0;
		ni10lO = 0;
		ni10Oi = 0;
		ni10Ol = 0;
		ni10OO = 0;
		ni1i0i = 0;
		ni1i0l = 0;
		ni1i0O = 0;
		ni1i1i = 0;
		ni1i1l = 0;
		ni1i1O = 0;
		ni1iii = 0;
		ni1iil = 0;
		ni1iiO = 0;
		ni1ili = 0;
		ni1ill = 0;
		ni1ilO = 0;
		ni1iOi = 0;
		ni1iOl = 0;
		ni1iOO = 0;
		ni1l1i = 0;
		ni1l1O = 0;
	end
	always @ ( posedge clk or  negedge reset_n)
	begin
		if (reset_n == 1'b0) 
		begin
			ni100i <= 0;
			ni100l <= 0;
			ni100O <= 0;
			ni101i <= 0;
			ni101l <= 0;
			ni101O <= 0;
			ni10ii <= 0;
			ni10il <= 0;
			ni10iO <= 0;
			ni10li <= 0;
			ni10ll <= 0;
			ni10lO <= 0;
			ni10Oi <= 0;
			ni10Ol <= 0;
			ni10OO <= 0;
			ni1i0i <= 0;
			ni1i0l <= 0;
			ni1i0O <= 0;
			ni1i1i <= 0;
			ni1i1l <= 0;
			ni1i1O <= 0;
			ni1iii <= 0;
			ni1iil <= 0;
			ni1iiO <= 0;
			ni1ili <= 0;
			ni1ill <= 0;
			ni1ilO <= 0;
			ni1iOi <= 0;
			ni1iOl <= 0;
			ni1iOO <= 0;
			ni1l1i <= 0;
			ni1l1O <= 0;
		end
		else if  (wire_n0O1Oi_o == 1'b1) 
		begin
			ni100i <= ni0ii;
			ni100l <= ni00O;
			ni100O <= ni00l;
			ni101i <= nl1OO;
			ni101l <= ni0iO;
			ni101O <= ni0il;
			ni10ii <= ni00i;
			ni10il <= ni01O;
			ni10iO <= ni01l;
			ni10li <= ni01i;
			ni10ll <= ni1OO;
			ni10lO <= ni1Ol;
			ni10Oi <= ni1Oi;
			ni10Ol <= ni1lO;
			ni10OO <= ni1ll;
			ni1i0i <= ni1ii;
			ni1i0l <= ni10O;
			ni1i0O <= ni10l;
			ni1i1i <= ni1li;
			ni1i1l <= ni1iO;
			ni1i1O <= ni1il;
			ni1iii <= ni10i;
			ni1iil <= ni11O;
			ni1iiO <= ni11l;
			ni1ili <= ni11i;
			ni1ill <= n0OOO;
			ni1ilO <= n0OOl;
			ni1iOi <= n0OOi;
			ni1iOl <= n0OlO;
			ni1iOO <= n0Oll;
			ni1l1i <= n0Oli;
			ni1l1O <= n0OiO;
		end
	end
	initial
	begin
		niiOiO = 0;
		niiOli = 0;
		niiOll = 0;
		niiOlO = 0;
		niiOOi = 0;
		niiOOl = 0;
		niiOOO = 0;
		nil00i = 0;
		nil00l = 0;
		nil00O = 0;
		nil01i = 0;
		nil01l = 0;
		nil01O = 0;
		nil0ii = 0;
		nil0il = 0;
		nil0iO = 0;
		nil0li = 0;
		nil0ll = 0;
		nil0lO = 0;
		nil0Oi = 0;
		nil0Ol = 0;
		nil0OO = 0;
		nil10i = 0;
		nil10l = 0;
		nil10O = 0;
		nil11i = 0;
		nil11l = 0;
		nil11O = 0;
		nil1ii = 0;
		nil1il = 0;
		nil1iO = 0;
		nil1li = 0;
		nil1ll = 0;
		nil1lO = 0;
		nil1Oi = 0;
		nil1Ol = 0;
		nil1OO = 0;
		nili0i = 0;
		nili0l = 0;
		nili0O = 0;
		nili1i = 0;
		nili1l = 0;
		nili1O = 0;
		niliii = 0;
		niliil = 0;
		niliiO = 0;
		nilili = 0;
		nilill = 0;
		nililO = 0;
		niliOi = 0;
		niliOl = 0;
		niliOO = 0;
		nill0i = 0;
		nill0l = 0;
		nill0O = 0;
		nill1i = 0;
		nill1l = 0;
		nill1O = 0;
		nillii = 0;
		niO10i = 0;
	end
	always @ ( posedge clk)
	begin
		if (n0iiOl == 1'b1) 
		begin
			niiOiO <= nil1Ol;
			niiOli <= nil1OO;
			niiOll <= nil01i;
			niiOlO <= nil01l;
			niiOOi <= nil01O;
			niiOOl <= nil00i;
			niiOOO <= nil00l;
			nil00i <= niliiO;
			nil00l <= nilili;
			nil00O <= nilill;
			nil01i <= nili0O;
			nil01l <= niliii;
			nil01O <= niliil;
			nil0ii <= nililO;
			nil0il <= niliOi;
			nil0iO <= niliOl;
			nil0li <= niliOO;
			nil0ll <= nill1i;
			nil0lO <= nill1l;
			nil0Oi <= nill1O;
			nil0Ol <= nill0i;
			nil0OO <= nill0l;
			nil10i <= nil0iO;
			nil10l <= nil0li;
			nil10O <= nil0ll;
			nil11i <= nil00O;
			nil11l <= nil0ii;
			nil11O <= nil0il;
			nil1ii <= nil0lO;
			nil1il <= nil0Oi;
			nil1iO <= nil0Ol;
			nil1li <= nil0OO;
			nil1ll <= nili1i;
			nil1lO <= nili1l;
			nil1Oi <= nili1O;
			nil1Ol <= nili0i;
			nil1OO <= nili0l;
			nili0i <= ni0ili;
			nili0l <= ni0iiO;
			nili0O <= ni0iil;
			nili1i <= nill0O;
			nili1l <= nillii;
			nili1O <= niO10i;
			niliii <= ni0iii;
			niliil <= ni0i0O;
			niliiO <= ni0i0l;
			nilili <= ni0i0i;
			nilill <= ni0i1O;
			nililO <= ni0i1l;
			niliOi <= ni0i1i;
			niliOl <= ni00OO;
			niliOO <= ni00Ol;
			nill0i <= ni00li;
			nill0l <= ni00iO;
			nill0O <= ni00il;
			nill1i <= ni00Oi;
			nill1l <= ni00lO;
			nill1O <= ni00ll;
			nillii <= ni00ii;
			niO10i <= ni0O1i;
		end
	end
	initial
	begin
		nlilOl = 0;
		nll00i = 0;
		nll00l = 0;
		nll00O = 0;
		nll01i = 0;
		nll01l = 0;
		nll01O = 0;
		nll0ii = 0;
		nll0iO = 0;
		nll10l = 0;
		nll10O = 0;
		nll1ii = 0;
		nll1il = 0;
		nll1iO = 0;
		nll1li = 0;
		nll1ll = 0;
		nll1lO = 0;
		nll1Oi = 0;
		nll1Ol = 0;
		nll1OO = 0;
	end
	always @ ( posedge clk)
	begin
		if (n0il1l == 1'b1) 
		begin
			nlilOl <= nilOli;
			nll00i <= niO1lO;
			nll00l <= niO1Oi;
			nll00O <= niO1Ol;
			nll01i <= niO1iO;
			nll01l <= niO1li;
			nll01O <= niO1ll;
			nll0ii <= nl00li;
			nll0iO <= nl00ll;
			nll10l <= nilOll;
			nll10O <= nilOlO;
			nll1ii <= nilOOi;
			nll1il <= nilOOl;
			nll1iO <= nilOOO;
			nll1li <= niO11i;
			nll1ll <= niO11l;
			nll1lO <= niO10l;
			nll1Oi <= niO10O;
			nll1Ol <= niO1ii;
			nll1OO <= niO1il;
		end
	end
	initial
	begin
		nlllil = 0;
		nlllll = 0;
		nlO00i = 0;
		nlO00O = 0;
		nlO01i = 0;
		nlO01l = 0;
		nlO01O = 0;
		nlO10O = 0;
		nlO1OO = 0;
	end
	always @ ( posedge clk or  negedge reset_n)
	begin
		if (reset_n == 1'b0) 
		begin
			nlllil <= 1;
			nlllll <= 1;
			nlO00i <= 1;
			nlO00O <= 1;
			nlO01i <= 1;
			nlO01l <= 1;
			nlO01O <= 1;
			nlO10O <= 1;
			nlO1OO <= 1;
		end
		else if  (ni001i == 1'b0) 
		begin
			nlllil <= nllO0l;
			nlllll <= nllOil;
			nlO00i <= nlllOi;
			nlO00O <= nlllil;
			nlO01i <= nlllli;
			nlO01l <= nlllll;
			nlO01O <= nllllO;
			nlO10O <= nlO01O;
			nlO1OO <= nllliO;
		end
	end
	event nlllil_event;
	event nlllll_event;
	event nlO00i_event;
	event nlO00O_event;
	event nlO01i_event;
	event nlO01l_event;
	event nlO01O_event;
	event nlO10O_event;
	event nlO1OO_event;
	initial
		#1 ->nlllil_event;
	initial
		#1 ->nlllll_event;
	initial
		#1 ->nlO00i_event;
	initial
		#1 ->nlO00O_event;
	initial
		#1 ->nlO01i_event;
	initial
		#1 ->nlO01l_event;
	initial
		#1 ->nlO01O_event;
	initial
		#1 ->nlO10O_event;
	initial
		#1 ->nlO1OO_event;
	always @(nlllil_event)
		nlllil <= 1;
	always @(nlllll_event)
		nlllll <= 1;
	always @(nlO00i_event)
		nlO00i <= 1;
	always @(nlO00O_event)
		nlO00O <= 1;
	always @(nlO01i_event)
		nlO01i <= 1;
	always @(nlO01l_event)
		nlO01l <= 1;
	always @(nlO01O_event)
		nlO01O <= 1;
	always @(nlO10O_event)
		nlO10O <= 1;
	always @(nlO1OO_event)
		nlO1OO <= 1;
	initial
	begin
		ni00ii = 0;
		ni00il = 0;
		ni00iO = 0;
		ni00li = 0;
		ni00ll = 0;
		ni00lO = 0;
		ni00Oi = 0;
		ni00Ol = 0;
		ni00OO = 0;
		ni0i0i = 0;
		ni0i0l = 0;
		ni0i0O = 0;
		ni0i1i = 0;
		ni0i1l = 0;
		ni0i1O = 0;
		ni0iii = 0;
		ni0iil = 0;
		ni0iiO = 0;
		ni0ili = 0;
		ni0O1i = 0;
		nlll0i = 0;
		nlll0l = 0;
		nlll0O = 0;
		nlll1l = 0;
		nlll1O = 0;
		nlllii = 0;
		nllliO = 0;
		nlllli = 0;
		nllllO = 0;
		nlllOi = 0;
		nlllOl = 0;
		nlllOO = 0;
		nllO0i = 0;
		nllO0l = 0;
		nllO0O = 0;
		nllO1i = 0;
		nllO1l = 0;
		nllO1O = 0;
		nllOii = 0;
		nllOil = 0;
		nllOiO = 0;
		nllOli = 0;
		nllOll = 0;
		nllOlO = 0;
		nllOOi = 0;
		nllOOl = 0;
		nllOOO = 0;
		nlO10i = 0;
		nlO10l = 0;
		nlO11i = 0;
		nlO11l = 0;
		nlO11O = 0;
		nlO1ii = 0;
		nlO1il = 0;
		nlO1iO = 0;
		nlO1li = 0;
		nlO1ll = 0;
		nlO1lO = 0;
		nlO1Ol = 0;
	end
	always @ ( posedge clk or  negedge reset_n)
	begin
		if (reset_n == 1'b0) 
		begin
			ni00ii <= 0;
			ni00il <= 0;
			ni00iO <= 0;
			ni00li <= 0;
			ni00ll <= 0;
			ni00lO <= 0;
			ni00Oi <= 0;
			ni00Ol <= 0;
			ni00OO <= 0;
			ni0i0i <= 0;
			ni0i0l <= 0;
			ni0i0O <= 0;
			ni0i1i <= 0;
			ni0i1l <= 0;
			ni0i1O <= 0;
			ni0iii <= 0;
			ni0iil <= 0;
			ni0iiO <= 0;
			ni0ili <= 0;
			ni0O1i <= 0;
			nlll0i <= 0;
			nlll0l <= 0;
			nlll0O <= 0;
			nlll1l <= 0;
			nlll1O <= 0;
			nlllii <= 0;
			nllliO <= 0;
			nlllli <= 0;
			nllllO <= 0;
			nlllOi <= 0;
			nlllOl <= 0;
			nlllOO <= 0;
			nllO0i <= 0;
			nllO0l <= 0;
			nllO0O <= 0;
			nllO1i <= 0;
			nllO1l <= 0;
			nllO1O <= 0;
			nllOii <= 0;
			nllOil <= 0;
			nllOiO <= 0;
			nllOli <= 0;
			nllOll <= 0;
			nllOlO <= 0;
			nllOOi <= 0;
			nllOOl <= 0;
			nllOOO <= 0;
			nlO10i <= 0;
			nlO10l <= 0;
			nlO11i <= 0;
			nlO11l <= 0;
			nlO11O <= 0;
			nlO1ii <= 0;
			nlO1il <= 0;
			nlO1iO <= 0;
			nlO1li <= 0;
			nlO1ll <= 0;
			nlO1lO <= 0;
			nlO1Ol <= 0;
		end
		else if  (ni001i == 1'b0) 
		begin
			ni00ii <= wire_ni0ilO_dataout;
			ni00il <= wire_ni0iOi_dataout;
			ni00iO <= wire_ni0iOl_dataout;
			ni00li <= wire_ni0iOO_dataout;
			ni00ll <= wire_ni0l1i_dataout;
			ni00lO <= wire_ni0l1l_dataout;
			ni00Oi <= wire_ni0l1O_dataout;
			ni00Ol <= wire_ni0l0i_dataout;
			ni00OO <= wire_ni0l0l_dataout;
			ni0i0i <= wire_ni0liO_dataout;
			ni0i0l <= wire_ni0lli_dataout;
			ni0i0O <= wire_ni0lll_dataout;
			ni0i1i <= wire_ni0l0O_dataout;
			ni0i1l <= wire_ni0lii_dataout;
			ni0i1O <= wire_ni0lil_dataout;
			ni0iii <= wire_ni0llO_dataout;
			ni0iil <= wire_ni0lOi_dataout;
			ni0iiO <= wire_ni0lOl_dataout;
			ni0ili <= wire_ni0lOO_dataout;
			ni0O1i <= wire_ni0ill_dataout;
			nlll0i <= nllO1i;
			nlll0l <= nllO1l;
			nlll0O <= nllO1O;
			nlll1l <= nlllOl;
			nlll1O <= nlllOO;
			nlllii <= nllO0i;
			nllliO <= nllO0O;
			nlllli <= nllOii;
			nllllO <= nllOiO;
			nlllOi <= nllOli;
			nlllOl <= nllOll;
			nlllOO <= nllOlO;
			nllO0i <= nlO11i;
			nllO0l <= nlO11l;
			nllO0O <= nlO11O;
			nllO1i <= nllOOi;
			nllO1l <= nllOOl;
			nllO1O <= nllOOO;
			nllOii <= nlO10i;
			nllOil <= nlO10l;
			nllOiO <= nlO10O;
			nllOli <= nlO1ii;
			nllOll <= nlO1il;
			nllOlO <= nlO1iO;
			nllOOi <= nlO1li;
			nllOOl <= nlO1ll;
			nllOOO <= nlO1lO;
			nlO10i <= nlO01i;
			nlO10l <= nlO01l;
			nlO11i <= nlO1Ol;
			nlO11l <= nlO00O;
			nlO11O <= nlO1OO;
			nlO1ii <= nlO00i;
			nlO1il <= nlll1l;
			nlO1iO <= nlll1O;
			nlO1li <= nlll0i;
			nlO1ll <= nlll0l;
			nlO1lO <= nlll0O;
			nlO1Ol <= nlllii;
		end
	end
	lpm_mult   nlO0ii
	( 
	.clken((~ ni001i)),
	.clock(clk),
	.dataa({nll0li, nll0ll, nll0lO, nll0Oi, nll0Ol, nll0OO, nlli1i, nlli1l, nlli1O, nlli0i, nlli0l, nlli0O, nlliii, nlliil, nlliiO, nllili, nllill, nllilO, nlliOi, nlliOl, nlll1i}),
	.datab({nlllOi, nllllO, nlllll, nlllli, nllliO, nlllil, nlllii, nlll0O, nlll0l, nlll0i, nlll1O, nlll1l}),
	.result(wire_nlO0ii_result),
	.aclr(),
	.sum()
	);
	defparam
		nlO0ii.lpm_pipeline = 3,
		nlO0ii.lpm_representation = "SIGNED",
		nlO0ii.lpm_widtha = 21,
		nlO0ii.lpm_widthb = 12,
		nlO0ii.lpm_widthp = 33,
		nlO0ii.lpm_widths = 33,
		nlO0ii.lpm_hint = "INPUT_A_FIXED_VALUE=Bx, INPUT_B_FIXED_VALUE=Bx";
	assign		wire_n011i_dataout = ((~ ni001i) === 1'b1) ? wire_nlOlll_o[31] : nlOllO;
	assign		wire_n0i0i_dataout = (nl0iO === 1'b1) ? n011l : wire_n0O0O_o[0];
	assign		wire_n0i0l_dataout = (nl0iO === 1'b1) ? n11lO : wire_n0O0O_o[1];
	assign		wire_n0i0O_dataout = (nl0iO === 1'b1) ? n11ll : wire_n0O0O_o[2];
	assign		wire_n0iii_dataout = (nl0iO === 1'b1) ? n11li : wire_n0O0O_o[3];
	assign		wire_n0iil_dataout = (nl0iO === 1'b1) ? n11iO : wire_n0O0O_o[4];
	assign		wire_n0iiO_dataout = (nl0iO === 1'b1) ? n11il : wire_n0O0O_o[5];
	assign		wire_n0ili_dataout = (nl0iO === 1'b1) ? n11ii : wire_n0O0O_o[6];
	assign		wire_n0ill_dataout = (nl0iO === 1'b1) ? n110O : wire_n0O0O_o[7];
	assign		wire_n0ilO_dataout = (nl0iO === 1'b1) ? n110l : wire_n0O0O_o[8];
	and(wire_n0iO0i_dataout, (~ n0i0li), ~(n0i0ll));
	and(wire_n0iO1i_dataout, wire_n0iO1O_dataout, ~(n0i0lO));
	and(wire_n0iO1l_dataout, wire_n0iO0i_dataout, ~(n0i0lO));
	or(wire_n0iO1O_dataout, n0i0li, n0i0ll);
	assign		wire_n0iOi_dataout = (nl0iO === 1'b1) ? n110i : wire_n0O0O_o[9];
	assign		wire_n0iOl_dataout = (nl0iO === 1'b1) ? n111O : wire_n0O0O_o[10];
	assign		wire_n0iOO_dataout = (nl0iO === 1'b1) ? n111l : wire_n0O0O_o[11];
	assign		wire_n0l0i_dataout = (nl0iO === 1'b1) ? nlOOOi : wire_n0O0O_o[15];
	or(wire_n0l0il_dataout, wire_n0l0li_dataout, ast_sink_error[0]);
	and(wire_n0l0iO_dataout, wire_n0l0ll_dataout, ~(ast_sink_error[0]));
	assign		wire_n0l0l_dataout = (nl0iO === 1'b1) ? nlOOlO : wire_n0O0O_o[16];
	and(wire_n0l0li_dataout, wire_n0l0lO_dataout, ~(n0ii1l));
	and(wire_n0l0ll_dataout, wire_n0l0Oi_dataout, ~(n0ii1l));
	and(wire_n0l0lO_dataout, wire_n0l0Ol_dataout, ~(n0ii1i));
	assign		wire_n0l0O_dataout = (nl0iO === 1'b1) ? nlOOll : wire_n0O0O_o[17];
	and(wire_n0l0Oi_dataout, wire_n0l0OO_dataout, ~(n0ii1i));
	and(wire_n0l0Ol_dataout, (~ n0i0Ol), ~(n0i0OO));
	and(wire_n0l0OO_dataout, n0i0Ol, ~(n0i0OO));
	assign		wire_n0l1i_dataout = (nl0iO === 1'b1) ? n111i : wire_n0O0O_o[12];
	assign		wire_n0l1l_dataout = (nl0iO === 1'b1) ? nlOOOO : wire_n0O0O_o[13];
	assign		wire_n0l1O_dataout = (nl0iO === 1'b1) ? nlOOOl : wire_n0O0O_o[14];
	assign		wire_n0lii_dataout = (nl0iO === 1'b1) ? nlOOli : wire_n0O0O_o[18];
	and(wire_n0liiO_dataout, wire_n0liOO_dataout, ~(((n0iili & (((~ ni1l0O) & (~ wire_n0O1il_dataout)) | ((~ ni1l0l) & wire_n0O1il_dataout))) | ni01lO)));
	assign		wire_n0lil_dataout = (nl0iO === 1'b1) ? nlOOiO : wire_n0O0O_o[19];
	assign		wire_n0liO_dataout = (nl0iO === 1'b1) ? nlOOil : wire_n0O0O_o[20];
	or(wire_n0liOO_dataout, ni1lii, ((ni1l0O & (~ wire_n0O1il_dataout)) | (ni1l0l & wire_n0O1il_dataout)));
	or(wire_n0ll0i_dataout, wire_n0llll_dataout, ((((~ n0iiil) & n0ii0i) | (n0iiil & n0ii0l)) | (n0iiil & n0ii0i)));
	assign		wire_n0lli_dataout = (nl0iO === 1'b1) ? nlOOii : wire_n0O0O_o[21];
	assign		wire_n0lll_dataout = (nl0iO === 1'b1) ? nlOO0O : wire_n0O0O_o[22];
	and(wire_n0llll_dataout, ni1l0l, ~(((wire_n0O1Ol_o & wire_n0O1il_dataout) | ((~ n0iiil) & n0ii0l))));
	assign		wire_n0llO_dataout = (nl0iO === 1'b1) ? nlOO0l : wire_n0O0O_o[23];
	or(wire_n0lO1i_dataout, wire_n0lOil_dataout, ((((~ n0iiil) & n0ii0O) | (n0iiil & n0iiii)) | (n0iiil & n0ii0O)));
	assign		wire_n0lOi_dataout = (nl0iO === 1'b1) ? nlOO0i : wire_n0O0O_o[24];
	and(wire_n0lOil_dataout, ni1l0O, ~((((wire_n0O1Ol_o & (~ wire_n0O1il_dataout)) | ((~ n0iiil) & n0iiii)) | ni01lO)));
	assign		wire_n0lOl_dataout = (nl0iO === 1'b1) ? nlOO1O : wire_n0O0O_o[25];
	assign		wire_n0lOO_dataout = (nl0iO === 1'b1) ? nlOO1l : wire_n0O0O_o[26];
	and(wire_n0O00i_dataout, n0iill, ~(ni1l0l));
	assign		wire_n0O00l_dataout = (ni1l0l === 1'b1) ? wire_n0O0ii_dataout : n0iill;
	and(wire_n0O00O_dataout, (~ wire_n0O1il_dataout), ni1l0l);
	and(wire_n0O01i_dataout, wire_n0O00i_dataout, ~(ast_source_ready));
	and(wire_n0O01l_dataout, wire_n0O00l_dataout, ast_source_ready);
	or(wire_n0O01O_dataout, wire_n0O00O_dataout, ~(ast_source_ready));
	assign		wire_n0O0i_dataout = (nl0iO === 1'b1) ? nlOlOi : wire_n0O0O_o[30];
	and(wire_n0O0ii_dataout, n0iill, ~((~ wire_n0O1il_dataout)));
	and(wire_n0O0il_dataout, (~ n0iili), n0iill);
	assign		wire_n0O0l_dataout = (nl0iO === 1'b1) ? nlOllO : wire_n0O0O_o[31];
	assign		wire_n0O0lO_dataout = ((~ wire_n0O1il_dataout) === 1'b1) ? ni101i : n0O1ii;
	assign		wire_n0O0Oi_dataout = ((~ wire_n0O1il_dataout) === 1'b1) ? ni101l : n0OlOl;
	assign		wire_n0O0Ol_dataout = ((~ wire_n0O1il_dataout) === 1'b1) ? ni101O : n0OlOO;
	assign		wire_n0O0OO_dataout = ((~ wire_n0O1il_dataout) === 1'b1) ? ni100i : n0OO1i;
	and(wire_n0O10i_dataout, n0O1li, n0iiil);
	or(wire_n0O11O_dataout, wire_n0O10i_dataout, ((wire_n0O1Oi_o | wire_n0O1lO_o) & n0iiil));
	assign		wire_n0O1i_dataout = (nl0iO === 1'b1) ? nlOO1i : wire_n0O0O_o[27];
	and(wire_n0O1il_dataout, n0O11l, n0iiiO);
	assign		wire_n0O1l_dataout = (nl0iO === 1'b1) ? nlOlOO : wire_n0O0O_o[28];
	and(wire_n0O1ll_dataout, (~ n0O11l), n0iiiO);
	assign		wire_n0O1O_dataout = (nl0iO === 1'b1) ? nlOlOl : wire_n0O0O_o[29];
	assign		wire_n0Oi0i_dataout = ((~ wire_n0O1il_dataout) === 1'b1) ? ni10il : n0OO0l;
	assign		wire_n0Oi0l_dataout = ((~ wire_n0O1il_dataout) === 1'b1) ? ni10iO : n0OO0O;
	assign		wire_n0Oi0O_dataout = ((~ wire_n0O1il_dataout) === 1'b1) ? ni10li : n0OOii;
	assign		wire_n0Oi1i_dataout = ((~ wire_n0O1il_dataout) === 1'b1) ? ni100l : n0OO1l;
	assign		wire_n0Oi1l_dataout = ((~ wire_n0O1il_dataout) === 1'b1) ? ni100O : n0OO1O;
	assign		wire_n0Oi1O_dataout = ((~ wire_n0O1il_dataout) === 1'b1) ? ni10ii : n0OO0i;
	assign		wire_n0Oiii_dataout = ((~ wire_n0O1il_dataout) === 1'b1) ? ni10ll : n0OOil;
	assign		wire_n0Oiil_dataout = ((~ wire_n0O1il_dataout) === 1'b1) ? ni10lO : n0OOiO;
	assign		wire_n0OiiO_dataout = ((~ wire_n0O1il_dataout) === 1'b1) ? ni10Oi : n0OOli;
	assign		wire_n0Oili_dataout = ((~ wire_n0O1il_dataout) === 1'b1) ? ni10Ol : n0OOll;
	assign		wire_n0Oill_dataout = ((~ wire_n0O1il_dataout) === 1'b1) ? ni10OO : n0OOlO;
	assign		wire_n0OilO_dataout = ((~ wire_n0O1il_dataout) === 1'b1) ? ni1i1i : n0OOOi;
	assign		wire_n0OiOi_dataout = ((~ wire_n0O1il_dataout) === 1'b1) ? ni1i1l : n0OOOl;
	assign		wire_n0OiOl_dataout = ((~ wire_n0O1il_dataout) === 1'b1) ? ni1i1O : n0OOOO;
	assign		wire_n0OiOO_dataout = ((~ wire_n0O1il_dataout) === 1'b1) ? ni1i0i : ni111i;
	assign		wire_n0Ol0i_dataout = ((~ wire_n0O1il_dataout) === 1'b1) ? ni1iil : ni110l;
	assign		wire_n0Ol0l_dataout = ((~ wire_n0O1il_dataout) === 1'b1) ? ni1iiO : ni110O;
	assign		wire_n0Ol0O_dataout = ((~ wire_n0O1il_dataout) === 1'b1) ? ni1ili : ni11ii;
	assign		wire_n0Ol1i_dataout = ((~ wire_n0O1il_dataout) === 1'b1) ? ni1i0l : ni111l;
	assign		wire_n0Ol1l_dataout = ((~ wire_n0O1il_dataout) === 1'b1) ? ni1i0O : ni111O;
	assign		wire_n0Ol1O_dataout = ((~ wire_n0O1il_dataout) === 1'b1) ? ni1iii : ni110i;
	assign		wire_n0Olii_dataout = ((~ wire_n0O1il_dataout) === 1'b1) ? ni1ill : ni11il;
	assign		wire_n0Olil_dataout = ((~ wire_n0O1il_dataout) === 1'b1) ? ni1ilO : ni11iO;
	assign		wire_n0OliO_dataout = ((~ wire_n0O1il_dataout) === 1'b1) ? ni1iOi : ni11li;
	assign		wire_n0Olli_dataout = ((~ wire_n0O1il_dataout) === 1'b1) ? ni1iOl : ni11ll;
	assign		wire_n0Olll_dataout = ((~ wire_n0O1il_dataout) === 1'b1) ? ni1iOO : ni11lO;
	assign		wire_n0OllO_dataout = ((~ wire_n0O1il_dataout) === 1'b1) ? ni1l1i : ni11Oi;
	assign		wire_n0OlOi_dataout = ((~ wire_n0O1il_dataout) === 1'b1) ? ni1l1O : ni11OO;
	and(wire_n100i_dataout, wire_n1l0O_dataout, ~((~ reset_n)));
	and(wire_n100l_dataout, wire_n1lii_dataout, ~((~ reset_n)));
	and(wire_n100O_dataout, wire_n1lil_dataout, ~((~ reset_n)));
	and(wire_n101i_dataout, wire_n1l1O_dataout, ~((~ reset_n)));
	and(wire_n101l_dataout, wire_n1l0i_dataout, ~((~ reset_n)));
	and(wire_n101O_dataout, wire_n1l0l_dataout, ~((~ reset_n)));
	and(wire_n10i_dataout, wire_n10O_dataout, ~((~ reset_n)));
	and(wire_n10ii_dataout, wire_n1liO_dataout, ~((~ reset_n)));
	and(wire_n10il_dataout, wire_n1lli_dataout, ~((~ reset_n)));
	and(wire_n10iO_dataout, wire_n1lll_dataout, ~((~ reset_n)));
	and(wire_n10l_dataout, wire_n1ii_dataout, ~((~ reset_n)));
	and(wire_n10li_dataout, wire_n1llO_dataout, ~((~ reset_n)));
	and(wire_n10ll_dataout, wire_n1lOi_dataout, ~((~ reset_n)));
	and(wire_n10lO_dataout, wire_n1lOl_dataout, ~((~ reset_n)));
	assign		wire_n10O_dataout = ((~ ni001i) === 1'b1) ? nl01O : nlOlO;
	and(wire_n10Oi_dataout, wire_n1lOO_dataout, ~((~ reset_n)));
	and(wire_n10Ol_dataout, wire_n1O1i_dataout, ~((~ reset_n)));
	and(wire_n10OO_dataout, wire_n1O1l_dataout, ~((~ reset_n)));
	and(wire_n11Oi_dataout, wire_n1iOO_dataout, ~((~ reset_n)));
	and(wire_n11Ol_dataout, wire_n1l1i_dataout, ~((~ reset_n)));
	and(wire_n11OO_dataout, wire_n1l1l_dataout, ~((~ reset_n)));
	and(wire_n1i0i_dataout, wire_n1O0O_dataout, ~((~ reset_n)));
	and(wire_n1i0l_dataout, wire_n1Oii_dataout, ~((~ reset_n)));
	and(wire_n1i0O_dataout, wire_n1Oil_dataout, ~((~ reset_n)));
	and(wire_n1i1i_dataout, wire_n1O1O_dataout, ~((~ reset_n)));
	and(wire_n1i1l_dataout, wire_n1O0i_dataout, ~((~ reset_n)));
	and(wire_n1i1O_dataout, wire_n1O0l_dataout, ~((~ reset_n)));
	assign		wire_n1ii_dataout = ((~ ni001i) === 1'b1) ? n11O : nl01O;
	and(wire_n1iii_dataout, wire_n1OiO_dataout, ~((~ reset_n)));
	and(wire_n1iil_dataout, wire_n1Oli_dataout, ~((~ reset_n)));
	and(wire_n1iiO_dataout, wire_n1Oll_dataout, ~((~ reset_n)));
	and(wire_n1ili_dataout, wire_n1OlO_dataout, ~((~ reset_n)));
	and(wire_n1ill_dataout, wire_n1OOi_dataout, ~((~ reset_n)));
	and(wire_n1ilO_dataout, wire_n1OOl_dataout, ~((~ reset_n)));
	and(wire_n1iOi_dataout, wire_n1OOO_dataout, ~((~ reset_n)));
	and(wire_n1iOl_dataout, wire_n011i_dataout, ~((~ reset_n)));
	assign		wire_n1iOO_dataout = ((~ ni001i) === 1'b1) ? wire_nlOlll_o[0] : n011l;
	assign		wire_n1l0i_dataout = ((~ ni001i) === 1'b1) ? wire_nlOlll_o[4] : n11iO;
	assign		wire_n1l0l_dataout = ((~ ni001i) === 1'b1) ? wire_nlOlll_o[5] : n11il;
	assign		wire_n1l0O_dataout = ((~ ni001i) === 1'b1) ? wire_nlOlll_o[6] : n11ii;
	assign		wire_n1l1i_dataout = ((~ ni001i) === 1'b1) ? wire_nlOlll_o[1] : n11lO;
	assign		wire_n1l1l_dataout = ((~ ni001i) === 1'b1) ? wire_nlOlll_o[2] : n11ll;
	assign		wire_n1l1O_dataout = ((~ ni001i) === 1'b1) ? wire_nlOlll_o[3] : n11li;
	assign		wire_n1lii_dataout = ((~ ni001i) === 1'b1) ? wire_nlOlll_o[7] : n110O;
	assign		wire_n1lil_dataout = ((~ ni001i) === 1'b1) ? wire_nlOlll_o[8] : n110l;
	assign		wire_n1liO_dataout = ((~ ni001i) === 1'b1) ? wire_nlOlll_o[9] : n110i;
	assign		wire_n1lli_dataout = ((~ ni001i) === 1'b1) ? wire_nlOlll_o[10] : n111O;
	assign		wire_n1lll_dataout = ((~ ni001i) === 1'b1) ? wire_nlOlll_o[11] : n111l;
	assign		wire_n1llO_dataout = ((~ ni001i) === 1'b1) ? wire_nlOlll_o[12] : n111i;
	or(wire_n1lO_dataout, wire_n1Oi_dataout, (~ reset_n));
	assign		wire_n1lOi_dataout = ((~ ni001i) === 1'b1) ? wire_nlOlll_o[13] : nlOOOO;
	assign		wire_n1lOl_dataout = ((~ ni001i) === 1'b1) ? wire_nlOlll_o[14] : nlOOOl;
	assign		wire_n1lOO_dataout = ((~ ni001i) === 1'b1) ? wire_nlOlll_o[15] : nlOOOi;
	assign		wire_n1O0i_dataout = ((~ ni001i) === 1'b1) ? wire_nlOlll_o[19] : nlOOiO;
	assign		wire_n1O0l_dataout = ((~ ni001i) === 1'b1) ? wire_nlOlll_o[20] : nlOOil;
	assign		wire_n1O0O_dataout = ((~ ni001i) === 1'b1) ? wire_nlOlll_o[21] : nlOOii;
	assign		wire_n1O1i_dataout = ((~ ni001i) === 1'b1) ? wire_nlOlll_o[16] : nlOOlO;
	assign		wire_n1O1l_dataout = ((~ ni001i) === 1'b1) ? wire_nlOlll_o[17] : nlOOll;
	assign		wire_n1O1O_dataout = ((~ ni001i) === 1'b1) ? wire_nlOlll_o[18] : nlOOli;
	and(wire_n1Oi_dataout, n1iO, ~((~ ni001i)));
	assign		wire_n1Oii_dataout = ((~ ni001i) === 1'b1) ? wire_nlOlll_o[22] : nlOO0O;
	assign		wire_n1Oil_dataout = ((~ ni001i) === 1'b1) ? wire_nlOlll_o[23] : nlOO0l;
	assign		wire_n1OiO_dataout = ((~ ni001i) === 1'b1) ? wire_nlOlll_o[24] : nlOO0i;
	assign		wire_n1Oli_dataout = ((~ ni001i) === 1'b1) ? wire_nlOlll_o[25] : nlOO1O;
	assign		wire_n1Oll_dataout = ((~ ni001i) === 1'b1) ? wire_nlOlll_o[26] : nlOO1l;
	assign		wire_n1OlO_dataout = ((~ ni001i) === 1'b1) ? wire_nlOlll_o[27] : nlOO1i;
	assign		wire_n1OOi_dataout = ((~ ni001i) === 1'b1) ? wire_nlOlll_o[28] : nlOlOO;
	assign		wire_n1OOl_dataout = ((~ ni001i) === 1'b1) ? wire_nlOlll_o[29] : nlOlOl;
	assign		wire_n1OOO_dataout = ((~ ni001i) === 1'b1) ? wire_nlOlll_o[30] : nlOlOi;
	assign		wire_ni000i_dataout = ((~ ni01Oi) === 1'b1) ? ((~ ni01Ol) & nl0Ol) : nl0Ol;
	assign		wire_ni001l_dataout = ((~ ni01Ol) === 1'b1) ? ((~ ni01Oi) & nl01O) : nl01O;
	assign		wire_ni0ill_dataout = (nlOlO === 1'b1) ? wire_n0ilil_q[0] : nii1ii;
	assign		wire_ni0ilO_dataout = (nlOlO === 1'b1) ? wire_n0ilil_q[1] : nii10O;
	assign		wire_ni0iOi_dataout = (nlOlO === 1'b1) ? wire_n0ilil_q[2] : nii10l;
	assign		wire_ni0iOl_dataout = (nlOlO === 1'b1) ? wire_n0ilil_q[3] : nii10i;
	assign		wire_ni0iOO_dataout = (nlOlO === 1'b1) ? wire_n0ilil_q[4] : nii11O;
	assign		wire_ni0l0i_dataout = (nlOlO === 1'b1) ? wire_n0ilil_q[8] : ni0OOl;
	assign		wire_ni0l0l_dataout = (nlOlO === 1'b1) ? wire_n0ilil_q[9] : ni0OOi;
	assign		wire_ni0l0O_dataout = (nlOlO === 1'b1) ? wire_n0ilil_q[10] : ni0OlO;
	assign		wire_ni0l1i_dataout = (nlOlO === 1'b1) ? wire_n0ilil_q[5] : nii11l;
	assign		wire_ni0l1l_dataout = (nlOlO === 1'b1) ? wire_n0ilil_q[6] : nii11i;
	assign		wire_ni0l1O_dataout = (nlOlO === 1'b1) ? wire_n0ilil_q[7] : ni0OOO;
	and(wire_ni0li_dataout, wire_nillO_dataout, ~((~ reset_n)));
	assign		wire_ni0lii_dataout = (nlOlO === 1'b1) ? wire_n0ilil_q[11] : ni0Oll;
	assign		wire_ni0lil_dataout = (nlOlO === 1'b1) ? wire_n0ilil_q[12] : ni0Oli;
	assign		wire_ni0liO_dataout = (nlOlO === 1'b1) ? wire_n0ilil_q[13] : ni0OiO;
	and(wire_ni0ll_dataout, wire_nilOi_dataout, ~((~ reset_n)));
	assign		wire_ni0lli_dataout = (nlOlO === 1'b1) ? wire_n0ilil_q[14] : ni0Oil;
	assign		wire_ni0lll_dataout = (nlOlO === 1'b1) ? wire_n0ilil_q[15] : ni0Oii;
	assign		wire_ni0llO_dataout = (nlOlO === 1'b1) ? wire_n0ilil_q[16] : ni0O0O;
	and(wire_ni0lO_dataout, wire_nilOl_dataout, ~((~ reset_n)));
	assign		wire_ni0lOi_dataout = (nlOlO === 1'b1) ? wire_n0ilil_q[17] : ni0O0l;
	assign		wire_ni0lOl_dataout = (nlOlO === 1'b1) ? wire_n0ilil_q[18] : ni0O0i;
	assign		wire_ni0lOO_dataout = (nlOlO === 1'b1) ? wire_n0ilil_q[19] : ni0O1O;
	and(wire_ni0Oi_dataout, wire_nilOO_dataout, ~((~ reset_n)));
	and(wire_ni0Ol_dataout, wire_niO1i_dataout, ~((~ reset_n)));
	and(wire_ni0OO_dataout, wire_niO1l_dataout, ~((~ reset_n)));
	assign		wire_nii00i_dataout = (nl0li === 1'b1) ? ni0i1l : ni0Oll;
	assign		wire_nii00l_dataout = (nl0li === 1'b1) ? ni0i1O : ni0Oli;
	assign		wire_nii00O_dataout = (nl0li === 1'b1) ? ni0i0i : ni0OiO;
	assign		wire_nii01i_dataout = (nl0li === 1'b1) ? ni00Ol : ni0OOl;
	assign		wire_nii01l_dataout = (nl0li === 1'b1) ? ni00OO : ni0OOi;
	assign		wire_nii01O_dataout = (nl0li === 1'b1) ? ni0i1i : ni0OlO;
	and(wire_nii0i_dataout, wire_niO0O_dataout, ~((~ reset_n)));
	assign		wire_nii0ii_dataout = (nl0li === 1'b1) ? ni0i0l : ni0Oil;
	assign		wire_nii0il_dataout = (nl0li === 1'b1) ? ni0i0O : ni0Oii;
	assign		wire_nii0iO_dataout = (nl0li === 1'b1) ? ni0iii : ni0O0O;
	and(wire_nii0l_dataout, wire_niOii_dataout, ~((~ reset_n)));
	assign		wire_nii0li_dataout = (nl0li === 1'b1) ? ni0iil : ni0O0l;
	assign		wire_nii0ll_dataout = (nl0li === 1'b1) ? ni0iiO : ni0O0i;
	assign		wire_nii0lO_dataout = (nl0li === 1'b1) ? ni0ili : ni0O1O;
	and(wire_nii0O_dataout, wire_niOil_dataout, ~((~ reset_n)));
	and(wire_nii1i_dataout, wire_niO1O_dataout, ~((~ reset_n)));
	assign		wire_nii1il_dataout = (nl0li === 1'b1) ? ni0O1i : nii1ii;
	assign		wire_nii1iO_dataout = (nl0li === 1'b1) ? ni00ii : nii10O;
	and(wire_nii1l_dataout, wire_niO0i_dataout, ~((~ reset_n)));
	assign		wire_nii1li_dataout = (nl0li === 1'b1) ? ni00il : nii10l;
	assign		wire_nii1ll_dataout = (nl0li === 1'b1) ? ni00iO : nii10i;
	assign		wire_nii1lO_dataout = (nl0li === 1'b1) ? ni00li : nii11O;
	and(wire_nii1O_dataout, wire_niO0l_dataout, ~((~ reset_n)));
	assign		wire_nii1Oi_dataout = (nl0li === 1'b1) ? ni00ll : nii11l;
	assign		wire_nii1Ol_dataout = (nl0li === 1'b1) ? ni00lO : nii11i;
	assign		wire_nii1OO_dataout = (nl0li === 1'b1) ? ni00Oi : ni0OOO;
	and(wire_niiii_dataout, wire_niOiO_dataout, ~((~ reset_n)));
	and(wire_niiil_dataout, wire_niOli_dataout, ~((~ reset_n)));
	and(wire_niiiO_dataout, wire_niOll_dataout, ~((~ reset_n)));
	assign		wire_niil0i_dataout = (nl0li === 1'b1) ? nlilOi : niil1O;
	assign		wire_niil0l_dataout = (nl0li === 1'b1) ? nliO1i : niil1l;
	assign		wire_niil0O_dataout = (nl0li === 1'b1) ? nliO1l : niil1i;
	and(wire_niili_dataout, wire_niOlO_dataout, ~((~ reset_n)));
	assign		wire_niilii_dataout = (nl0li === 1'b1) ? nliO1O : niiiOO;
	assign		wire_niilil_dataout = (nl0li === 1'b1) ? nliO0i : niiiOl;
	assign		wire_niiliO_dataout = (nl0li === 1'b1) ? nliO0l : niiiOi;
	and(wire_niill_dataout, wire_niOOi_dataout, ~((~ reset_n)));
	assign		wire_niilli_dataout = (nl0li === 1'b1) ? nliO0O : niiilO;
	assign		wire_niilll_dataout = (nl0li === 1'b1) ? nliOii : niiill;
	assign		wire_niillO_dataout = (nl0li === 1'b1) ? nliOil : niiili;
	and(wire_niilO_dataout, wire_niOOl_dataout, ~((~ reset_n)));
	assign		wire_niilOi_dataout = (nl0li === 1'b1) ? nliOiO : niiiiO;
	assign		wire_niilOl_dataout = (nl0li === 1'b1) ? nliOli : niiiil;
	assign		wire_niilOO_dataout = (nl0li === 1'b1) ? nliOll : niiiii;
	assign		wire_niiO0i_dataout = (nl0li === 1'b1) ? nliOOO : niii1O;
	assign		wire_niiO0l_dataout = (nl0li === 1'b1) ? nll11i : niii1l;
	assign		wire_niiO0O_dataout = (nl0li === 1'b1) ? nll11l : niii1i;
	assign		wire_niiO1i_dataout = (nl0li === 1'b1) ? nliOlO : niii0O;
	assign		wire_niiO1l_dataout = (nl0li === 1'b1) ? nliOOi : niii0l;
	assign		wire_niiO1O_dataout = (nl0li === 1'b1) ? nliOOl : niii0i;
	and(wire_niiOi_dataout, wire_niOOO_dataout, ~((~ reset_n)));
	assign		wire_niiOii_dataout = (nl0li === 1'b1) ? nll11O : nii0OO;
	assign		wire_niiOil_dataout = (nl0li === 1'b1) ? nll10i : nii0Ol;
	and(wire_niiOl_dataout, wire_nl11i_dataout, ~((~ reset_n)));
	and(wire_niiOO_dataout, wire_nl11l_dataout, ~((~ reset_n)));
	and(wire_nil0i_dataout, wire_nl10O_dataout, ~((~ reset_n)));
	and(wire_nil0l_dataout, wire_nl1ii_dataout, ~((~ reset_n)));
	and(wire_nil0O_dataout, wire_nl1il_dataout, ~((~ reset_n)));
	and(wire_nil1i_dataout, wire_nl11O_dataout, ~((~ reset_n)));
	and(wire_nil1l_dataout, wire_nl10i_dataout, ~((~ reset_n)));
	and(wire_nil1O_dataout, wire_nl10l_dataout, ~((~ reset_n)));
	and(wire_nilii_dataout, wire_nl1iO_dataout, ~((~ reset_n)));
	and(wire_nilil_dataout, wire_nl1li_dataout, ~((~ reset_n)));
	and(wire_niliO_dataout, wire_nl1ll_dataout, ~((~ reset_n)));
	and(wire_nilli_dataout, wire_nl1lO_dataout, ~((~ reset_n)));
	and(wire_nilll_dataout, wire_nl1Oi_dataout, ~((~ reset_n)));
	assign		wire_nillO_dataout = (n0il1O === 1'b1) ? n0Oil : nl1OO;
	assign		wire_nilOi_dataout = (n0il1O === 1'b1) ? n0i1O : ni0iO;
	assign		wire_nilOl_dataout = (n0il1O === 1'b1) ? n0i1l : ni0il;
	assign		wire_nilOO_dataout = (n0il1O === 1'b1) ? n0i1i : ni0ii;
	assign		wire_niO00i_dataout = (n0iiOO === 1'b1) ? ni00li : wire_nl10iO_dataout;
	assign		wire_niO00l_dataout = (n0iiOO === 1'b1) ? ni00ll : wire_nl10li_dataout;
	assign		wire_niO00O_dataout = (n0iiOO === 1'b1) ? ni00lO : wire_nl10ll_dataout;
	assign		wire_niO01i_dataout = (n0iiOO === 1'b1) ? ni00ii : wire_nl100O_dataout;
	assign		wire_niO01l_dataout = (n0iiOO === 1'b1) ? ni00il : wire_nl10ii_dataout;
	assign		wire_niO01O_dataout = (n0iiOO === 1'b1) ? ni00iO : wire_nl10il_dataout;
	assign		wire_niO0i_dataout = (n0il1O === 1'b1) ? n00lO : ni01O;
	assign		wire_niO0ii_dataout = (n0iiOO === 1'b1) ? ni00Oi : wire_nl10lO_dataout;
	assign		wire_niO0il_dataout = (n0iiOO === 1'b1) ? ni00Ol : wire_nl10Oi_dataout;
	assign		wire_niO0iO_dataout = (n0iiOO === 1'b1) ? ni00OO : wire_nl10Ol_dataout;
	assign		wire_niO0l_dataout = (n0il1O === 1'b1) ? n00ll : ni01l;
	assign		wire_niO0li_dataout = (n0iiOO === 1'b1) ? ni0i1i : wire_nl10OO_dataout;
	assign		wire_niO0ll_dataout = (n0iiOO === 1'b1) ? ni0i1l : wire_nl1i1i_dataout;
	assign		wire_niO0lO_dataout = (n0iiOO === 1'b1) ? ni0i1O : wire_nl1i1l_dataout;
	assign		wire_niO0O_dataout = (n0il1O === 1'b1) ? n00li : ni01i;
	assign		wire_niO0Oi_dataout = (n0iiOO === 1'b1) ? ni0i0i : wire_nl1i1O_dataout;
	assign		wire_niO0Ol_dataout = (n0iiOO === 1'b1) ? ni0i0l : wire_nl1i0i_dataout;
	assign		wire_niO0OO_dataout = (n0iiOO === 1'b1) ? ni0i0O : wire_nl1i0l_dataout;
	assign		wire_niO1i_dataout = (n0il1O === 1'b1) ? n00OO : ni00O;
	assign		wire_niO1l_dataout = (n0il1O === 1'b1) ? n00Ol : ni00l;
	assign		wire_niO1O_dataout = (n0il1O === 1'b1) ? n00Oi : ni00i;
	assign		wire_niO1OO_dataout = (n0iiOO === 1'b1) ? ni0O1i : wire_nl100l_dataout;
	assign		wire_niOi0i_dataout = (n0iiOO === 1'b1) ? ni0ili : wire_nl1iiO_dataout;
	assign		wire_niOi0l_dataout = (n0iiOO === 1'b1) ? niO10i : wire_nl1ili_dataout;
	assign		wire_niOi0O_dataout = (n0iiOO === 1'b1) ? nillii : wire_nl1ill_dataout;
	assign		wire_niOi1i_dataout = (n0iiOO === 1'b1) ? ni0iii : wire_nl1i0O_dataout;
	assign		wire_niOi1l_dataout = (n0iiOO === 1'b1) ? ni0iil : wire_nl1iii_dataout;
	assign		wire_niOi1O_dataout = (n0iiOO === 1'b1) ? ni0iiO : wire_nl1iil_dataout;
	assign		wire_niOii_dataout = (n0il1O === 1'b1) ? n00iO : ni1OO;
	assign		wire_niOiii_dataout = (n0iiOO === 1'b1) ? nill0O : wire_nl1ilO_dataout;
	assign		wire_niOiil_dataout = (n0iiOO === 1'b1) ? nill0l : wire_nl1iOi_dataout;
	assign		wire_niOiiO_dataout = (n0iiOO === 1'b1) ? nill0i : wire_nl1iOl_dataout;
	assign		wire_niOil_dataout = (n0il1O === 1'b1) ? n00il : ni1Ol;
	assign		wire_niOili_dataout = (n0iiOO === 1'b1) ? nill1O : wire_nl1iOO_dataout;
	assign		wire_niOill_dataout = (n0iiOO === 1'b1) ? nill1l : wire_nl1l1i_dataout;
	assign		wire_niOilO_dataout = (n0iiOO === 1'b1) ? nill1i : wire_nl1l1l_dataout;
	assign		wire_niOiO_dataout = (n0il1O === 1'b1) ? n00ii : ni1Oi;
	assign		wire_niOiOi_dataout = (n0iiOO === 1'b1) ? niliOO : wire_nl1l1O_dataout;
	assign		wire_niOiOl_dataout = (n0iiOO === 1'b1) ? niliOl : wire_nl1l0i_dataout;
	assign		wire_niOiOO_dataout = (n0iiOO === 1'b1) ? niliOi : wire_nl1l0l_dataout;
	assign		wire_niOl0i_dataout = (n0iiOO === 1'b1) ? niliiO : wire_nl1liO_dataout;
	assign		wire_niOl0l_dataout = (n0iiOO === 1'b1) ? niliil : wire_nl1lli_dataout;
	assign		wire_niOl0O_dataout = (n0iiOO === 1'b1) ? niliii : wire_nl1lll_dataout;
	assign		wire_niOl1i_dataout = (n0iiOO === 1'b1) ? nililO : wire_nl1l0O_dataout;
	assign		wire_niOl1l_dataout = (n0iiOO === 1'b1) ? nilill : wire_nl1lii_dataout;
	assign		wire_niOl1O_dataout = (n0iiOO === 1'b1) ? nilili : wire_nl1lil_dataout;
	assign		wire_niOli_dataout = (n0il1O === 1'b1) ? n000O : ni1lO;
	assign		wire_niOlii_dataout = (n0iiOO === 1'b1) ? nili0O : wire_nl1llO_dataout;
	assign		wire_niOlil_dataout = (n0iiOO === 1'b1) ? nili0l : wire_nl1lOi_dataout;
	assign		wire_niOliO_dataout = (n0iiOO === 1'b1) ? nili0i : wire_nl1lOl_dataout;
	assign		wire_niOll_dataout = (n0il1O === 1'b1) ? n000l : ni1ll;
	assign		wire_niOlli_dataout = (n0iiOO === 1'b1) ? nili1O : wire_nl1lOO_dataout;
	assign		wire_niOlll_dataout = (n0iiOO === 1'b1) ? nili1l : wire_nl1O1i_dataout;
	assign		wire_niOllO_dataout = (n0iiOO === 1'b1) ? nili1i : wire_nl1O1l_dataout;
	assign		wire_niOlO_dataout = (n0il1O === 1'b1) ? n000i : ni1li;
	assign		wire_niOlOi_dataout = (n0iiOO === 1'b1) ? nil0OO : wire_nl1O1O_dataout;
	assign		wire_niOlOl_dataout = (n0iiOO === 1'b1) ? nil0Ol : wire_nl1O0i_dataout;
	assign		wire_niOlOO_dataout = (n0iiOO === 1'b1) ? nil0Oi : wire_nl1O0l_dataout;
	assign		wire_niOO0i_dataout = (n0iiOO === 1'b1) ? nil0iO : wire_nl1OiO_dataout;
	assign		wire_niOO0l_dataout = (n0iiOO === 1'b1) ? nil0il : wire_nl1Oli_dataout;
	assign		wire_niOO0O_dataout = (n0iiOO === 1'b1) ? nil0ii : wire_nl1Oll_dataout;
	assign		wire_niOO1i_dataout = (n0iiOO === 1'b1) ? nil0lO : wire_nl1O0O_dataout;
	assign		wire_niOO1l_dataout = (n0iiOO === 1'b1) ? nil0ll : wire_nl1Oii_dataout;
	assign		wire_niOO1O_dataout = (n0iiOO === 1'b1) ? nil0li : wire_nl1Oil_dataout;
	assign		wire_niOOi_dataout = (n0il1O === 1'b1) ? n001O : ni1iO;
	assign		wire_niOOii_dataout = (n0iiOO === 1'b1) ? nil00O : wire_nl1OlO_dataout;
	assign		wire_niOOil_dataout = (n0iiOO === 1'b1) ? nil00l : wire_nl1OOi_dataout;
	assign		wire_niOOiO_dataout = (n0iiOO === 1'b1) ? nil00i : wire_nl1OOl_dataout;
	assign		wire_niOOl_dataout = (n0il1O === 1'b1) ? n001l : ni1il;
	assign		wire_niOOli_dataout = (n0iiOO === 1'b1) ? nil01O : wire_nl1OOO_dataout;
	assign		wire_niOOll_dataout = (n0iiOO === 1'b1) ? nil01l : wire_nl011i_dataout;
	assign		wire_niOOlO_dataout = (n0iiOO === 1'b1) ? nil01i : wire_nl011l_dataout;
	assign		wire_niOOO_dataout = (n0il1O === 1'b1) ? n001i : ni1ii;
	assign		wire_niOOOi_dataout = (n0iiOO === 1'b1) ? nil1OO : wire_nl011O_dataout;
	assign		wire_niOOOl_dataout = (n0iiOO === 1'b1) ? nil1Ol : wire_nl010i_dataout;
	assign		wire_niOOOO_dataout = (n0iiOO === 1'b1) ? nil1Oi : wire_nl010l_dataout;
	and(wire_nl000i_dataout, nillOi, ~(n0iiOl));
	and(wire_nl000l_dataout, nilllO, ~(n0iiOl));
	and(wire_nl000O_dataout, nillll, ~(n0iiOl));
	and(wire_nl001i_dataout, nilO1i, ~(n0iiOl));
	and(wire_nl001l_dataout, nillOO, ~(n0iiOl));
	and(wire_nl001O_dataout, nillOl, ~(n0iiOl));
	and(wire_nl00ii_dataout, nillli, ~(n0iiOl));
	and(wire_nl00il_dataout, nilliO, ~(n0iiOl));
	and(wire_nl00iO_dataout, nillil, ~(n0iiOl));
	assign		wire_nl010i_dataout = (n0iiOl === 1'b1) ? nillil : nl0Oil;
	and(wire_nl010l_dataout, nl0OiO, ~(n0iiOl));
	and(wire_nl010O_dataout, nl0Oli, ~(n0iiOl));
	assign		wire_nl011i_dataout = (n0iiOl === 1'b1) ? nillll : nl0O0l;
	assign		wire_nl011l_dataout = (n0iiOl === 1'b1) ? nillli : nl0O0O;
	assign		wire_nl011O_dataout = (n0iiOl === 1'b1) ? nilliO : nl0Oii;
	and(wire_nl01ii_dataout, nl0Oll, ~(n0iiOl));
	and(wire_nl01il_dataout, nilOiO, ~(n0iiOl));
	and(wire_nl01iO_dataout, nilOil, ~(n0iiOl));
	and(wire_nl01li_dataout, nilOii, ~(n0iiOl));
	and(wire_nl01ll_dataout, nilO0O, ~(n0iiOl));
	and(wire_nl01lO_dataout, nilO0l, ~(n0iiOl));
	and(wire_nl01Oi_dataout, nilO0i, ~(n0iiOl));
	and(wire_nl01Ol_dataout, nilO1O, ~(n0iiOl));
	and(wire_nl01OO_dataout, nilO1l, ~(n0iiOl));
	or(wire_nl0ll_dataout, nl01O, n1iO);
	assign		wire_nl0lO_dataout = ((~ ni001i) === 1'b1) ? wire_nl0ll_dataout : n11O;
	and(wire_nl0Oi_dataout, wire_nl0lO_dataout, ~((~ reset_n)));
	and(wire_nl0OlO_dataout, wire_nli01l_dataout, ~((~ reset_n)));
	and(wire_nl0OO_dataout, wire_nli1i_dataout, ~((~ reset_n)));
	and(wire_nl0OOi_dataout, wire_nli01O_dataout, ~((~ reset_n)));
	and(wire_nl0OOl_dataout, wire_nli00i_dataout, ~((~ reset_n)));
	and(wire_nl0OOO_dataout, wire_nli00l_dataout, ~((~ reset_n)));
	assign		wire_nl100i_dataout = (n0iiOO === 1'b1) ? niiOiO : wire_nl00iO_dataout;
	assign		wire_nl100l_dataout = (n0iiOl === 1'b1) ? nl00lO : nilOli;
	assign		wire_nl100O_dataout = (n0iiOl === 1'b1) ? nl00Oi : nilOll;
	assign		wire_nl101i_dataout = (n0iiOO === 1'b1) ? niiOlO : wire_nl000O_dataout;
	assign		wire_nl101l_dataout = (n0iiOO === 1'b1) ? niiOll : wire_nl00ii_dataout;
	assign		wire_nl101O_dataout = (n0iiOO === 1'b1) ? niiOli : wire_nl00il_dataout;
	assign		wire_nl10i_dataout = (n0il1O === 1'b1) ? n01lO : ni11O;
	assign		wire_nl10ii_dataout = (n0iiOl === 1'b1) ? nl00Ol : nilOlO;
	assign		wire_nl10il_dataout = (n0iiOl === 1'b1) ? nl00OO : nilOOi;
	assign		wire_nl10iO_dataout = (n0iiOl === 1'b1) ? nl0i1i : nilOOl;
	assign		wire_nl10l_dataout = (n0il1O === 1'b1) ? n01ll : ni11l;
	assign		wire_nl10li_dataout = (n0iiOl === 1'b1) ? nl0i1l : nilOOO;
	assign		wire_nl10ll_dataout = (n0iiOl === 1'b1) ? nl0i1O : niO11i;
	assign		wire_nl10lO_dataout = (n0iiOl === 1'b1) ? nl0i0i : niO11l;
	assign		wire_nl10O_dataout = (n0il1O === 1'b1) ? n01li : ni11i;
	assign		wire_nl10Oi_dataout = (n0iiOl === 1'b1) ? nl0i0l : niO10l;
	assign		wire_nl10Ol_dataout = (n0iiOl === 1'b1) ? nl0iil : niO10O;
	assign		wire_nl10OO_dataout = (n0iiOl === 1'b1) ? nl0iiO : niO1ii;
	assign		wire_nl110i_dataout = (n0iiOO === 1'b1) ? nil1iO : wire_nl01iO_dataout;
	assign		wire_nl110l_dataout = (n0iiOO === 1'b1) ? nil1il : wire_nl01li_dataout;
	assign		wire_nl110O_dataout = (n0iiOO === 1'b1) ? nil1ii : wire_nl01ll_dataout;
	assign		wire_nl111i_dataout = (n0iiOO === 1'b1) ? nil1lO : wire_nl010O_dataout;
	assign		wire_nl111l_dataout = (n0iiOO === 1'b1) ? nil1ll : wire_nl01ii_dataout;
	assign		wire_nl111O_dataout = (n0iiOO === 1'b1) ? nil1li : wire_nl01il_dataout;
	assign		wire_nl11i_dataout = (n0il1O === 1'b1) ? n01OO : ni10O;
	assign		wire_nl11ii_dataout = (n0iiOO === 1'b1) ? nil10O : wire_nl01lO_dataout;
	assign		wire_nl11il_dataout = (n0iiOO === 1'b1) ? nil10l : wire_nl01Oi_dataout;
	assign		wire_nl11iO_dataout = (n0iiOO === 1'b1) ? nil10i : wire_nl01Ol_dataout;
	assign		wire_nl11l_dataout = (n0il1O === 1'b1) ? n01Ol : ni10l;
	assign		wire_nl11li_dataout = (n0iiOO === 1'b1) ? nil11O : wire_nl01OO_dataout;
	assign		wire_nl11ll_dataout = (n0iiOO === 1'b1) ? nil11l : wire_nl001i_dataout;
	assign		wire_nl11lO_dataout = (n0iiOO === 1'b1) ? nil11i : wire_nl001l_dataout;
	assign		wire_nl11O_dataout = (n0il1O === 1'b1) ? n01Oi : ni10i;
	assign		wire_nl11Oi_dataout = (n0iiOO === 1'b1) ? niiOOO : wire_nl001O_dataout;
	assign		wire_nl11Ol_dataout = (n0iiOO === 1'b1) ? niiOOl : wire_nl000i_dataout;
	assign		wire_nl11OO_dataout = (n0iiOO === 1'b1) ? niiOOi : wire_nl000l_dataout;
	assign		wire_nl1i0i_dataout = (n0iiOl === 1'b1) ? nl0iOi : niO1ll;
	assign		wire_nl1i0l_dataout = (n0iiOl === 1'b1) ? nl0iOl : niO1lO;
	assign		wire_nl1i0O_dataout = (n0iiOl === 1'b1) ? nl0iOO : niO1Oi;
	assign		wire_nl1i1i_dataout = (n0iiOl === 1'b1) ? nl0ili : niO1il;
	assign		wire_nl1i1l_dataout = (n0iiOl === 1'b1) ? nl0ill : niO1iO;
	assign		wire_nl1i1O_dataout = (n0iiOl === 1'b1) ? nl0ilO : niO1li;
	assign		wire_nl1ii_dataout = (n0il1O === 1'b1) ? n01iO : n0OOO;
	assign		wire_nl1iii_dataout = (n0iiOl === 1'b1) ? nl0l1i : niO1Ol;
	assign		wire_nl1iil_dataout = (n0iiOl === 1'b1) ? nl0l1l : nl00li;
	assign		wire_nl1iiO_dataout = (n0iiOl === 1'b1) ? nl0l1O : nl00ll;
	assign		wire_nl1il_dataout = (n0il1O === 1'b1) ? n01il : n0OOl;
	assign		wire_nl1ili_dataout = (n0iiOl === 1'b1) ? nl0l0i : nl00lO;
	assign		wire_nl1ill_dataout = (n0iiOl === 1'b1) ? nl0l0l : nl00Oi;
	assign		wire_nl1ilO_dataout = (n0iiOl === 1'b1) ? nl0l0O : nl00Ol;
	assign		wire_nl1iO_dataout = (n0il1O === 1'b1) ? n01ii : n0OOi;
	assign		wire_nl1iOi_dataout = (n0iiOl === 1'b1) ? nl0lii : nl00OO;
	assign		wire_nl1iOl_dataout = (n0iiOl === 1'b1) ? nl0lil : nl0i1i;
	assign		wire_nl1iOO_dataout = (n0iiOl === 1'b1) ? nl0liO : nl0i1l;
	assign		wire_nl1l0i_dataout = (n0iiOl === 1'b1) ? nl0lOi : nl0iil;
	assign		wire_nl1l0l_dataout = (n0iiOl === 1'b1) ? nl0lOl : nl0iiO;
	assign		wire_nl1l0O_dataout = (n0iiOl === 1'b1) ? nl0lOO : nl0ili;
	assign		wire_nl1l1i_dataout = (n0iiOl === 1'b1) ? nl0lli : nl0i1O;
	assign		wire_nl1l1l_dataout = (n0iiOl === 1'b1) ? nl0lll : nl0i0i;
	assign		wire_nl1l1O_dataout = (n0iiOl === 1'b1) ? nl0llO : nl0i0l;
	assign		wire_nl1li_dataout = (n0il1O === 1'b1) ? n010O : n0OlO;
	assign		wire_nl1lii_dataout = (n0iiOl === 1'b1) ? nl0O1i : nl0ill;
	assign		wire_nl1lil_dataout = (n0iiOl === 1'b1) ? nl0O1l : nl0ilO;
	assign		wire_nl1liO_dataout = (n0iiOl === 1'b1) ? nl0O1O : nl0iOi;
	assign		wire_nl1ll_dataout = (n0il1O === 1'b1) ? n010l : n0Oll;
	assign		wire_nl1lli_dataout = (n0iiOl === 1'b1) ? nl0O0i : nl0iOl;
	assign		wire_nl1lll_dataout = (n0iiOl === 1'b1) ? nl0O0l : nl0iOO;
	assign		wire_nl1llO_dataout = (n0iiOl === 1'b1) ? nl0O0O : nl0l1i;
	assign		wire_nl1lO_dataout = (n0il1O === 1'b1) ? n010i : n0Oli;
	assign		wire_nl1lOi_dataout = (n0iiOl === 1'b1) ? nl0Oii : nl0l1l;
	assign		wire_nl1lOl_dataout = (n0iiOl === 1'b1) ? nl0Oil : nl0l1O;
	assign		wire_nl1lOO_dataout = (n0iiOl === 1'b1) ? nl0OiO : nl0l0i;
	assign		wire_nl1O0i_dataout = (n0iiOl === 1'b1) ? nilOil : nl0lil;
	assign		wire_nl1O0l_dataout = (n0iiOl === 1'b1) ? nilOii : nl0liO;
	assign		wire_nl1O0O_dataout = (n0iiOl === 1'b1) ? nilO0O : nl0lli;
	assign		wire_nl1O1i_dataout = (n0iiOl === 1'b1) ? nl0Oli : nl0l0l;
	assign		wire_nl1O1l_dataout = (n0iiOl === 1'b1) ? nl0Oll : nl0l0O;
	assign		wire_nl1O1O_dataout = (n0iiOl === 1'b1) ? nilOiO : nl0lii;
	assign		wire_nl1Oi_dataout = (n0il1O === 1'b1) ? n011O : n0OiO;
	assign		wire_nl1Oii_dataout = (n0iiOl === 1'b1) ? nilO0l : nl0lll;
	assign		wire_nl1Oil_dataout = (n0iiOl === 1'b1) ? nilO0i : nl0llO;
	assign		wire_nl1OiO_dataout = (n0iiOl === 1'b1) ? nilO1O : nl0lOi;
	assign		wire_nl1Oli_dataout = (n0iiOl === 1'b1) ? nilO1l : nl0lOl;
	assign		wire_nl1Oll_dataout = (n0iiOl === 1'b1) ? nilO1i : nl0lOO;
	assign		wire_nl1OlO_dataout = (n0iiOl === 1'b1) ? nillOO : nl0O1i;
	assign		wire_nl1OOi_dataout = (n0iiOl === 1'b1) ? nillOl : nl0O1l;
	assign		wire_nl1OOl_dataout = (n0iiOl === 1'b1) ? nillOi : nl0O1O;
	assign		wire_nl1OOO_dataout = (n0iiOl === 1'b1) ? nilllO : nl0O0i;
	and(wire_nli00i_dataout, wire_nliiiO_dataout, ~(n0il1i));
	and(wire_nli00l_dataout, wire_nliili_dataout, ~(n0il1i));
	and(wire_nli00O_dataout, wire_nliill_dataout, ~(n0il1i));
	and(wire_nli01i_dataout, wire_nlii0O_dataout, ~((~ reset_n)));
	and(wire_nli01l_dataout, wire_nliiii_dataout, ~(n0il1i));
	and(wire_nli01O_dataout, wire_nliiil_dataout, ~(n0il1i));
	and(wire_nli0i_dataout, wire_nli0l_dataout, ~((~ reset_n)));
	and(wire_nli0ii_dataout, wire_nliilO_dataout, ~(n0il1i));
	and(wire_nli0il_dataout, wire_nliiOi_dataout, ~(n0il1i));
	and(wire_nli0iO_dataout, wire_nliiOl_dataout, ~(n0il1i));
	assign		wire_nli0l_dataout = ((~ ni001i) === 1'b1) ? nli1O : nl0Ol;
	and(wire_nli0li_dataout, wire_nliiOO_dataout, ~(n0il1i));
	and(wire_nli0ll_dataout, wire_nlil1i_dataout, ~(n0il1i));
	and(wire_nli0lO_dataout, wire_nlil1l_dataout, ~(n0il1i));
	and(wire_nli0Oi_dataout, wire_nlil1O_dataout, ~(n0il1i));
	and(wire_nli0Ol_dataout, wire_nlil0i_dataout, ~(n0il1i));
	and(wire_nli0OO_dataout, wire_nlil0l_dataout, ~(n0il1i));
	and(wire_nli10i_dataout, wire_nli0iO_dataout, ~((~ reset_n)));
	and(wire_nli10l_dataout, wire_nli0li_dataout, ~((~ reset_n)));
	and(wire_nli10O_dataout, wire_nli0ll_dataout, ~((~ reset_n)));
	and(wire_nli11i_dataout, wire_nli00O_dataout, ~((~ reset_n)));
	and(wire_nli11l_dataout, wire_nli0ii_dataout, ~((~ reset_n)));
	and(wire_nli11O_dataout, wire_nli0il_dataout, ~((~ reset_n)));
	or(wire_nli1i_dataout, nl0li, ((~ ni001i) & nl01O));
	and(wire_nli1ii_dataout, wire_nli0lO_dataout, ~((~ reset_n)));
	and(wire_nli1il_dataout, wire_nli0Oi_dataout, ~((~ reset_n)));
	and(wire_nli1iO_dataout, wire_nli0Ol_dataout, ~((~ reset_n)));
	and(wire_nli1li_dataout, wire_nli0OO_dataout, ~((~ reset_n)));
	and(wire_nli1ll_dataout, wire_nlii1i_dataout, ~((~ reset_n)));
	and(wire_nli1lO_dataout, wire_nlii1l_dataout, ~((~ reset_n)));
	and(wire_nli1Oi_dataout, wire_nlii1O_dataout, ~((~ reset_n)));
	and(wire_nli1Ol_dataout, wire_nlii0i_dataout, ~((~ reset_n)));
	and(wire_nli1OO_dataout, wire_nlii0l_dataout, ~((~ reset_n)));
	and(wire_nlii0i_dataout, wire_nliliO_dataout, ~(n0il1i));
	and(wire_nlii0l_dataout, wire_nlilli_dataout, ~(n0il1i));
	and(wire_nlii0O_dataout, wire_nlilll_dataout, ~(n0il1i));
	and(wire_nlii1i_dataout, wire_nlil0O_dataout, ~(n0il1i));
	and(wire_nlii1l_dataout, wire_nlilii_dataout, ~(n0il1i));
	and(wire_nlii1O_dataout, wire_nlilil_dataout, ~(n0il1i));
	and(wire_nliii_dataout, wire_nliil_dataout, ~((~ reset_n)));
	assign		wire_nliiii_dataout = (n0il1l === 1'b1) ? nlilOl : nlilOi;
	assign		wire_nliiil_dataout = (n0il1l === 1'b1) ? nll10l : nliO1i;
	assign		wire_nliiiO_dataout = (n0il1l === 1'b1) ? nll10O : nliO1l;
	assign		wire_nliil_dataout = ((~ ni001i) === 1'b1) ? nli0O : nli1O;
	assign		wire_nliili_dataout = (n0il1l === 1'b1) ? nll1ii : nliO1O;
	assign		wire_nliill_dataout = (n0il1l === 1'b1) ? nll1il : nliO0i;
	assign		wire_nliilO_dataout = (n0il1l === 1'b1) ? nll1iO : nliO0l;
	assign		wire_nliiOi_dataout = (n0il1l === 1'b1) ? nll1li : nliO0O;
	assign		wire_nliiOl_dataout = (n0il1l === 1'b1) ? nll1ll : nliOii;
	assign		wire_nliiOO_dataout = (n0il1l === 1'b1) ? nll1lO : nliOil;
	assign		wire_nlil0i_dataout = (n0il1l === 1'b1) ? nll01i : nliOlO;
	assign		wire_nlil0l_dataout = (n0il1l === 1'b1) ? nll01l : nliOOi;
	assign		wire_nlil0O_dataout = (n0il1l === 1'b1) ? nll01O : nliOOl;
	assign		wire_nlil1i_dataout = (n0il1l === 1'b1) ? nll1Oi : nliOiO;
	assign		wire_nlil1l_dataout = (n0il1l === 1'b1) ? nll1Ol : nliOli;
	assign		wire_nlil1O_dataout = (n0il1l === 1'b1) ? nll1OO : nliOll;
	and(wire_nlili_dataout, wire_nliOl_dataout, ~((~ reset_n)));
	assign		wire_nlilii_dataout = (n0il1l === 1'b1) ? nll00i : nliOOO;
	assign		wire_nlilil_dataout = (n0il1l === 1'b1) ? nll00l : nll11i;
	assign		wire_nliliO_dataout = (n0il1l === 1'b1) ? nll00O : nll11l;
	and(wire_nlill_dataout, wire_nliOO_dataout, ~((~ reset_n)));
	assign		wire_nlilli_dataout = (n0il1l === 1'b1) ? nll0ii : nll11O;
	assign		wire_nlilll_dataout = (n0il1l === 1'b1) ? nll0iO : nll10i;
	and(wire_nlilO_dataout, wire_nll1i_dataout, ~((~ reset_n)));
	and(wire_nliOi_dataout, wire_nll1l_dataout, ~((~ reset_n)));
	assign		wire_nliOl_dataout = ((~ ni001i) === 1'b1) ? n1il : nli0O;
	assign		wire_nliOO_dataout = ((~ ni001i) === 1'b1) ? n1ll : n1il;
	and(wire_nll0i_dataout, wire_nllil_dataout, ~((~ reset_n)));
	and(wire_nll0l_dataout, wire_nlliO_dataout, ~((~ reset_n)));
	and(wire_nll0O_dataout, wire_nllli_dataout, ~((~ reset_n)));
	assign		wire_nll1i_dataout = ((~ ni001i) === 1'b1) ? nl0iO : n1ll;
	assign		wire_nll1l_dataout = ((~ ni001i) === 1'b1) ? wire_nll1O_dataout : nl0iO;
	or(wire_nll1O_dataout, nli0O, ((((~ nliiO) & nl0il) & (~ nl0ii)) & nl00O));
	and(wire_nllii_dataout, wire_nllll_dataout, ~((~ reset_n)));
	assign		wire_nllil_dataout = ((~ ni001i) === 1'b1) ? wire_nlllO_dataout : nliiO;
	assign		wire_nlliO_dataout = ((~ ni001i) === 1'b1) ? wire_nllOi_dataout : nl0il;
	assign		wire_nllli_dataout = ((~ ni001i) === 1'b1) ? wire_nllOl_dataout : nl0ii;
	assign		wire_nllll_dataout = ((~ ni001i) === 1'b1) ? wire_nllOO_dataout : nl00O;
	and(wire_nlllO_dataout, wire_nlO1i_dataout, ~(n0il0i));
	and(wire_nllOi_dataout, wire_nlO1l_dataout, ~(n0il0i));
	or(wire_nllOl_dataout, wire_nlO1O_dataout, n0il0i);
	or(wire_nllOO_dataout, wire_nlO0i_dataout, n0il0i);
	assign		wire_nlO0i_dataout = (nl0li === 1'b1) ? wire_nlO0l_o[3] : nl00O;
	assign		wire_nlO1i_dataout = (nl0li === 1'b1) ? wire_nlO0l_o[0] : nliiO;
	assign		wire_nlO1l_dataout = (nl0li === 1'b1) ? wire_nlO0l_o[1] : nl0il;
	assign		wire_nlO1O_dataout = (nl0li === 1'b1) ? wire_nlO0l_o[2] : nl0ii;
	and(wire_nlOii_dataout, wire_nlOiO_dataout, ~((~ reset_n)));
	and(wire_nlOil_dataout, wire_nlOli_dataout, ~((~ reset_n)));
	assign		wire_nlOiO_dataout = ((~ ni001i) === 1'b1) ? nl00i : nl00l;
	assign		wire_nlOli_dataout = ((~ ni001i) === 1'b1) ? (nlOlO & (~ nlO0O)) : nl00i;
	and(wire_nlOOi_dataout, wire_nlOOl_dataout, ~((~ reset_n)));
	assign		wire_nlOOl_dataout = (((~ ni001i) & nlOlO) === 1'b1) ? wire_nlOOO_dataout : nlO0O;
	and(wire_nlOOO_dataout, wire_n11i_o[0], ~(nlO0O));
	oper_add   n0O0O
	( 
	.a({n011O, n010i, n010l, n010O, n01ii, n01il, n01iO, n01li, n01ll, n01lO, n01Oi, n01Ol, n01OO, n001i, n001l, n001O, n000i, n000l, n000O, n00ii, n00il, n00iO, n00li, n00ll, n00lO, n00Oi, n00Ol, n00OO, n0i1i, n0i1l, n0i1O, n0Oil}),
	.b({nlOllO, nlOlOi, nlOlOl, nlOlOO, nlOO1i, nlOO1l, nlOO1O, nlOO0i, nlOO0l, nlOO0O, nlOOii, nlOOil, nlOOiO, nlOOli, nlOOll, nlOOlO, nlOOOi, nlOOOl, nlOOOO, n111i, n111l, n111O, n110i, n110l, n110O, n11ii, n11il, n11iO, n11li, n11ll, n11lO, n011l}),
	.cin(1'b0),
	.cout(),
	.o(wire_n0O0O_o));
	defparam
		n0O0O.sgate_representation = 0,
		n0O0O.width_a = 32,
		n0O0O.width_b = 32,
		n0O0O.width_o = 32;
	oper_add   n11i
	( 
	.a({nlO0O}),
	.b({1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_n11i_o));
	defparam
		n11i.sgate_representation = 0,
		n11i.width_a = 1,
		n11i.width_b = 1,
		n11i.width_o = 1;
	oper_add   nlliOO
	( 
	.a({{2{ni0O1O}}, ni0O0i, ni0O0l, ni0O0O, ni0Oii, ni0Oil, ni0OiO, ni0Oli, ni0Oll, ni0OlO, ni0OOi, ni0OOl, ni0OOO, nii11i, nii11l, nii11O, nii10i, nii10l, nii10O, nii1ii}),
	.b({{2{nii0Ol}}, nii0OO, niii1i, niii1l, niii1O, niii0i, niii0l, niii0O, niiiii, niiiil, niiiiO, niiili, niiill, niiilO, niiiOi, niiiOl, niiiOO, niil1i, niil1l, niil1O}),
	.cin(1'b0),
	.cout(),
	.o(wire_nlliOO_o));
	defparam
		nlliOO.sgate_representation = 0,
		nlliOO.width_a = 21,
		nlliOO.width_b = 21,
		nlliOO.width_o = 21;
	oper_add   nlO0l
	( 
	.a({nl00O, nl0ii, nl0il, nliiO}),
	.b({{3{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nlO0l_o));
	defparam
		nlO0l.sgate_representation = 0,
		nlO0l.width_a = 4,
		nlO0l.width_b = 4,
		nlO0l.width_o = 4;
	oper_add   nlOlll
	( 
	.a({{2{nlO0il}}, nlO0iO, nlO0li, nlO0ll, nlO0lO, nlO0Oi, nlO0Ol, nlO0OO, nlOi1i, nlOi1l, nlOi1O, nlOi0i, nlOi0l, nlOi0O, nlOiii, nlOiil, nlOiiO, nlOili, nlOill, nlOilO, nlOiOi, nlOiOl, nlOiOO, nlOl1i, nlOl1l, nlOl1O, nlOl0i, nlOl0l, nlOl0O, nlOlii, nlOlil, nlOliO, nlOlli}),
	.b({34{1'b0}}),
	.cin(1'b0),
	.cout(),
	.o(wire_nlOlll_o));
	defparam
		nlOlll.sgate_representation = 0,
		nlOlll.width_a = 34,
		nlOlll.width_b = 34,
		nlOlll.width_o = 34;
	oper_mux   n0O1lO
	( 
	.data({wire_n0O01i_dataout, {3{1'b0}}}),
	.o(wire_n0O1lO_o),
	.sel({n0iilO, ni1lii}));
	defparam
		n0O1lO.width_data = 4,
		n0O1lO.width_sel = 2;
	oper_mux   n0O1Oi
	( 
	.data({wire_n0O01l_dataout, {3{n0iill}}}),
	.o(wire_n0O1Oi_o),
	.sel({n0iilO, ni1lii}));
	defparam
		n0O1Oi.width_data = 4,
		n0O1Oi.width_sel = 2;
	oper_mux   n0O1Ol
	( 
	.data({ast_source_ready, 1'b1, ast_source_ready, 1'b0}),
	.o(wire_n0O1Ol_o),
	.sel({n0iilO, ni1lii}));
	defparam
		n0O1Ol.width_data = 4,
		n0O1Ol.width_sel = 2;
	oper_mux   n0O1OO
	( 
	.data({wire_n0O01O_dataout, 1'b0, wire_n0O0il_dataout, 1'b0}),
	.o(wire_n0O1OO_o),
	.sel({n0iilO, ni1lii}));
	defparam
		n0O1OO.width_data = 4,
		n0O1OO.width_sel = 2;
	oper_selector   n0illi
	( 
	.data({wire_n0iO1i_dataout, 1'b0, n0iiOi}),
	.o(wire_n0illi_o),
	.sel({n0l00O, n0l00l, n0l00i}));
	defparam
		n0illi.width_data = 3,
		n0illi.width_sel = 3;
	oper_selector   n0illl
	( 
	.data({n0i0lO, n0iiOi, 1'b0}),
	.o(wire_n0illl_o),
	.sel({n0l00O, n0l00l, n0l00i}));
	defparam
		n0illl.width_data = 3,
		n0illl.width_sel = 3;
	oper_selector   n0illO
	( 
	.data({wire_n0iO1l_dataout, (~ n0iiOi)}),
	.o(wire_n0illO_o),
	.sel({n0l00O, (~ n0l00O)}));
	defparam
		n0illO.width_data = 2,
		n0illO.width_sel = 2;
	oper_selector   n0ilOi
	( 
	.data({((~ n0iiOi) & wire_ni001l_dataout), 1'b0, (~ n0iiOi)}),
	.o(wire_n0ilOi_o),
	.sel({n0l00O, n0l00l, n0l00i}));
	defparam
		n0ilOi.width_data = 3,
		n0ilOi.width_sel = 3;
	scfifo   n0ilil
	( 
	.aclr((~ reset_n)),
	.almost_empty(),
	.almost_full(wire_n0ilil_almost_full),
	.clock(clk),
	.data({{2{1'b0}}, n0l1OO, n0l1Oi, n0l1lO, n0l1ll, n0l1li, n0l1iO, n0l1il, n0l1ii, n0l10O, n0l10l, n0l10i, n0l11O, n0l11l, n0l11i, n0iOOO, n0iOOl, n0iOOi, n0iOlO, n0iOll, n0iliO}),
	.empty(wire_n0ilil_empty),
	.full(),
	.q(wire_n0ilil_q),
	.rdreq(wire_n0ilOi_o),
	.sclr(1'b0),
	.usedw(wire_n0ilil_usedw),
	.wrreq(n0l0ii));
	defparam
		n0ilil.add_ram_output_register = "ON",
		n0ilil.allow_rwcycle_when_full = "OFF",
		n0ilil.almost_empty_value = 1,
		n0ilil.almost_full_value = 3,
		n0ilil.intended_device_family = "Cyclone IV E",
		n0ilil.lpm_numwords = 5,
		n0ilil.lpm_showahead = "OFF",
		n0ilil.lpm_width = 22,
		n0ilil.lpm_widthu = 3,
		n0ilil.overflow_checking = "OFF",
		n0ilil.underflow_checking = "OFF",
		n0ilil.use_eab = "ON";
	assign
		ast_sink_ready = n0l01l,
		ast_source_data = {ni01li, ni01il, ni01ii, ni010O, ni010l, ni010i, ni011O, ni011l, ni011i, ni1OOO, ni1OOl, ni1OOi, ni1OlO, ni1Oll, ni1Oli, ni1OiO, ni1Oil, ni1Oii, ni1O0O, ni1O0l, ni1O0i, ni1O1O, ni1O1l, ni1O1i, ni1lOO, ni1lOl, ni1lOi, ni1llO, ni1lll, ni1lli, ni1liO, ni1lil},
		ast_source_error = {1'b0, ni1l0i},
		ast_source_valid = ni1lii,
		n0i0li = (n0l01i & n0i0Oi),
		n0i0ll = ((~ n0l01i) & (n0iiOi & wire_ni001l_dataout)),
		n0i0lO = ((~ n0l01i) & n0i0Oi),
		n0i0Oi = (n0iiOi & (~ wire_ni001l_dataout)),
		n0i0Ol = (ast_sink_valid & n0l01l),
		n0i0OO = ((~ ast_sink_valid) & n0l01l),
		n0ii0i = (wire_n0O1lO_o & (~ n0O1li)),
		n0ii0l = (wire_n0O1lO_o & n0O1li),
		n0ii0O = (wire_n0O1Oi_o & (~ n0O1li)),
		n0ii1i = (ast_sink_valid & (~ n0l01l)),
		n0ii1l = ((~ ast_sink_valid) & (~ n0l01l)),
		n0ii1O = (wire_n0l0iO_dataout | n0l0ii),
		n0iiii = (wire_n0O1Oi_o & n0O1li),
		n0iiil = (n0lOOO | ni001i),
		n0iiiO = (ni1l0l & (ni1lii & n0iilO)),
		n0iili = (ast_source_ready & ni1lii),
		n0iill = ((~ n0O1li) & wire_ni000i_dataout),
		n0iilO = (ni1l0O | ni1l0l),
		n0iiOi = ((~ n0ilOO) | wire_n0ilil_empty),
		n0iiOl = ((~ ni001i) & nl0li),
		n0iiOO = ((~ ni001i) & nl00l),
		n0il0i = ((((~ nliiO) & (~ nl0il)) & nl0ii) & nl00O),
		n0il0l = 1'b1,
		n0il1i = ((~ ni001i) & nl00i),
		n0il1l = ((~ ni001i) & nl0li),
		n0il1O = ((~ ni001i) & nli1O);
endmodule //hf_2
//synopsys translate_on
//VALID FILE
