//IP Functional Simulation Model
//VERSION_BEGIN 12.1 cbx_mgl 2012:11:07:18:06:30:SJ cbx_simgen 2012:11:07:18:03:51:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



// Copyright (C) 1991-2012 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// You may only use these simulation model output files for simulation
// purposes and expressly not for synthesis or any other purposes (in which
// event Altera disclaims all warranties of any kind).


//synopsys translate_off

//synthesis_resources = altmult_add 2 altsyncram 3 lpm_add_sub 4 lpm_counter 1 lut 148 mux21 256 oper_add 2 
`timescale 1 ps / 1 ps
module  nco10
	( 
	clk,
	clken,
	fcos_o,
	fsin_o,
	out_valid,
	phi_inc_i,
	reset_n) /* synthesis synthesis_clearbox=1 */;
	input   clk;
	input   clken;
	output   [15:0]  fcos_o;
	output   [15:0]  fsin_o;
	output   out_valid;
	input   [31:0]  phi_inc_i;
	input   reset_n;

	wire  [32:0]   wire_niill_result;
	wire  [32:0]   wire_niilO_result;
	wire  [15:0]   wire_niiil_q_a;
	wire  [15:0]   wire_niiil_q_b;
	wire  [15:0]   wire_niiiO_q_a;
	wire  [15:0]   wire_niili_q_a;
	reg	nlli0i17;
	reg	nlli0i18;
	reg	nlli0l15;
	reg	nlli0l16;
	reg	nlli0O13;
	reg	nlli0O14;
	reg	nlli1l19;
	reg	nlli1l20;
	reg	nlliii11;
	reg	nlliii12;
	reg	nllili10;
	reg	nllili9;
	reg	nllilO7;
	reg	nllilO8;
	reg	nlliOO5;
	reg	nlliOO6;
	reg	nlll0l3;
	reg	nlll0l4;
	reg	nlll0O1;
	reg	nlll0O2;
	reg	n010i;
	reg	n010l;
	reg	n010O;
	reg	n011i;
	reg	n011l;
	reg	n011O;
	reg	n01ii;
	reg	n0ili;
	reg	n0ill;
	reg	n0ilO;
	reg	n0iOi;
	reg	n0iOl;
	reg	n0iOO;
	reg	n0l0i;
	reg	n0l0l;
	reg	n0l0O;
	reg	n0l1i;
	reg	n0l1l;
	reg	n0l1O;
	reg	n0lii;
	reg	n0lil;
	reg	n0liO;
	reg	n0lli;
	reg	n0lll;
	reg	n0llO;
	reg	n0lOi;
	reg	n0lOl;
	reg	n0lOO;
	reg	n0O1i;
	reg	n0O1l;
	reg	n101i;
	reg	n101l;
	reg	n101O;
	reg	n110i;
	reg	n110l;
	reg	n110O;
	reg	n111i;
	reg	n111l;
	reg	n111O;
	reg	n11ii;
	reg	n11il;
	reg	n11iO;
	reg	n11li;
	reg	n11ll;
	reg	n11lO;
	reg	n11Oi;
	reg	n11Ol;
	reg	n11OO;
	reg	n1ii;
	reg	n1O0l;
	reg	n1Oii;
	reg	n1Oil;
	reg	n1OiO;
	reg	n1Oli;
	reg	n1Oll;
	reg	n1OlO;
	reg	n1OOi;
	reg	n1OOl;
	reg	n1OOO;
	reg	ni10i;
	reg	niiOO;
	reg	nil0i;
	reg	nil0l;
	reg	nil0O;
	reg	nil1i;
	reg	nil1l;
	reg	nil1O;
	reg	nilii;
	reg	nilil;
	reg	niliO;
	reg	nilli;
	reg	nilll;
	reg	nillO;
	reg	nilOi;
	reg	nilOl;
	reg	nilOO;
	reg	nl00O;
	reg	nl0iO;
	reg	nl0li;
	reg	nl0ll;
	reg	nl0lO;
	reg	nl0Oi;
	reg	nl0Ol;
	reg	nl0OO;
	reg	nli0i;
	reg	nli0l;
	reg	nli0O;
	reg	nli1i;
	reg	nli1l;
	reg	nli1O;
	reg	nliii;
	reg	nliil;
	reg	nliiO;
	reg	nlllil;
	reg	nllliO;
	reg	nlllli;
	reg	nlllll;
	reg	nllllO;
	reg	nlllOi;
	reg	nlllOl;
	reg	nlllOO;
	reg	nllO0i;
	reg	nllO0l;
	reg	nllO0O;
	reg	nllO1i;
	reg	nllO1l;
	reg	nllO1O;
	reg	nllOii;
	reg	nllOil;
	reg	nllOiO;
	reg	nllOli;
	reg	nllOll;
	reg	nllOlO;
	reg	nllOOi;
	reg	nllOOl;
	reg	nllOOO;
	reg	nlO10i;
	reg	nlO10l;
	reg	nlO10O;
	reg	nlO11i;
	reg	nlO11l;
	reg	nlO11O;
	reg	nlO1ii;
	reg	nlO1il;
	reg	nlOOO;
	reg	nlOOOi;
	reg	nlOOOl;
	reg	nlOOOO;
	reg	n10O_clk_prev;
	wire	wire_n10O_CLRN;
	wire	wire_n10O_PRN;
	wire  [20:0]   wire_n1O0O_result;
	wire  [15:0]   wire_niiOi_result;
	wire  [15:0]   wire_nl0ii_result;
	wire  [31:0]   wire_nlllii_result;
	wire  [3:0]   wire_n11i_q;
	wire	wire_n000i_dataout;
	wire	wire_n000l_dataout;
	wire	wire_n000O_dataout;
	wire	wire_n001i_dataout;
	wire	wire_n001l_dataout;
	wire	wire_n001O_dataout;
	wire	wire_n00ii_dataout;
	wire	wire_n00il_dataout;
	wire	wire_n00iO_dataout;
	wire	wire_n00li_dataout;
	wire	wire_n00ll_dataout;
	wire	wire_n00lO_dataout;
	wire	wire_n00Oi_dataout;
	wire	wire_n00Ol_dataout;
	wire	wire_n00OO_dataout;
	wire	wire_n01il_dataout;
	wire	wire_n01iO_dataout;
	wire	wire_n01li_dataout;
	wire	wire_n01ll_dataout;
	wire	wire_n01lO_dataout;
	wire	wire_n01Oi_dataout;
	wire	wire_n01Ol_dataout;
	wire	wire_n01OO_dataout;
	wire	wire_n0i0i_dataout;
	wire	wire_n0i0l_dataout;
	wire	wire_n0i0O_dataout;
	wire	wire_n0i1i_dataout;
	wire	wire_n0i1l_dataout;
	wire	wire_n0i1O_dataout;
	wire	wire_n0iii_dataout;
	wire	wire_n0iil_dataout;
	wire	wire_n0iiO_dataout;
	wire	wire_n0O0i_dataout;
	wire	wire_n0O0l_dataout;
	wire	wire_n0O0O_dataout;
	wire	wire_n0O1O_dataout;
	wire	wire_n0Oii_dataout;
	wire	wire_n0Oil_dataout;
	wire	wire_n0OiO_dataout;
	wire	wire_n0Oli_dataout;
	wire	wire_n0Oll_dataout;
	wire	wire_n0OlO_dataout;
	wire	wire_n0OOi_dataout;
	wire	wire_n0OOl_dataout;
	wire	wire_n0OOO_dataout;
	wire	wire_n100i_dataout;
	wire	wire_n100l_dataout;
	wire	wire_n100O_dataout;
	wire	wire_n10i_dataout;
	wire	wire_n10ii_dataout;
	wire	wire_n10il_dataout;
	wire	wire_n10iO_dataout;
	wire	wire_n10li_dataout;
	wire	wire_n10ll_dataout;
	wire	wire_n10lO_dataout;
	wire	wire_n10Oi_dataout;
	wire	wire_n10Ol_dataout;
	wire	wire_n10OO_dataout;
	wire	wire_n11O_dataout;
	wire	wire_n1i0i_dataout;
	wire	wire_n1i0l_dataout;
	wire	wire_n1i0O_dataout;
	wire	wire_n1i1i_dataout;
	wire	wire_n1i1l_dataout;
	wire	wire_n1i1O_dataout;
	wire	wire_n1iii_dataout;
	wire	wire_n1iil_dataout;
	wire	wire_n1iiO_dataout;
	wire	wire_n1ili_dataout;
	wire	wire_n1ill_dataout;
	wire	wire_n1ilO_dataout;
	wire	wire_n1iOi_dataout;
	wire	wire_n1iOl_dataout;
	wire	wire_n1iOO_dataout;
	wire	wire_n1l0i_dataout;
	wire	wire_n1l0l_dataout;
	wire	wire_n1l0O_dataout;
	wire	wire_n1l1i_dataout;
	wire	wire_n1l1l_dataout;
	wire	wire_n1l1O_dataout;
	wire	wire_n1lii_dataout;
	wire	wire_n1lil_dataout;
	wire	wire_n1liO_dataout;
	wire	wire_n1lli_dataout;
	wire	wire_n1lll_dataout;
	wire	wire_n1llO_dataout;
	wire	wire_n1lOi_dataout;
	wire	wire_n1lOl_dataout;
	wire	wire_n1lOO_dataout;
	wire	wire_ni00i_dataout;
	wire	wire_ni00l_dataout;
	wire	wire_ni00O_dataout;
	wire	wire_ni01i_dataout;
	wire	wire_ni01l_dataout;
	wire	wire_ni01O_dataout;
	wire	wire_ni0ii_dataout;
	wire	wire_ni0il_dataout;
	wire	wire_ni0iO_dataout;
	wire	wire_ni0li_dataout;
	wire	wire_ni0ll_dataout;
	wire	wire_ni0lO_dataout;
	wire	wire_ni0Oi_dataout;
	wire	wire_ni0Ol_dataout;
	wire	wire_ni0OO_dataout;
	wire	wire_ni10l_dataout;
	wire	wire_ni10O_dataout;
	wire	wire_ni11i_dataout;
	wire	wire_ni11l_dataout;
	wire	wire_ni11O_dataout;
	wire	wire_ni1ii_dataout;
	wire	wire_ni1il_dataout;
	wire	wire_ni1iO_dataout;
	wire	wire_ni1li_dataout;
	wire	wire_ni1ll_dataout;
	wire	wire_ni1lO_dataout;
	wire	wire_ni1Oi_dataout;
	wire	wire_ni1Ol_dataout;
	wire	wire_ni1OO_dataout;
	wire	wire_nii0i_dataout;
	wire	wire_nii0l_dataout;
	wire	wire_nii0O_dataout;
	wire	wire_nii1i_dataout;
	wire	wire_nii1l_dataout;
	wire	wire_nii1O_dataout;
	wire	wire_niO0i_dataout;
	wire	wire_niO0l_dataout;
	wire	wire_niO0O_dataout;
	wire	wire_niO1i_dataout;
	wire	wire_niO1l_dataout;
	wire	wire_niO1O_dataout;
	wire	wire_niOii_dataout;
	wire	wire_niOil_dataout;
	wire	wire_niOiO_dataout;
	wire	wire_niOli_dataout;
	wire	wire_niOll_dataout;
	wire	wire_niOlO_dataout;
	wire	wire_niOOi_dataout;
	wire	wire_niOOl_dataout;
	wire	wire_niOOO_dataout;
	wire	wire_nl00i_dataout;
	wire	wire_nl00l_dataout;
	wire	wire_nl01i_dataout;
	wire	wire_nl01l_dataout;
	wire	wire_nl10i_dataout;
	wire	wire_nl10l_dataout;
	wire	wire_nl10O_dataout;
	wire	wire_nl11i_dataout;
	wire	wire_nl11l_dataout;
	wire	wire_nl11O_dataout;
	wire	wire_nl1ii_dataout;
	wire	wire_nl1il_dataout;
	wire	wire_nl1iO_dataout;
	wire	wire_nl1li_dataout;
	wire	wire_nl1ll_dataout;
	wire	wire_nl1lO_dataout;
	wire	wire_nl1Oi_dataout;
	wire	wire_nl1Ol_dataout;
	wire	wire_nl1OO_dataout;
	wire	wire_nlili_dataout;
	wire	wire_nlill_dataout;
	wire	wire_nlilO_dataout;
	wire	wire_nliOi_dataout;
	wire	wire_nliOl_dataout;
	wire	wire_nliOO_dataout;
	wire	wire_nll0i_dataout;
	wire	wire_nll0l_dataout;
	wire	wire_nll0O_dataout;
	wire	wire_nll1i_dataout;
	wire	wire_nll1l_dataout;
	wire	wire_nll1O_dataout;
	wire	wire_nllii_dataout;
	wire	wire_nllil_dataout;
	wire	wire_nlliO_dataout;
	wire	wire_nllli_dataout;
	wire	wire_nllll_dataout;
	wire	wire_nlllO_dataout;
	wire	wire_nllOi_dataout;
	wire	wire_nllOl_dataout;
	wire	wire_nllOO_dataout;
	wire	wire_nlO00i_dataout;
	wire	wire_nlO00l_dataout;
	wire	wire_nlO00O_dataout;
	wire	wire_nlO01i_dataout;
	wire	wire_nlO01l_dataout;
	wire	wire_nlO01O_dataout;
	wire	wire_nlO0i_dataout;
	wire	wire_nlO0ii_dataout;
	wire	wire_nlO0il_dataout;
	wire	wire_nlO0iO_dataout;
	wire	wire_nlO0l_dataout;
	wire	wire_nlO0li_dataout;
	wire	wire_nlO0ll_dataout;
	wire	wire_nlO0lO_dataout;
	wire	wire_nlO0O_dataout;
	wire	wire_nlO0Oi_dataout;
	wire	wire_nlO0Ol_dataout;
	wire	wire_nlO0OO_dataout;
	wire	wire_nlO1i_dataout;
	wire	wire_nlO1iO_dataout;
	wire	wire_nlO1l_dataout;
	wire	wire_nlO1li_dataout;
	wire	wire_nlO1ll_dataout;
	wire	wire_nlO1lO_dataout;
	wire	wire_nlO1O_dataout;
	wire	wire_nlO1Oi_dataout;
	wire	wire_nlO1Ol_dataout;
	wire	wire_nlO1OO_dataout;
	wire	wire_nlOi0i_dataout;
	wire	wire_nlOi0l_dataout;
	wire	wire_nlOi0O_dataout;
	wire	wire_nlOi1i_dataout;
	wire	wire_nlOi1l_dataout;
	wire	wire_nlOi1O_dataout;
	wire	wire_nlOii_dataout;
	wire	wire_nlOiii_dataout;
	wire	wire_nlOiil_dataout;
	wire	wire_nlOiiO_dataout;
	wire	wire_nlOil_dataout;
	wire	wire_nlOili_dataout;
	wire	wire_nlOill_dataout;
	wire	wire_nlOilO_dataout;
	wire	wire_nlOiO_dataout;
	wire	wire_nlOiOi_dataout;
	wire	wire_nlOiOl_dataout;
	wire	wire_nlOiOO_dataout;
	wire	wire_nlOl0i_dataout;
	wire	wire_nlOl0l_dataout;
	wire	wire_nlOl0O_dataout;
	wire	wire_nlOl1i_dataout;
	wire	wire_nlOl1l_dataout;
	wire	wire_nlOl1O_dataout;
	wire	wire_nlOli_dataout;
	wire	wire_nlOlii_dataout;
	wire	wire_nlOlil_dataout;
	wire	wire_nlOliO_dataout;
	wire	wire_nlOll_dataout;
	wire	wire_nlOlli_dataout;
	wire	wire_nlOlll_dataout;
	wire	wire_nlOllO_dataout;
	wire	wire_nlOlOi_dataout;
	wire	wire_nlOlOl_dataout;
	wire	wire_nlOlOO_dataout;
	wire	wire_nlOO0i_dataout;
	wire	wire_nlOO0l_dataout;
	wire	wire_nlOO0O_dataout;
	wire	wire_nlOO1i_dataout;
	wire	wire_nlOO1l_dataout;
	wire	wire_nlOO1O_dataout;
	wire	wire_nlOOi_dataout;
	wire	wire_nlOOii_dataout;
	wire	wire_nlOOil_dataout;
	wire	wire_nlOOiO_dataout;
	wire	wire_nlOOl_dataout;
	wire	wire_nlOOli_dataout;
	wire	wire_nlOOll_dataout;
	wire	wire_nlOOlO_dataout;
	wire  [4:0]   wire_n1O1i_o;
	wire  [8:0]   wire_niiii_o;
	wire  nlliiO;
	wire  nlliOl;
	wire  nlll1O;

	altmult_add   niill
	( 
	.chainout_sat_overflow(),
	.clock0(clk),
	.dataa({wire_niiil_q_a[15:0], wire_niiil_q_b[15:0]}),
	.datab({wire_niiiO_q_a[15:0], wire_niili_q_a[15:0]}),
	.ena0(clken),
	.mult0_is_saturated(),
	.mult1_is_saturated(),
	.mult2_is_saturated(),
	.mult3_is_saturated(),
	.overflow(),
	.result(wire_niill_result),
	.scanouta(),
	.scanoutb(),
	.accum_sload(),
	.aclr0(),
	.aclr1(),
	.aclr2(),
	.aclr3(),
	.addnsub1(),
	.addnsub1_round(),
	.addnsub3(),
	.addnsub3_round(),
	.chainin(),
	.chainout_round(),
	.chainout_saturate(),
	.clock1(),
	.clock2(),
	.clock3(),
	.coefsel0(),
	.coefsel1(),
	.coefsel2(),
	.coefsel3(),
	.datac(),
	.ena1(),
	.ena2(),
	.ena3(),
	.mult01_round(),
	.mult01_saturation(),
	.mult23_round(),
	.mult23_saturation(),
	.output_round(),
	.output_saturate(),
	.rotate(),
	.scanina(),
	.scaninb(),
	.shift_right(),
	.signa(),
	.signb(),
	.sourcea(),
	.sourceb(),
	.zero_chainout(),
	.zero_loopback()
	);
	defparam
		niill.accum_direction = "ADD",
		niill.accum_sload_aclr = "ACLR3",
		niill.accum_sload_pipeline_aclr = "ACLR3",
		niill.accum_sload_pipeline_register = "CLOCK0",
		niill.accum_sload_register = "CLOCK0",
		niill.accumulator = "NO",
		niill.adder1_rounding = "NO",
		niill.adder3_rounding = "NO",
		niill.addnsub1_round_aclr = "ACLR3",
		niill.addnsub1_round_pipeline_aclr = "ACLR3",
		niill.addnsub1_round_pipeline_register = "CLOCK0",
		niill.addnsub1_round_register = "CLOCK0",
		niill.addnsub3_round_aclr = "ACLR3",
		niill.addnsub3_round_pipeline_aclr = "ACLR3",
		niill.addnsub3_round_pipeline_register = "CLOCK0",
		niill.addnsub3_round_register = "CLOCK0",
		niill.addnsub_multiplier_aclr1 = "ACLR3",
		niill.addnsub_multiplier_aclr3 = "ACLR3",
		niill.addnsub_multiplier_pipeline_aclr1 = "ACLR3",
		niill.addnsub_multiplier_pipeline_aclr3 = "ACLR3",
		niill.addnsub_multiplier_pipeline_register1 = "CLOCK0",
		niill.addnsub_multiplier_pipeline_register3 = "CLOCK0",
		niill.addnsub_multiplier_register1 = "CLOCK0",
		niill.addnsub_multiplier_register3 = "CLOCK0",
		niill.chainout_aclr = "ACLR3",
		niill.chainout_adder = "NO",
		niill.chainout_register = "CLOCK0",
		niill.chainout_round_aclr = "ACLR3",
		niill.chainout_round_output_aclr = "ACLR3",
		niill.chainout_round_output_register = "CLOCK0",
		niill.chainout_round_pipeline_aclr = "ACLR3",
		niill.chainout_round_pipeline_register = "CLOCK0",
		niill.chainout_round_register = "CLOCK0",
		niill.chainout_rounding = "NO",
		niill.chainout_saturate_aclr = "ACLR3",
		niill.chainout_saturate_output_aclr = "ACLR3",
		niill.chainout_saturate_output_register = "CLOCK0",
		niill.chainout_saturate_pipeline_aclr = "ACLR3",
		niill.chainout_saturate_pipeline_register = "CLOCK0",
		niill.chainout_saturate_register = "CLOCK0",
		niill.chainout_saturation = "NO",
		niill.coef0_0 = 0,
		niill.coef0_1 = 0,
		niill.coef0_2 = 0,
		niill.coef0_3 = 0,
		niill.coef0_4 = 0,
		niill.coef0_5 = 0,
		niill.coef0_6 = 0,
		niill.coef0_7 = 0,
		niill.coef1_0 = 0,
		niill.coef1_1 = 0,
		niill.coef1_2 = 0,
		niill.coef1_3 = 0,
		niill.coef1_4 = 0,
		niill.coef1_5 = 0,
		niill.coef1_6 = 0,
		niill.coef1_7 = 0,
		niill.coef2_0 = 0,
		niill.coef2_1 = 0,
		niill.coef2_2 = 0,
		niill.coef2_3 = 0,
		niill.coef2_4 = 0,
		niill.coef2_5 = 0,
		niill.coef2_6 = 0,
		niill.coef2_7 = 0,
		niill.coef3_0 = 0,
		niill.coef3_1 = 0,
		niill.coef3_2 = 0,
		niill.coef3_3 = 0,
		niill.coef3_4 = 0,
		niill.coef3_5 = 0,
		niill.coef3_6 = 0,
		niill.coef3_7 = 0,
		niill.coefsel0_aclr = "ACLR0",
		niill.coefsel0_register = "CLOCK0",
		niill.coefsel1_aclr = "ACLR0",
		niill.coefsel1_register = "CLOCK0",
		niill.coefsel2_aclr = "ACLR0",
		niill.coefsel2_register = "CLOCK0",
		niill.coefsel3_aclr = "ACLR0",
		niill.coefsel3_register = "CLOCK0",
		niill.dsp_block_balancing = "AUTO",
		niill.extra_latency = 0,
		niill.input_aclr_a0 = "ACLR3",
		niill.input_aclr_a1 = "ACLR3",
		niill.input_aclr_a2 = "ACLR3",
		niill.input_aclr_a3 = "ACLR3",
		niill.input_aclr_b0 = "ACLR3",
		niill.input_aclr_b1 = "ACLR3",
		niill.input_aclr_b2 = "ACLR3",
		niill.input_aclr_b3 = "ACLR3",
		niill.input_aclr_c0 = "ACLR0",
		niill.input_register_a0 = "CLOCK0",
		niill.input_register_a1 = "CLOCK0",
		niill.input_register_a2 = "CLOCK0",
		niill.input_register_a3 = "CLOCK0",
		niill.input_register_b0 = "CLOCK0",
		niill.input_register_b1 = "CLOCK0",
		niill.input_register_b2 = "CLOCK0",
		niill.input_register_b3 = "CLOCK0",
		niill.input_register_c0 = "CLOCK0",
		niill.input_source_a0 = "DATAA",
		niill.input_source_a1 = "DATAA",
		niill.input_source_a2 = "DATAA",
		niill.input_source_a3 = "DATAA",
		niill.input_source_b0 = "DATAB",
		niill.input_source_b1 = "DATAB",
		niill.input_source_b2 = "DATAB",
		niill.input_source_b3 = "DATAB",
		niill.intended_device_family = "Cyclone IV E",
		niill.loadconst_value = 64,
		niill.mult01_round_aclr = "ACLR3",
		niill.mult01_round_register = "CLOCK0",
		niill.mult01_saturation_aclr = "ACLR2",
		niill.mult01_saturation_register = "CLOCK0",
		niill.mult23_round_aclr = "ACLR3",
		niill.mult23_round_register = "CLOCK0",
		niill.mult23_saturation_aclr = "ACLR3",
		niill.mult23_saturation_register = "CLOCK0",
		niill.multiplier01_rounding = "NO",
		niill.multiplier01_saturation = "NO",
		niill.multiplier1_direction = "SUB",
		niill.multiplier23_rounding = "NO",
		niill.multiplier23_saturation = "NO",
		niill.multiplier3_direction = "ADD",
		niill.multiplier_aclr0 = "ACLR3",
		niill.multiplier_aclr1 = "ACLR3",
		niill.multiplier_aclr2 = "ACLR3",
		niill.multiplier_aclr3 = "ACLR3",
		niill.multiplier_register0 = "CLOCK0",
		niill.multiplier_register1 = "CLOCK0",
		niill.multiplier_register2 = "CLOCK0",
		niill.multiplier_register3 = "CLOCK0",
		niill.number_of_multipliers = 2,
		niill.output_aclr = "ACLR3",
		niill.output_register = "CLOCK0",
		niill.output_round_aclr = "ACLR3",
		niill.output_round_pipeline_aclr = "ACLR3",
		niill.output_round_pipeline_register = "CLOCK0",
		niill.output_round_register = "CLOCK0",
		niill.output_round_type = "NEAREST_INTEGER",
		niill.output_rounding = "NO",
		niill.output_saturate_aclr = "ACLR3",
		niill.output_saturate_pipeline_aclr = "ACLR3",
		niill.output_saturate_pipeline_register = "CLOCK0",
		niill.output_saturate_register = "CLOCK0",
		niill.output_saturate_type = "ASYMMETRIC",
		niill.output_saturation = "NO",
		niill.port_addnsub1 = "PORT_UNUSED",
		niill.port_addnsub3 = "PORT_UNUSED",
		niill.port_chainout_sat_is_overflow = "PORT_UNUSED",
		niill.port_output_is_overflow = "PORT_UNUSED",
		niill.port_signa = "PORT_CONNECTIVITY",
		niill.port_signb = "PORT_CONNECTIVITY",
		niill.preadder_direction_0 = "ADD",
		niill.preadder_direction_1 = "ADD",
		niill.preadder_direction_2 = "ADD",
		niill.preadder_direction_3 = "ADD",
		niill.preadder_mode = "SIMPLE",
		niill.representation_a = "SIGNED",
		niill.representation_b = "SIGNED",
		niill.rotate_aclr = "ACLR3",
		niill.rotate_output_aclr = "ACLR3",
		niill.rotate_output_register = "CLOCK0",
		niill.rotate_pipeline_aclr = "ACLR3",
		niill.rotate_pipeline_register = "CLOCK0",
		niill.rotate_register = "CLOCK0",
		niill.scanouta_aclr = "ACLR3",
		niill.scanouta_register = "UNREGISTERED",
		niill.shift_mode = "NO",
		niill.shift_right_aclr = "ACLR3",
		niill.shift_right_output_aclr = "ACLR3",
		niill.shift_right_output_register = "CLOCK0",
		niill.shift_right_pipeline_aclr = "ACLR3",
		niill.shift_right_pipeline_register = "CLOCK0",
		niill.shift_right_register = "CLOCK0",
		niill.signed_aclr_a = "ACLR3",
		niill.signed_aclr_b = "ACLR3",
		niill.signed_pipeline_aclr_a = "ACLR3",
		niill.signed_pipeline_aclr_b = "ACLR3",
		niill.signed_pipeline_register_a = "CLOCK0",
		niill.signed_pipeline_register_b = "CLOCK0",
		niill.signed_register_a = "CLOCK0",
		niill.signed_register_b = "CLOCK0",
		niill.systolic_aclr1 = "ACLR0",
		niill.systolic_aclr3 = "ACLR0",
		niill.systolic_delay1 = "UNREGISTERED",
		niill.systolic_delay3 = "UNREGISTERED",
		niill.width_a = 16,
		niill.width_b = 16,
		niill.width_c = 22,
		niill.width_chainin = 1,
		niill.width_coef = 18,
		niill.width_msb = 17,
		niill.width_result = 33,
		niill.width_saturate_sign = 1,
		niill.zero_chainout_output_aclr = "ACLR3",
		niill.zero_chainout_output_register = "CLOCK0",
		niill.zero_loopback_aclr = "ACLR3",
		niill.zero_loopback_output_aclr = "ACLR3",
		niill.zero_loopback_output_register = "CLOCK0",
		niill.zero_loopback_pipeline_aclr = "ACLR3",
		niill.zero_loopback_pipeline_register = "CLOCK0",
		niill.zero_loopback_register = "CLOCK0";
	altmult_add   niilO
	( 
	.chainout_sat_overflow(),
	.clock0(clk),
	.dataa({wire_niiiO_q_a[15:0], wire_niiil_q_a[15:0]}),
	.datab({wire_niiil_q_b[15:0], wire_niili_q_a[15:0]}),
	.ena0(clken),
	.mult0_is_saturated(),
	.mult1_is_saturated(),
	.mult2_is_saturated(),
	.mult3_is_saturated(),
	.overflow(),
	.result(wire_niilO_result),
	.scanouta(),
	.scanoutb(),
	.accum_sload(),
	.aclr0(),
	.aclr1(),
	.aclr2(),
	.aclr3(),
	.addnsub1(),
	.addnsub1_round(),
	.addnsub3(),
	.addnsub3_round(),
	.chainin(),
	.chainout_round(),
	.chainout_saturate(),
	.clock1(),
	.clock2(),
	.clock3(),
	.coefsel0(),
	.coefsel1(),
	.coefsel2(),
	.coefsel3(),
	.datac(),
	.ena1(),
	.ena2(),
	.ena3(),
	.mult01_round(),
	.mult01_saturation(),
	.mult23_round(),
	.mult23_saturation(),
	.output_round(),
	.output_saturate(),
	.rotate(),
	.scanina(),
	.scaninb(),
	.shift_right(),
	.signa(),
	.signb(),
	.sourcea(),
	.sourceb(),
	.zero_chainout(),
	.zero_loopback()
	);
	defparam
		niilO.accum_direction = "ADD",
		niilO.accum_sload_aclr = "ACLR3",
		niilO.accum_sload_pipeline_aclr = "ACLR3",
		niilO.accum_sload_pipeline_register = "CLOCK0",
		niilO.accum_sload_register = "CLOCK0",
		niilO.accumulator = "NO",
		niilO.adder1_rounding = "NO",
		niilO.adder3_rounding = "NO",
		niilO.addnsub1_round_aclr = "ACLR3",
		niilO.addnsub1_round_pipeline_aclr = "ACLR3",
		niilO.addnsub1_round_pipeline_register = "CLOCK0",
		niilO.addnsub1_round_register = "CLOCK0",
		niilO.addnsub3_round_aclr = "ACLR3",
		niilO.addnsub3_round_pipeline_aclr = "ACLR3",
		niilO.addnsub3_round_pipeline_register = "CLOCK0",
		niilO.addnsub3_round_register = "CLOCK0",
		niilO.addnsub_multiplier_aclr1 = "ACLR3",
		niilO.addnsub_multiplier_aclr3 = "ACLR3",
		niilO.addnsub_multiplier_pipeline_aclr1 = "ACLR3",
		niilO.addnsub_multiplier_pipeline_aclr3 = "ACLR3",
		niilO.addnsub_multiplier_pipeline_register1 = "CLOCK0",
		niilO.addnsub_multiplier_pipeline_register3 = "CLOCK0",
		niilO.addnsub_multiplier_register1 = "CLOCK0",
		niilO.addnsub_multiplier_register3 = "CLOCK0",
		niilO.chainout_aclr = "ACLR3",
		niilO.chainout_adder = "NO",
		niilO.chainout_register = "CLOCK0",
		niilO.chainout_round_aclr = "ACLR3",
		niilO.chainout_round_output_aclr = "ACLR3",
		niilO.chainout_round_output_register = "CLOCK0",
		niilO.chainout_round_pipeline_aclr = "ACLR3",
		niilO.chainout_round_pipeline_register = "CLOCK0",
		niilO.chainout_round_register = "CLOCK0",
		niilO.chainout_rounding = "NO",
		niilO.chainout_saturate_aclr = "ACLR3",
		niilO.chainout_saturate_output_aclr = "ACLR3",
		niilO.chainout_saturate_output_register = "CLOCK0",
		niilO.chainout_saturate_pipeline_aclr = "ACLR3",
		niilO.chainout_saturate_pipeline_register = "CLOCK0",
		niilO.chainout_saturate_register = "CLOCK0",
		niilO.chainout_saturation = "NO",
		niilO.coef0_0 = 0,
		niilO.coef0_1 = 0,
		niilO.coef0_2 = 0,
		niilO.coef0_3 = 0,
		niilO.coef0_4 = 0,
		niilO.coef0_5 = 0,
		niilO.coef0_6 = 0,
		niilO.coef0_7 = 0,
		niilO.coef1_0 = 0,
		niilO.coef1_1 = 0,
		niilO.coef1_2 = 0,
		niilO.coef1_3 = 0,
		niilO.coef1_4 = 0,
		niilO.coef1_5 = 0,
		niilO.coef1_6 = 0,
		niilO.coef1_7 = 0,
		niilO.coef2_0 = 0,
		niilO.coef2_1 = 0,
		niilO.coef2_2 = 0,
		niilO.coef2_3 = 0,
		niilO.coef2_4 = 0,
		niilO.coef2_5 = 0,
		niilO.coef2_6 = 0,
		niilO.coef2_7 = 0,
		niilO.coef3_0 = 0,
		niilO.coef3_1 = 0,
		niilO.coef3_2 = 0,
		niilO.coef3_3 = 0,
		niilO.coef3_4 = 0,
		niilO.coef3_5 = 0,
		niilO.coef3_6 = 0,
		niilO.coef3_7 = 0,
		niilO.coefsel0_aclr = "ACLR0",
		niilO.coefsel0_register = "CLOCK0",
		niilO.coefsel1_aclr = "ACLR0",
		niilO.coefsel1_register = "CLOCK0",
		niilO.coefsel2_aclr = "ACLR0",
		niilO.coefsel2_register = "CLOCK0",
		niilO.coefsel3_aclr = "ACLR0",
		niilO.coefsel3_register = "CLOCK0",
		niilO.dsp_block_balancing = "AUTO",
		niilO.extra_latency = 0,
		niilO.input_aclr_a0 = "ACLR3",
		niilO.input_aclr_a1 = "ACLR3",
		niilO.input_aclr_a2 = "ACLR3",
		niilO.input_aclr_a3 = "ACLR3",
		niilO.input_aclr_b0 = "ACLR3",
		niilO.input_aclr_b1 = "ACLR3",
		niilO.input_aclr_b2 = "ACLR3",
		niilO.input_aclr_b3 = "ACLR3",
		niilO.input_aclr_c0 = "ACLR0",
		niilO.input_register_a0 = "CLOCK0",
		niilO.input_register_a1 = "CLOCK0",
		niilO.input_register_a2 = "CLOCK0",
		niilO.input_register_a3 = "CLOCK0",
		niilO.input_register_b0 = "CLOCK0",
		niilO.input_register_b1 = "CLOCK0",
		niilO.input_register_b2 = "CLOCK0",
		niilO.input_register_b3 = "CLOCK0",
		niilO.input_register_c0 = "CLOCK0",
		niilO.input_source_a0 = "DATAA",
		niilO.input_source_a1 = "DATAA",
		niilO.input_source_a2 = "DATAA",
		niilO.input_source_a3 = "DATAA",
		niilO.input_source_b0 = "DATAB",
		niilO.input_source_b1 = "DATAB",
		niilO.input_source_b2 = "DATAB",
		niilO.input_source_b3 = "DATAB",
		niilO.intended_device_family = "Cyclone IV E",
		niilO.loadconst_value = 64,
		niilO.mult01_round_aclr = "ACLR3",
		niilO.mult01_round_register = "CLOCK0",
		niilO.mult01_saturation_aclr = "ACLR2",
		niilO.mult01_saturation_register = "CLOCK0",
		niilO.mult23_round_aclr = "ACLR3",
		niilO.mult23_round_register = "CLOCK0",
		niilO.mult23_saturation_aclr = "ACLR3",
		niilO.mult23_saturation_register = "CLOCK0",
		niilO.multiplier01_rounding = "NO",
		niilO.multiplier01_saturation = "NO",
		niilO.multiplier1_direction = "ADD",
		niilO.multiplier23_rounding = "NO",
		niilO.multiplier23_saturation = "NO",
		niilO.multiplier3_direction = "ADD",
		niilO.multiplier_aclr0 = "ACLR3",
		niilO.multiplier_aclr1 = "ACLR3",
		niilO.multiplier_aclr2 = "ACLR3",
		niilO.multiplier_aclr3 = "ACLR3",
		niilO.multiplier_register0 = "CLOCK0",
		niilO.multiplier_register1 = "CLOCK0",
		niilO.multiplier_register2 = "CLOCK0",
		niilO.multiplier_register3 = "CLOCK0",
		niilO.number_of_multipliers = 2,
		niilO.output_aclr = "ACLR3",
		niilO.output_register = "CLOCK0",
		niilO.output_round_aclr = "ACLR3",
		niilO.output_round_pipeline_aclr = "ACLR3",
		niilO.output_round_pipeline_register = "CLOCK0",
		niilO.output_round_register = "CLOCK0",
		niilO.output_round_type = "NEAREST_INTEGER",
		niilO.output_rounding = "NO",
		niilO.output_saturate_aclr = "ACLR3",
		niilO.output_saturate_pipeline_aclr = "ACLR3",
		niilO.output_saturate_pipeline_register = "CLOCK0",
		niilO.output_saturate_register = "CLOCK0",
		niilO.output_saturate_type = "ASYMMETRIC",
		niilO.output_saturation = "NO",
		niilO.port_addnsub1 = "PORT_UNUSED",
		niilO.port_addnsub3 = "PORT_UNUSED",
		niilO.port_chainout_sat_is_overflow = "PORT_UNUSED",
		niilO.port_output_is_overflow = "PORT_UNUSED",
		niilO.port_signa = "PORT_CONNECTIVITY",
		niilO.port_signb = "PORT_CONNECTIVITY",
		niilO.preadder_direction_0 = "ADD",
		niilO.preadder_direction_1 = "ADD",
		niilO.preadder_direction_2 = "ADD",
		niilO.preadder_direction_3 = "ADD",
		niilO.preadder_mode = "SIMPLE",
		niilO.representation_a = "SIGNED",
		niilO.representation_b = "SIGNED",
		niilO.rotate_aclr = "ACLR3",
		niilO.rotate_output_aclr = "ACLR3",
		niilO.rotate_output_register = "CLOCK0",
		niilO.rotate_pipeline_aclr = "ACLR3",
		niilO.rotate_pipeline_register = "CLOCK0",
		niilO.rotate_register = "CLOCK0",
		niilO.scanouta_aclr = "ACLR3",
		niilO.scanouta_register = "UNREGISTERED",
		niilO.shift_mode = "NO",
		niilO.shift_right_aclr = "ACLR3",
		niilO.shift_right_output_aclr = "ACLR3",
		niilO.shift_right_output_register = "CLOCK0",
		niilO.shift_right_pipeline_aclr = "ACLR3",
		niilO.shift_right_pipeline_register = "CLOCK0",
		niilO.shift_right_register = "CLOCK0",
		niilO.signed_aclr_a = "ACLR3",
		niilO.signed_aclr_b = "ACLR3",
		niilO.signed_pipeline_aclr_a = "ACLR3",
		niilO.signed_pipeline_aclr_b = "ACLR3",
		niilO.signed_pipeline_register_a = "CLOCK0",
		niilO.signed_pipeline_register_b = "CLOCK0",
		niilO.signed_register_a = "CLOCK0",
		niilO.signed_register_b = "CLOCK0",
		niilO.systolic_aclr1 = "ACLR0",
		niilO.systolic_aclr3 = "ACLR0",
		niilO.systolic_delay1 = "UNREGISTERED",
		niilO.systolic_delay3 = "UNREGISTERED",
		niilO.width_a = 16,
		niilO.width_b = 16,
		niilO.width_c = 22,
		niilO.width_chainin = 1,
		niilO.width_coef = 18,
		niilO.width_msb = 17,
		niilO.width_result = 33,
		niilO.width_saturate_sign = 1,
		niilO.zero_chainout_output_aclr = "ACLR3",
		niilO.zero_chainout_output_register = "CLOCK0",
		niilO.zero_loopback_aclr = "ACLR3",
		niilO.zero_loopback_output_aclr = "ACLR3",
		niilO.zero_loopback_output_register = "CLOCK0",
		niilO.zero_loopback_pipeline_aclr = "ACLR3",
		niilO.zero_loopback_pipeline_register = "CLOCK0",
		niilO.zero_loopback_register = "CLOCK0";
	altsyncram   niiil
	( 
	.address_a({n0ili, n0ill, n0ilO, n0iOi, n0iOl, n0iOO, n0l1i, n0l1l}),
	.address_b({n0l1O, n0l0i, n0l0l, n0l0O, n0lii, n0lil, n0liO, n0lli}),
	.clock0(clk),
	.clocken0(clken),
	.data_a({16{1'b0}}),
	.data_b({16{1'b0}}),
	.eccstatus(),
	.q_a(wire_niiil_q_a),
	.q_b(wire_niiil_q_b),
	.wren_a(1'b0),
	.wren_b(1'b0),
	.aclr0(),
	.aclr1(),
	.addressstall_a(),
	.addressstall_b(),
	.byteena_a(),
	.byteena_b(),
	.clock1(),
	.clocken1(),
	.clocken2(),
	.clocken3(),
	.rden_a(),
	.rden_b()
	);
	defparam
		niiil.address_aclr_a = "NONE",
		niiil.address_aclr_b = "NONE",
		niiil.address_reg_b = "CLOCK0",
		niiil.byte_size = 8,
		niiil.byteena_aclr_a = "NONE",
		niiil.byteena_aclr_b = "NONE",
		niiil.byteena_reg_b = "CLOCK1",
		niiil.clock_enable_core_a = "USE_INPUT_CLKEN",
		niiil.clock_enable_core_b = "USE_INPUT_CLKEN",
		niiil.clock_enable_input_a = "NORMAL",
		niiil.clock_enable_input_b = "NORMAL",
		niiil.clock_enable_output_a = "NORMAL",
		niiil.clock_enable_output_b = "NORMAL",
		niiil.ecc_pipeline_stage_enabled = "FALSE",
		niiil.enable_ecc = "FALSE",
		niiil.indata_aclr_a = "NONE",
		niiil.indata_aclr_b = "NONE",
		niiil.indata_reg_b = "CLOCK0",
		niiil.init_file = "nco10_sin_c.hex",
		niiil.init_file_layout = "PORT_A",
		niiil.intended_device_family = "Cyclone IV E",
		niiil.numwords_a = 256,
		niiil.numwords_b = 256,
		niiil.operation_mode = "BIDIR_DUAL_PORT",
		niiil.outdata_aclr_a = "NONE",
		niiil.outdata_aclr_b = "NONE",
		niiil.outdata_reg_a = "CLOCK0",
		niiil.outdata_reg_b = "CLOCK0",
		niiil.ram_block_type = "AUTO",
		niiil.rdcontrol_aclr_b = "NONE",
		niiil.rdcontrol_reg_b = "CLOCK1",
		niiil.read_during_write_mode_mixed_ports = "DONT_CARE",
		niiil.read_during_write_mode_port_a = "NEW_DATA_NO_NBE_READ",
		niiil.read_during_write_mode_port_b = "NEW_DATA_NO_NBE_READ",
		niiil.width_a = 16,
		niiil.width_b = 16,
		niiil.width_byteena_a = 1,
		niiil.width_byteena_b = 1,
		niiil.width_eccstatus = 3,
		niiil.widthad_a = 8,
		niiil.widthad_b = 8,
		niiil.wrcontrol_aclr_a = "NONE",
		niiil.wrcontrol_aclr_b = "NONE",
		niiil.wrcontrol_wraddress_reg_b = "CLOCK0",
		niiil.lpm_hint = "WIDTH_BYTEENA=1";
	altsyncram   niiiO
	( 
	.address_a({n0lll, n0llO, n0lOi, n0lOl, n0lOO, n0O1i, n0O1l, ni10i}),
	.clock0(clk),
	.clocken0(clken),
	.eccstatus(),
	.q_a(wire_niiiO_q_a),
	.q_b(),
	.aclr0(),
	.aclr1(),
	.address_b(),
	.addressstall_a(),
	.addressstall_b(),
	.byteena_a(),
	.byteena_b(),
	.clock1(),
	.clocken1(),
	.clocken2(),
	.clocken3(),
	.data_a(),
	.data_b(),
	.rden_a(),
	.rden_b(),
	.wren_a(),
	.wren_b()
	);
	defparam
		niiiO.address_aclr_a = "NONE",
		niiiO.address_aclr_b = "NONE",
		niiiO.address_reg_b = "CLOCK1",
		niiiO.byte_size = 8,
		niiiO.byteena_aclr_a = "NONE",
		niiiO.byteena_aclr_b = "NONE",
		niiiO.byteena_reg_b = "CLOCK1",
		niiiO.clock_enable_core_a = "USE_INPUT_CLKEN",
		niiiO.clock_enable_core_b = "USE_INPUT_CLKEN",
		niiiO.clock_enable_input_a = "NORMAL",
		niiiO.clock_enable_input_b = "NORMAL",
		niiiO.clock_enable_output_a = "NORMAL",
		niiiO.clock_enable_output_b = "NORMAL",
		niiiO.ecc_pipeline_stage_enabled = "FALSE",
		niiiO.enable_ecc = "FALSE",
		niiiO.indata_aclr_a = "NONE",
		niiiO.indata_aclr_b = "NONE",
		niiiO.indata_reg_b = "CLOCK1",
		niiiO.init_file = "nco10_sin_f.hex",
		niiiO.init_file_layout = "PORT_A",
		niiiO.intended_device_family = "Cyclone IV E",
		niiiO.numwords_a = 256,
		niiiO.numwords_b = 1,
		niiiO.operation_mode = "ROM",
		niiiO.outdata_aclr_a = "NONE",
		niiiO.outdata_aclr_b = "NONE",
		niiiO.outdata_reg_a = "CLOCK0",
		niiiO.outdata_reg_b = "UNREGISTERED",
		niiiO.ram_block_type = "AUTO",
		niiiO.rdcontrol_aclr_b = "NONE",
		niiiO.rdcontrol_reg_b = "CLOCK1",
		niiiO.read_during_write_mode_mixed_ports = "DONT_CARE",
		niiiO.read_during_write_mode_port_a = "NEW_DATA_NO_NBE_READ",
		niiiO.read_during_write_mode_port_b = "NEW_DATA_NO_NBE_READ",
		niiiO.width_a = 16,
		niiiO.width_b = 1,
		niiiO.width_byteena_a = 1,
		niiiO.width_byteena_b = 1,
		niiiO.width_eccstatus = 3,
		niiiO.widthad_a = 8,
		niiiO.widthad_b = 1,
		niiiO.wrcontrol_aclr_a = "NONE",
		niiiO.wrcontrol_aclr_b = "NONE",
		niiiO.wrcontrol_wraddress_reg_b = "CLOCK1",
		niiiO.lpm_hint = "WIDTH_BYTEENA=1";
	altsyncram   niili
	( 
	.address_a({n0lll, n0llO, n0lOi, n0lOl, n0lOO, n0O1i, n0O1l, ni10i}),
	.clock0(clk),
	.clocken0(clken),
	.eccstatus(),
	.q_a(wire_niili_q_a),
	.q_b(),
	.aclr0(),
	.aclr1(),
	.address_b(),
	.addressstall_a(),
	.addressstall_b(),
	.byteena_a(),
	.byteena_b(),
	.clock1(),
	.clocken1(),
	.clocken2(),
	.clocken3(),
	.data_a(),
	.data_b(),
	.rden_a(),
	.rden_b(),
	.wren_a(),
	.wren_b()
	);
	defparam
		niili.address_aclr_a = "NONE",
		niili.address_aclr_b = "NONE",
		niili.address_reg_b = "CLOCK1",
		niili.byte_size = 8,
		niili.byteena_aclr_a = "NONE",
		niili.byteena_aclr_b = "NONE",
		niili.byteena_reg_b = "CLOCK1",
		niili.clock_enable_core_a = "USE_INPUT_CLKEN",
		niili.clock_enable_core_b = "USE_INPUT_CLKEN",
		niili.clock_enable_input_a = "NORMAL",
		niili.clock_enable_input_b = "NORMAL",
		niili.clock_enable_output_a = "NORMAL",
		niili.clock_enable_output_b = "NORMAL",
		niili.ecc_pipeline_stage_enabled = "FALSE",
		niili.enable_ecc = "FALSE",
		niili.indata_aclr_a = "NONE",
		niili.indata_aclr_b = "NONE",
		niili.indata_reg_b = "CLOCK1",
		niili.init_file = "nco10_cos_f.hex",
		niili.init_file_layout = "PORT_A",
		niili.intended_device_family = "Cyclone IV E",
		niili.numwords_a = 256,
		niili.numwords_b = 1,
		niili.operation_mode = "ROM",
		niili.outdata_aclr_a = "NONE",
		niili.outdata_aclr_b = "NONE",
		niili.outdata_reg_a = "CLOCK0",
		niili.outdata_reg_b = "UNREGISTERED",
		niili.ram_block_type = "AUTO",
		niili.rdcontrol_aclr_b = "NONE",
		niili.rdcontrol_reg_b = "CLOCK1",
		niili.read_during_write_mode_mixed_ports = "DONT_CARE",
		niili.read_during_write_mode_port_a = "NEW_DATA_NO_NBE_READ",
		niili.read_during_write_mode_port_b = "NEW_DATA_NO_NBE_READ",
		niili.width_a = 16,
		niili.width_b = 1,
		niili.width_byteena_a = 1,
		niili.width_byteena_b = 1,
		niili.width_eccstatus = 3,
		niili.widthad_a = 8,
		niili.widthad_b = 1,
		niili.wrcontrol_aclr_a = "NONE",
		niili.wrcontrol_aclr_b = "NONE",
		niili.wrcontrol_wraddress_reg_b = "CLOCK1",
		niili.lpm_hint = "WIDTH_BYTEENA=1";
	initial
		nlli0i17 = 0;
	always @ ( posedge clk)
		  nlli0i17 <= nlli0i18;
	event nlli0i17_event;
	initial
		#1 ->nlli0i17_event;
	always @(nlli0i17_event)
		nlli0i17 <= {1{1'b1}};
	initial
		nlli0i18 = 0;
	always @ ( posedge clk)
		  nlli0i18 <= nlli0i17;
	initial
		nlli0l15 = 0;
	always @ ( posedge clk)
		  nlli0l15 <= nlli0l16;
	event nlli0l15_event;
	initial
		#1 ->nlli0l15_event;
	always @(nlli0l15_event)
		nlli0l15 <= {1{1'b1}};
	initial
		nlli0l16 = 0;
	always @ ( posedge clk)
		  nlli0l16 <= nlli0l15;
	initial
		nlli0O13 = 0;
	always @ ( posedge clk)
		  nlli0O13 <= nlli0O14;
	event nlli0O13_event;
	initial
		#1 ->nlli0O13_event;
	always @(nlli0O13_event)
		nlli0O13 <= {1{1'b1}};
	initial
		nlli0O14 = 0;
	always @ ( posedge clk)
		  nlli0O14 <= nlli0O13;
	initial
		nlli1l19 = 0;
	always @ ( posedge clk)
		  nlli1l19 <= nlli1l20;
	event nlli1l19_event;
	initial
		#1 ->nlli1l19_event;
	always @(nlli1l19_event)
		nlli1l19 <= {1{1'b1}};
	initial
		nlli1l20 = 0;
	always @ ( posedge clk)
		  nlli1l20 <= nlli1l19;
	initial
		nlliii11 = 0;
	always @ ( posedge clk)
		  nlliii11 <= nlliii12;
	event nlliii11_event;
	initial
		#1 ->nlliii11_event;
	always @(nlliii11_event)
		nlliii11 <= {1{1'b1}};
	initial
		nlliii12 = 0;
	always @ ( posedge clk)
		  nlliii12 <= nlliii11;
	initial
		nllili10 = 0;
	always @ ( posedge clk)
		  nllili10 <= nllili9;
	initial
		nllili9 = 0;
	always @ ( posedge clk)
		  nllili9 <= nllili10;
	event nllili9_event;
	initial
		#1 ->nllili9_event;
	always @(nllili9_event)
		nllili9 <= {1{1'b1}};
	initial
		nllilO7 = 0;
	always @ ( posedge clk)
		  nllilO7 <= nllilO8;
	event nllilO7_event;
	initial
		#1 ->nllilO7_event;
	always @(nllilO7_event)
		nllilO7 <= {1{1'b1}};
	initial
		nllilO8 = 0;
	always @ ( posedge clk)
		  nllilO8 <= nllilO7;
	initial
		nlliOO5 = 0;
	always @ ( posedge clk)
		  nlliOO5 <= nlliOO6;
	event nlliOO5_event;
	initial
		#1 ->nlliOO5_event;
	always @(nlliOO5_event)
		nlliOO5 <= {1{1'b1}};
	initial
		nlliOO6 = 0;
	always @ ( posedge clk)
		  nlliOO6 <= nlliOO5;
	initial
		nlll0l3 = 0;
	always @ ( posedge clk)
		  nlll0l3 <= nlll0l4;
	event nlll0l3_event;
	initial
		#1 ->nlll0l3_event;
	always @(nlll0l3_event)
		nlll0l3 <= {1{1'b1}};
	initial
		nlll0l4 = 0;
	always @ ( posedge clk)
		  nlll0l4 <= nlll0l3;
	initial
		nlll0O1 = 0;
	always @ ( posedge clk)
		  nlll0O1 <= nlll0O2;
	event nlll0O1_event;
	initial
		#1 ->nlll0O1_event;
	always @(nlll0O1_event)
		nlll0O1 <= {1{1'b1}};
	initial
		nlll0O2 = 0;
	always @ ( posedge clk)
		  nlll0O2 <= nlll0O1;
	initial
	begin
		n010i = 0;
		n010l = 0;
		n010O = 0;
		n011i = 0;
		n011l = 0;
		n011O = 0;
		n01ii = 0;
		n0ili = 0;
		n0ill = 0;
		n0ilO = 0;
		n0iOi = 0;
		n0iOl = 0;
		n0iOO = 0;
		n0l0i = 0;
		n0l0l = 0;
		n0l0O = 0;
		n0l1i = 0;
		n0l1l = 0;
		n0l1O = 0;
		n0lii = 0;
		n0lil = 0;
		n0liO = 0;
		n0lli = 0;
		n0lll = 0;
		n0llO = 0;
		n0lOi = 0;
		n0lOl = 0;
		n0lOO = 0;
		n0O1i = 0;
		n0O1l = 0;
		n101i = 0;
		n101l = 0;
		n101O = 0;
		n110i = 0;
		n110l = 0;
		n110O = 0;
		n111i = 0;
		n111l = 0;
		n111O = 0;
		n11ii = 0;
		n11il = 0;
		n11iO = 0;
		n11li = 0;
		n11ll = 0;
		n11lO = 0;
		n11Oi = 0;
		n11Ol = 0;
		n11OO = 0;
		n1ii = 0;
		n1O0l = 0;
		n1Oii = 0;
		n1Oil = 0;
		n1OiO = 0;
		n1Oli = 0;
		n1Oll = 0;
		n1OlO = 0;
		n1OOi = 0;
		n1OOl = 0;
		n1OOO = 0;
		ni10i = 0;
		niiOO = 0;
		nil0i = 0;
		nil0l = 0;
		nil0O = 0;
		nil1i = 0;
		nil1l = 0;
		nil1O = 0;
		nilii = 0;
		nilil = 0;
		niliO = 0;
		nilli = 0;
		nilll = 0;
		nillO = 0;
		nilOi = 0;
		nilOl = 0;
		nilOO = 0;
		nl00O = 0;
		nl0iO = 0;
		nl0li = 0;
		nl0ll = 0;
		nl0lO = 0;
		nl0Oi = 0;
		nl0Ol = 0;
		nl0OO = 0;
		nli0i = 0;
		nli0l = 0;
		nli0O = 0;
		nli1i = 0;
		nli1l = 0;
		nli1O = 0;
		nliii = 0;
		nliil = 0;
		nliiO = 0;
		nlllil = 0;
		nllliO = 0;
		nlllli = 0;
		nlllll = 0;
		nllllO = 0;
		nlllOi = 0;
		nlllOl = 0;
		nlllOO = 0;
		nllO0i = 0;
		nllO0l = 0;
		nllO0O = 0;
		nllO1i = 0;
		nllO1l = 0;
		nllO1O = 0;
		nllOii = 0;
		nllOil = 0;
		nllOiO = 0;
		nllOli = 0;
		nllOll = 0;
		nllOlO = 0;
		nllOOi = 0;
		nllOOl = 0;
		nllOOO = 0;
		nlO10i = 0;
		nlO10l = 0;
		nlO10O = 0;
		nlO11i = 0;
		nlO11l = 0;
		nlO11O = 0;
		nlO1ii = 0;
		nlO1il = 0;
		nlOOO = 0;
		nlOOOi = 0;
		nlOOOl = 0;
		nlOOOO = 0;
	end
	always @ (clk or wire_n10O_PRN or wire_n10O_CLRN)
	begin
		if (wire_n10O_PRN == 1'b0) 
		begin
			n010i <= 1;
			n010l <= 1;
			n010O <= 1;
			n011i <= 1;
			n011l <= 1;
			n011O <= 1;
			n01ii <= 1;
			n0ili <= 1;
			n0ill <= 1;
			n0ilO <= 1;
			n0iOi <= 1;
			n0iOl <= 1;
			n0iOO <= 1;
			n0l0i <= 1;
			n0l0l <= 1;
			n0l0O <= 1;
			n0l1i <= 1;
			n0l1l <= 1;
			n0l1O <= 1;
			n0lii <= 1;
			n0lil <= 1;
			n0liO <= 1;
			n0lli <= 1;
			n0lll <= 1;
			n0llO <= 1;
			n0lOi <= 1;
			n0lOl <= 1;
			n0lOO <= 1;
			n0O1i <= 1;
			n0O1l <= 1;
			n101i <= 1;
			n101l <= 1;
			n101O <= 1;
			n110i <= 1;
			n110l <= 1;
			n110O <= 1;
			n111i <= 1;
			n111l <= 1;
			n111O <= 1;
			n11ii <= 1;
			n11il <= 1;
			n11iO <= 1;
			n11li <= 1;
			n11ll <= 1;
			n11lO <= 1;
			n11Oi <= 1;
			n11Ol <= 1;
			n11OO <= 1;
			n1ii <= 1;
			n1O0l <= 1;
			n1Oii <= 1;
			n1Oil <= 1;
			n1OiO <= 1;
			n1Oli <= 1;
			n1Oll <= 1;
			n1OlO <= 1;
			n1OOi <= 1;
			n1OOl <= 1;
			n1OOO <= 1;
			ni10i <= 1;
			niiOO <= 1;
			nil0i <= 1;
			nil0l <= 1;
			nil0O <= 1;
			nil1i <= 1;
			nil1l <= 1;
			nil1O <= 1;
			nilii <= 1;
			nilil <= 1;
			niliO <= 1;
			nilli <= 1;
			nilll <= 1;
			nillO <= 1;
			nilOi <= 1;
			nilOl <= 1;
			nilOO <= 1;
			nl00O <= 1;
			nl0iO <= 1;
			nl0li <= 1;
			nl0ll <= 1;
			nl0lO <= 1;
			nl0Oi <= 1;
			nl0Ol <= 1;
			nl0OO <= 1;
			nli0i <= 1;
			nli0l <= 1;
			nli0O <= 1;
			nli1i <= 1;
			nli1l <= 1;
			nli1O <= 1;
			nliii <= 1;
			nliil <= 1;
			nliiO <= 1;
			nlllil <= 1;
			nllliO <= 1;
			nlllli <= 1;
			nlllll <= 1;
			nllllO <= 1;
			nlllOi <= 1;
			nlllOl <= 1;
			nlllOO <= 1;
			nllO0i <= 1;
			nllO0l <= 1;
			nllO0O <= 1;
			nllO1i <= 1;
			nllO1l <= 1;
			nllO1O <= 1;
			nllOii <= 1;
			nllOil <= 1;
			nllOiO <= 1;
			nllOli <= 1;
			nllOll <= 1;
			nllOlO <= 1;
			nllOOi <= 1;
			nllOOl <= 1;
			nllOOO <= 1;
			nlO10i <= 1;
			nlO10l <= 1;
			nlO10O <= 1;
			nlO11i <= 1;
			nlO11l <= 1;
			nlO11O <= 1;
			nlO1ii <= 1;
			nlO1il <= 1;
			nlOOO <= 1;
			nlOOOi <= 1;
			nlOOOl <= 1;
			nlOOOO <= 1;
		end
		else if  (wire_n10O_CLRN == 1'b0) 
		begin
			n010i <= 0;
			n010l <= 0;
			n010O <= 0;
			n011i <= 0;
			n011l <= 0;
			n011O <= 0;
			n01ii <= 0;
			n0ili <= 0;
			n0ill <= 0;
			n0ilO <= 0;
			n0iOi <= 0;
			n0iOl <= 0;
			n0iOO <= 0;
			n0l0i <= 0;
			n0l0l <= 0;
			n0l0O <= 0;
			n0l1i <= 0;
			n0l1l <= 0;
			n0l1O <= 0;
			n0lii <= 0;
			n0lil <= 0;
			n0liO <= 0;
			n0lli <= 0;
			n0lll <= 0;
			n0llO <= 0;
			n0lOi <= 0;
			n0lOl <= 0;
			n0lOO <= 0;
			n0O1i <= 0;
			n0O1l <= 0;
			n101i <= 0;
			n101l <= 0;
			n101O <= 0;
			n110i <= 0;
			n110l <= 0;
			n110O <= 0;
			n111i <= 0;
			n111l <= 0;
			n111O <= 0;
			n11ii <= 0;
			n11il <= 0;
			n11iO <= 0;
			n11li <= 0;
			n11ll <= 0;
			n11lO <= 0;
			n11Oi <= 0;
			n11Ol <= 0;
			n11OO <= 0;
			n1ii <= 0;
			n1O0l <= 0;
			n1Oii <= 0;
			n1Oil <= 0;
			n1OiO <= 0;
			n1Oli <= 0;
			n1Oll <= 0;
			n1OlO <= 0;
			n1OOi <= 0;
			n1OOl <= 0;
			n1OOO <= 0;
			ni10i <= 0;
			niiOO <= 0;
			nil0i <= 0;
			nil0l <= 0;
			nil0O <= 0;
			nil1i <= 0;
			nil1l <= 0;
			nil1O <= 0;
			nilii <= 0;
			nilil <= 0;
			niliO <= 0;
			nilli <= 0;
			nilll <= 0;
			nillO <= 0;
			nilOi <= 0;
			nilOl <= 0;
			nilOO <= 0;
			nl00O <= 0;
			nl0iO <= 0;
			nl0li <= 0;
			nl0ll <= 0;
			nl0lO <= 0;
			nl0Oi <= 0;
			nl0Ol <= 0;
			nl0OO <= 0;
			nli0i <= 0;
			nli0l <= 0;
			nli0O <= 0;
			nli1i <= 0;
			nli1l <= 0;
			nli1O <= 0;
			nliii <= 0;
			nliil <= 0;
			nliiO <= 0;
			nlllil <= 0;
			nllliO <= 0;
			nlllli <= 0;
			nlllll <= 0;
			nllllO <= 0;
			nlllOi <= 0;
			nlllOl <= 0;
			nlllOO <= 0;
			nllO0i <= 0;
			nllO0l <= 0;
			nllO0O <= 0;
			nllO1i <= 0;
			nllO1l <= 0;
			nllO1O <= 0;
			nllOii <= 0;
			nllOil <= 0;
			nllOiO <= 0;
			nllOli <= 0;
			nllOll <= 0;
			nllOlO <= 0;
			nllOOi <= 0;
			nllOOl <= 0;
			nllOOO <= 0;
			nlO10i <= 0;
			nlO10l <= 0;
			nlO10O <= 0;
			nlO11i <= 0;
			nlO11l <= 0;
			nlO11O <= 0;
			nlO1ii <= 0;
			nlO1il <= 0;
			nlOOO <= 0;
			nlOOOi <= 0;
			nlOOOl <= 0;
			nlOOOO <= 0;
		end
		else 
		if (clk != n10O_clk_prev && clk == 1'b1) 
		begin
			n010i <= wire_n01ll_dataout;
			n010l <= wire_n01li_dataout;
			n010O <= wire_n01iO_dataout;
			n011i <= wire_n01Ol_dataout;
			n011l <= wire_n01Oi_dataout;
			n011O <= wire_n01lO_dataout;
			n01ii <= wire_n01il_dataout;
			n0ili <= wire_ni1lO_dataout;
			n0ill <= wire_ni1ll_dataout;
			n0ilO <= wire_ni1li_dataout;
			n0iOi <= wire_ni1iO_dataout;
			n0iOl <= wire_ni1il_dataout;
			n0iOO <= wire_ni1ii_dataout;
			n0l0i <= wire_ni11l_dataout;
			n0l0l <= wire_ni11i_dataout;
			n0l0O <= wire_n0OOO_dataout;
			n0l1i <= wire_ni10O_dataout;
			n0l1l <= wire_ni10l_dataout;
			n0l1O <= wire_ni11O_dataout;
			n0lii <= wire_n0OOl_dataout;
			n0lil <= wire_n0OOi_dataout;
			n0liO <= wire_n0OlO_dataout;
			n0lli <= wire_n0Oll_dataout;
			n0lll <= wire_n0Oli_dataout;
			n0llO <= wire_n0OiO_dataout;
			n0lOi <= wire_n0Oil_dataout;
			n0lOl <= wire_n0Oii_dataout;
			n0lOO <= wire_n0O0O_dataout;
			n0O1i <= wire_n0O0l_dataout;
			n0O1l <= wire_n0O0i_dataout;
			n101i <= wire_n10ii_dataout;
			n101l <= wire_n100O_dataout;
			n101O <= wire_n100l_dataout;
			n110i <= wire_n1i0i_dataout;
			n110l <= wire_n1i1O_dataout;
			n110O <= wire_n1i1l_dataout;
			n111i <= wire_n1iii_dataout;
			n111l <= wire_n1i0O_dataout;
			n111O <= wire_n1i0l_dataout;
			n11ii <= wire_n1i1i_dataout;
			n11il <= wire_n10OO_dataout;
			n11iO <= wire_n10Ol_dataout;
			n11li <= wire_n10Oi_dataout;
			n11ll <= wire_n10lO_dataout;
			n11lO <= wire_n10ll_dataout;
			n11Oi <= wire_n10li_dataout;
			n11Ol <= wire_n10iO_dataout;
			n11OO <= wire_n10il_dataout;
			n1ii <= wire_n11O_dataout;
			n1O0l <= wire_n100i_dataout;
			n1Oii <= wire_n00il_dataout;
			n1Oil <= wire_n00ii_dataout;
			n1OiO <= wire_n000O_dataout;
			n1Oli <= wire_n000l_dataout;
			n1Oll <= wire_n000i_dataout;
			n1OlO <= wire_n001O_dataout;
			n1OOi <= wire_n001l_dataout;
			n1OOl <= wire_n001i_dataout;
			n1OOO <= wire_n01OO_dataout;
			ni10i <= wire_n0O1O_dataout;
			niiOO <= wire_nl11i_dataout;
			nil0i <= wire_niOlO_dataout;
			nil0l <= wire_niOll_dataout;
			nil0O <= wire_niOli_dataout;
			nil1i <= wire_niOOO_dataout;
			nil1l <= wire_niOOl_dataout;
			nil1O <= wire_niOOi_dataout;
			nilii <= wire_niOiO_dataout;
			nilil <= wire_niOil_dataout;
			niliO <= wire_niOii_dataout;
			nilli <= wire_niO0O_dataout;
			nilll <= wire_niO0l_dataout;
			nillO <= wire_niO0i_dataout;
			nilOi <= wire_niO1O_dataout;
			nilOl <= wire_niO1l_dataout;
			nilOO <= wire_nl00i_dataout;
			nl00O <= wire_niO1i_dataout;
			nl0iO <= wire_nllli_dataout;
			nl0li <= wire_nlliO_dataout;
			nl0ll <= wire_nllil_dataout;
			nl0lO <= wire_nllii_dataout;
			nl0Oi <= wire_nll0O_dataout;
			nl0Ol <= wire_nll0l_dataout;
			nl0OO <= wire_nll0i_dataout;
			nli0i <= wire_nliOO_dataout;
			nli0l <= wire_nliOl_dataout;
			nli0O <= wire_nliOi_dataout;
			nli1i <= wire_nll1O_dataout;
			nli1l <= wire_nll1l_dataout;
			nli1O <= wire_nll1i_dataout;
			nliii <= wire_nlilO_dataout;
			nliil <= wire_nlill_dataout;
			nliiO <= wire_nlOOi_dataout;
			nlllil <= wire_nlOili_dataout;
			nllliO <= wire_nlOiiO_dataout;
			nlllli <= wire_nlOiil_dataout;
			nlllll <= wire_nlOiii_dataout;
			nllllO <= wire_nlOi0O_dataout;
			nlllOi <= wire_nlOi0l_dataout;
			nlllOl <= wire_nlOi0i_dataout;
			nlllOO <= wire_nlOi1O_dataout;
			nllO0i <= wire_nlO0Ol_dataout;
			nllO0l <= wire_nlO0Oi_dataout;
			nllO0O <= wire_nlO0lO_dataout;
			nllO1i <= wire_nlOi1l_dataout;
			nllO1l <= wire_nlOi1i_dataout;
			nllO1O <= wire_nlO0OO_dataout;
			nllOii <= wire_nlO0ll_dataout;
			nllOil <= wire_nlO0li_dataout;
			nllOiO <= wire_nlO0iO_dataout;
			nllOli <= wire_nlO0il_dataout;
			nllOll <= wire_nlO0ii_dataout;
			nllOlO <= wire_nlO00O_dataout;
			nllOOi <= wire_nlO00l_dataout;
			nllOOl <= wire_nlO00i_dataout;
			nllOOO <= wire_nlO01O_dataout;
			nlO10i <= wire_nlO1Ol_dataout;
			nlO10l <= wire_nlO1Oi_dataout;
			nlO10O <= wire_nlO1lO_dataout;
			nlO11i <= wire_nlO01l_dataout;
			nlO11l <= wire_nlO01i_dataout;
			nlO11O <= wire_nlO1OO_dataout;
			nlO1ii <= wire_nlO1ll_dataout;
			nlO1il <= wire_nlO1li_dataout;
			nlOOO <= wire_nlili_dataout;
			nlOOOi <= wire_nlO1iO_dataout;
			nlOOOl <= wire_n1iiO_dataout;
			nlOOOO <= wire_n1iil_dataout;
		end
		n10O_clk_prev <= clk;
	end
	assign
		wire_n10O_CLRN = (nlll0O2 ^ nlll0O1),
		wire_n10O_PRN = (nlll0l4 ^ nlll0l3);
	event n010i_event;
	event n010l_event;
	event n010O_event;
	event n011i_event;
	event n011l_event;
	event n011O_event;
	event n01ii_event;
	event n0ili_event;
	event n0ill_event;
	event n0ilO_event;
	event n0iOi_event;
	event n0iOl_event;
	event n0iOO_event;
	event n0l0i_event;
	event n0l0l_event;
	event n0l0O_event;
	event n0l1i_event;
	event n0l1l_event;
	event n0l1O_event;
	event n0lii_event;
	event n0lil_event;
	event n0liO_event;
	event n0lli_event;
	event n0lll_event;
	event n0llO_event;
	event n0lOi_event;
	event n0lOl_event;
	event n0lOO_event;
	event n0O1i_event;
	event n0O1l_event;
	event n101i_event;
	event n101l_event;
	event n101O_event;
	event n110i_event;
	event n110l_event;
	event n110O_event;
	event n111i_event;
	event n111l_event;
	event n111O_event;
	event n11ii_event;
	event n11il_event;
	event n11iO_event;
	event n11li_event;
	event n11ll_event;
	event n11lO_event;
	event n11Oi_event;
	event n11Ol_event;
	event n11OO_event;
	event n1ii_event;
	event n1O0l_event;
	event n1Oii_event;
	event n1Oil_event;
	event n1OiO_event;
	event n1Oli_event;
	event n1Oll_event;
	event n1OlO_event;
	event n1OOi_event;
	event n1OOl_event;
	event n1OOO_event;
	event ni10i_event;
	event niiOO_event;
	event nil0i_event;
	event nil0l_event;
	event nil0O_event;
	event nil1i_event;
	event nil1l_event;
	event nil1O_event;
	event nilii_event;
	event nilil_event;
	event niliO_event;
	event nilli_event;
	event nilll_event;
	event nillO_event;
	event nilOi_event;
	event nilOl_event;
	event nilOO_event;
	event nl00O_event;
	event nl0iO_event;
	event nl0li_event;
	event nl0ll_event;
	event nl0lO_event;
	event nl0Oi_event;
	event nl0Ol_event;
	event nl0OO_event;
	event nli0i_event;
	event nli0l_event;
	event nli0O_event;
	event nli1i_event;
	event nli1l_event;
	event nli1O_event;
	event nliii_event;
	event nliil_event;
	event nliiO_event;
	event nlllil_event;
	event nllliO_event;
	event nlllli_event;
	event nlllll_event;
	event nllllO_event;
	event nlllOi_event;
	event nlllOl_event;
	event nlllOO_event;
	event nllO0i_event;
	event nllO0l_event;
	event nllO0O_event;
	event nllO1i_event;
	event nllO1l_event;
	event nllO1O_event;
	event nllOii_event;
	event nllOil_event;
	event nllOiO_event;
	event nllOli_event;
	event nllOll_event;
	event nllOlO_event;
	event nllOOi_event;
	event nllOOl_event;
	event nllOOO_event;
	event nlO10i_event;
	event nlO10l_event;
	event nlO10O_event;
	event nlO11i_event;
	event nlO11l_event;
	event nlO11O_event;
	event nlO1ii_event;
	event nlO1il_event;
	event nlOOO_event;
	event nlOOOi_event;
	event nlOOOl_event;
	event nlOOOO_event;
	initial
		#1 ->n010i_event;
	initial
		#1 ->n010l_event;
	initial
		#1 ->n010O_event;
	initial
		#1 ->n011i_event;
	initial
		#1 ->n011l_event;
	initial
		#1 ->n011O_event;
	initial
		#1 ->n01ii_event;
	initial
		#1 ->n0ili_event;
	initial
		#1 ->n0ill_event;
	initial
		#1 ->n0ilO_event;
	initial
		#1 ->n0iOi_event;
	initial
		#1 ->n0iOl_event;
	initial
		#1 ->n0iOO_event;
	initial
		#1 ->n0l0i_event;
	initial
		#1 ->n0l0l_event;
	initial
		#1 ->n0l0O_event;
	initial
		#1 ->n0l1i_event;
	initial
		#1 ->n0l1l_event;
	initial
		#1 ->n0l1O_event;
	initial
		#1 ->n0lii_event;
	initial
		#1 ->n0lil_event;
	initial
		#1 ->n0liO_event;
	initial
		#1 ->n0lli_event;
	initial
		#1 ->n0lll_event;
	initial
		#1 ->n0llO_event;
	initial
		#1 ->n0lOi_event;
	initial
		#1 ->n0lOl_event;
	initial
		#1 ->n0lOO_event;
	initial
		#1 ->n0O1i_event;
	initial
		#1 ->n0O1l_event;
	initial
		#1 ->n101i_event;
	initial
		#1 ->n101l_event;
	initial
		#1 ->n101O_event;
	initial
		#1 ->n110i_event;
	initial
		#1 ->n110l_event;
	initial
		#1 ->n110O_event;
	initial
		#1 ->n111i_event;
	initial
		#1 ->n111l_event;
	initial
		#1 ->n111O_event;
	initial
		#1 ->n11ii_event;
	initial
		#1 ->n11il_event;
	initial
		#1 ->n11iO_event;
	initial
		#1 ->n11li_event;
	initial
		#1 ->n11ll_event;
	initial
		#1 ->n11lO_event;
	initial
		#1 ->n11Oi_event;
	initial
		#1 ->n11Ol_event;
	initial
		#1 ->n11OO_event;
	initial
		#1 ->n1ii_event;
	initial
		#1 ->n1O0l_event;
	initial
		#1 ->n1Oii_event;
	initial
		#1 ->n1Oil_event;
	initial
		#1 ->n1OiO_event;
	initial
		#1 ->n1Oli_event;
	initial
		#1 ->n1Oll_event;
	initial
		#1 ->n1OlO_event;
	initial
		#1 ->n1OOi_event;
	initial
		#1 ->n1OOl_event;
	initial
		#1 ->n1OOO_event;
	initial
		#1 ->ni10i_event;
	initial
		#1 ->niiOO_event;
	initial
		#1 ->nil0i_event;
	initial
		#1 ->nil0l_event;
	initial
		#1 ->nil0O_event;
	initial
		#1 ->nil1i_event;
	initial
		#1 ->nil1l_event;
	initial
		#1 ->nil1O_event;
	initial
		#1 ->nilii_event;
	initial
		#1 ->nilil_event;
	initial
		#1 ->niliO_event;
	initial
		#1 ->nilli_event;
	initial
		#1 ->nilll_event;
	initial
		#1 ->nillO_event;
	initial
		#1 ->nilOi_event;
	initial
		#1 ->nilOl_event;
	initial
		#1 ->nilOO_event;
	initial
		#1 ->nl00O_event;
	initial
		#1 ->nl0iO_event;
	initial
		#1 ->nl0li_event;
	initial
		#1 ->nl0ll_event;
	initial
		#1 ->nl0lO_event;
	initial
		#1 ->nl0Oi_event;
	initial
		#1 ->nl0Ol_event;
	initial
		#1 ->nl0OO_event;
	initial
		#1 ->nli0i_event;
	initial
		#1 ->nli0l_event;
	initial
		#1 ->nli0O_event;
	initial
		#1 ->nli1i_event;
	initial
		#1 ->nli1l_event;
	initial
		#1 ->nli1O_event;
	initial
		#1 ->nliii_event;
	initial
		#1 ->nliil_event;
	initial
		#1 ->nliiO_event;
	initial
		#1 ->nlllil_event;
	initial
		#1 ->nllliO_event;
	initial
		#1 ->nlllli_event;
	initial
		#1 ->nlllll_event;
	initial
		#1 ->nllllO_event;
	initial
		#1 ->nlllOi_event;
	initial
		#1 ->nlllOl_event;
	initial
		#1 ->nlllOO_event;
	initial
		#1 ->nllO0i_event;
	initial
		#1 ->nllO0l_event;
	initial
		#1 ->nllO0O_event;
	initial
		#1 ->nllO1i_event;
	initial
		#1 ->nllO1l_event;
	initial
		#1 ->nllO1O_event;
	initial
		#1 ->nllOii_event;
	initial
		#1 ->nllOil_event;
	initial
		#1 ->nllOiO_event;
	initial
		#1 ->nllOli_event;
	initial
		#1 ->nllOll_event;
	initial
		#1 ->nllOlO_event;
	initial
		#1 ->nllOOi_event;
	initial
		#1 ->nllOOl_event;
	initial
		#1 ->nllOOO_event;
	initial
		#1 ->nlO10i_event;
	initial
		#1 ->nlO10l_event;
	initial
		#1 ->nlO10O_event;
	initial
		#1 ->nlO11i_event;
	initial
		#1 ->nlO11l_event;
	initial
		#1 ->nlO11O_event;
	initial
		#1 ->nlO1ii_event;
	initial
		#1 ->nlO1il_event;
	initial
		#1 ->nlOOO_event;
	initial
		#1 ->nlOOOi_event;
	initial
		#1 ->nlOOOl_event;
	initial
		#1 ->nlOOOO_event;
	always @(n010i_event)
		n010i <= 1;
	always @(n010l_event)
		n010l <= 1;
	always @(n010O_event)
		n010O <= 1;
	always @(n011i_event)
		n011i <= 1;
	always @(n011l_event)
		n011l <= 1;
	always @(n011O_event)
		n011O <= 1;
	always @(n01ii_event)
		n01ii <= 1;
	always @(n0ili_event)
		n0ili <= 1;
	always @(n0ill_event)
		n0ill <= 1;
	always @(n0ilO_event)
		n0ilO <= 1;
	always @(n0iOi_event)
		n0iOi <= 1;
	always @(n0iOl_event)
		n0iOl <= 1;
	always @(n0iOO_event)
		n0iOO <= 1;
	always @(n0l0i_event)
		n0l0i <= 1;
	always @(n0l0l_event)
		n0l0l <= 1;
	always @(n0l0O_event)
		n0l0O <= 1;
	always @(n0l1i_event)
		n0l1i <= 1;
	always @(n0l1l_event)
		n0l1l <= 1;
	always @(n0l1O_event)
		n0l1O <= 1;
	always @(n0lii_event)
		n0lii <= 1;
	always @(n0lil_event)
		n0lil <= 1;
	always @(n0liO_event)
		n0liO <= 1;
	always @(n0lli_event)
		n0lli <= 1;
	always @(n0lll_event)
		n0lll <= 1;
	always @(n0llO_event)
		n0llO <= 1;
	always @(n0lOi_event)
		n0lOi <= 1;
	always @(n0lOl_event)
		n0lOl <= 1;
	always @(n0lOO_event)
		n0lOO <= 1;
	always @(n0O1i_event)
		n0O1i <= 1;
	always @(n0O1l_event)
		n0O1l <= 1;
	always @(n101i_event)
		n101i <= 1;
	always @(n101l_event)
		n101l <= 1;
	always @(n101O_event)
		n101O <= 1;
	always @(n110i_event)
		n110i <= 1;
	always @(n110l_event)
		n110l <= 1;
	always @(n110O_event)
		n110O <= 1;
	always @(n111i_event)
		n111i <= 1;
	always @(n111l_event)
		n111l <= 1;
	always @(n111O_event)
		n111O <= 1;
	always @(n11ii_event)
		n11ii <= 1;
	always @(n11il_event)
		n11il <= 1;
	always @(n11iO_event)
		n11iO <= 1;
	always @(n11li_event)
		n11li <= 1;
	always @(n11ll_event)
		n11ll <= 1;
	always @(n11lO_event)
		n11lO <= 1;
	always @(n11Oi_event)
		n11Oi <= 1;
	always @(n11Ol_event)
		n11Ol <= 1;
	always @(n11OO_event)
		n11OO <= 1;
	always @(n1ii_event)
		n1ii <= 1;
	always @(n1O0l_event)
		n1O0l <= 1;
	always @(n1Oii_event)
		n1Oii <= 1;
	always @(n1Oil_event)
		n1Oil <= 1;
	always @(n1OiO_event)
		n1OiO <= 1;
	always @(n1Oli_event)
		n1Oli <= 1;
	always @(n1Oll_event)
		n1Oll <= 1;
	always @(n1OlO_event)
		n1OlO <= 1;
	always @(n1OOi_event)
		n1OOi <= 1;
	always @(n1OOl_event)
		n1OOl <= 1;
	always @(n1OOO_event)
		n1OOO <= 1;
	always @(ni10i_event)
		ni10i <= 1;
	always @(niiOO_event)
		niiOO <= 1;
	always @(nil0i_event)
		nil0i <= 1;
	always @(nil0l_event)
		nil0l <= 1;
	always @(nil0O_event)
		nil0O <= 1;
	always @(nil1i_event)
		nil1i <= 1;
	always @(nil1l_event)
		nil1l <= 1;
	always @(nil1O_event)
		nil1O <= 1;
	always @(nilii_event)
		nilii <= 1;
	always @(nilil_event)
		nilil <= 1;
	always @(niliO_event)
		niliO <= 1;
	always @(nilli_event)
		nilli <= 1;
	always @(nilll_event)
		nilll <= 1;
	always @(nillO_event)
		nillO <= 1;
	always @(nilOi_event)
		nilOi <= 1;
	always @(nilOl_event)
		nilOl <= 1;
	always @(nilOO_event)
		nilOO <= 1;
	always @(nl00O_event)
		nl00O <= 1;
	always @(nl0iO_event)
		nl0iO <= 1;
	always @(nl0li_event)
		nl0li <= 1;
	always @(nl0ll_event)
		nl0ll <= 1;
	always @(nl0lO_event)
		nl0lO <= 1;
	always @(nl0Oi_event)
		nl0Oi <= 1;
	always @(nl0Ol_event)
		nl0Ol <= 1;
	always @(nl0OO_event)
		nl0OO <= 1;
	always @(nli0i_event)
		nli0i <= 1;
	always @(nli0l_event)
		nli0l <= 1;
	always @(nli0O_event)
		nli0O <= 1;
	always @(nli1i_event)
		nli1i <= 1;
	always @(nli1l_event)
		nli1l <= 1;
	always @(nli1O_event)
		nli1O <= 1;
	always @(nliii_event)
		nliii <= 1;
	always @(nliil_event)
		nliil <= 1;
	always @(nliiO_event)
		nliiO <= 1;
	always @(nlllil_event)
		nlllil <= 1;
	always @(nllliO_event)
		nllliO <= 1;
	always @(nlllli_event)
		nlllli <= 1;
	always @(nlllll_event)
		nlllll <= 1;
	always @(nllllO_event)
		nllllO <= 1;
	always @(nlllOi_event)
		nlllOi <= 1;
	always @(nlllOl_event)
		nlllOl <= 1;
	always @(nlllOO_event)
		nlllOO <= 1;
	always @(nllO0i_event)
		nllO0i <= 1;
	always @(nllO0l_event)
		nllO0l <= 1;
	always @(nllO0O_event)
		nllO0O <= 1;
	always @(nllO1i_event)
		nllO1i <= 1;
	always @(nllO1l_event)
		nllO1l <= 1;
	always @(nllO1O_event)
		nllO1O <= 1;
	always @(nllOii_event)
		nllOii <= 1;
	always @(nllOil_event)
		nllOil <= 1;
	always @(nllOiO_event)
		nllOiO <= 1;
	always @(nllOli_event)
		nllOli <= 1;
	always @(nllOll_event)
		nllOll <= 1;
	always @(nllOlO_event)
		nllOlO <= 1;
	always @(nllOOi_event)
		nllOOi <= 1;
	always @(nllOOl_event)
		nllOOl <= 1;
	always @(nllOOO_event)
		nllOOO <= 1;
	always @(nlO10i_event)
		nlO10i <= 1;
	always @(nlO10l_event)
		nlO10l <= 1;
	always @(nlO10O_event)
		nlO10O <= 1;
	always @(nlO11i_event)
		nlO11i <= 1;
	always @(nlO11l_event)
		nlO11l <= 1;
	always @(nlO11O_event)
		nlO11O <= 1;
	always @(nlO1ii_event)
		nlO1ii <= 1;
	always @(nlO1il_event)
		nlO1il <= 1;
	always @(nlOOO_event)
		nlOOO <= 1;
	always @(nlOOOi_event)
		nlOOOi <= 1;
	always @(nlOOOl_event)
		nlOOOl <= 1;
	always @(nlOOOO_event)
		nlOOOO <= 1;
	lpm_add_sub   n1O0O
	( 
	.aclr((~ reset_n)),
	.clken(clken),
	.clock(clk),
	.cout(),
	.dataa({wire_nlllii_result[31:11]}),
	.datab({{17{n11OO}}, n101i, n101l, n101O, n1O0l}),
	.overflow(),
	.result(wire_n1O0O_result),
	.add_sub(),
	.cin()
	);
	defparam
		n1O0O.lpm_direction = "ADD",
		n1O0O.lpm_pipeline = 1,
		n1O0O.lpm_representation = "SIGNED",
		n1O0O.lpm_width = 21;
	lpm_add_sub   niiOi
	( 
	.aclr((~ reset_n)),
	.cin(((nilOO & (~ niiOO)) & (nlliii12 ^ nlliii11))),
	.clken(clken),
	.clock(clk),
	.cout(),
	.dataa({niiOO, nil1i, nil1l, nil1O, nil0i, nil0l, nil0O, nilii, nilil, niliO, nilli, nilll, nillO, nilOi, nilOl, nl00O}),
	.datab({16{1'b0}}),
	.overflow(),
	.result(wire_niiOi_result),
	.add_sub()
	);
	defparam
		niiOi.lpm_direction = "ADD",
		niiOi.lpm_pipeline = 1,
		niiOi.lpm_representation = "SIGNED",
		niiOi.lpm_width = 16;
	lpm_add_sub   nl0ii
	( 
	.aclr((~ reset_n)),
	.cin(((nliiO & (~ nl0iO)) & (nllili10 ^ nllili9))),
	.clken(clken),
	.clock(clk),
	.cout(),
	.dataa({nl0iO, nl0li, nl0ll, nl0lO, nl0Oi, nl0Ol, nl0OO, nli1i, nli1l, nli1O, nli0i, nli0l, nli0O, nliii, nliil, nlOOO}),
	.datab({16{1'b0}}),
	.overflow(),
	.result(wire_nl0ii_result),
	.add_sub()
	);
	defparam
		nl0ii.lpm_direction = "ADD",
		nl0ii.lpm_pipeline = 1,
		nl0ii.lpm_representation = "SIGNED",
		nl0ii.lpm_width = 16;
	lpm_add_sub   nlllii
	( 
	.aclr((~ reset_n)),
	.clken(clken),
	.clock(clk),
	.cout(),
	.dataa({nlllil, nllliO, nlllli, nlllll, nllllO, nlllOi, nlllOl, nlllOO, nllO1i, nllO1l, nllO1O, nllO0i, nllO0l, nllO0O, nllOii, nllOil, nllOiO, nllOli, nllOll, nllOlO, nllOOi, nllOOl, nllOOO, nlO11i, nlO11l, nlO11O, nlO10i, nlO10l, nlO10O, nlO1ii, nlO1il, nlOOOi}),
	.datab({wire_nlllii_result[31:0]}),
	.overflow(),
	.result(wire_nlllii_result),
	.add_sub(),
	.cin()
	);
	defparam
		nlllii.lpm_direction = "ADD",
		nlllii.lpm_pipeline = 1,
		nlllii.lpm_representation = "UNSIGNED",
		nlllii.lpm_width = 32;
	lpm_counter   n11i
	( 
	.aclr((~ reset_n)),
	.clk_en(clken),
	.clock(clk),
	.cout(),
	.q(wire_n11i_q),
	.aload(),
	.aset(),
	.cin(),
	.cnt_en(),
	.data(),
	.sclr(),
	.sload(),
	.sset(),
	.updown()
	);
	defparam
		n11i.lpm_direction = "UP",
		n11i.lpm_modulus = 0,
		n11i.lpm_port_updown = "PORT_CONNECTIVITY",
		n11i.lpm_width = 4;
	and(wire_n000i_dataout, wire_n0i0l_dataout, ~((~ reset_n)));
	and(wire_n000l_dataout, wire_n0i0O_dataout, ~((~ reset_n)));
	and(wire_n000O_dataout, wire_n0iii_dataout, ~((~ reset_n)));
	and(wire_n001i_dataout, wire_n0i1l_dataout, ~((~ reset_n)));
	and(wire_n001l_dataout, wire_n0i1O_dataout, ~((~ reset_n)));
	and(wire_n001O_dataout, wire_n0i0i_dataout, ~((~ reset_n)));
	and(wire_n00ii_dataout, wire_n0iil_dataout, ~((~ reset_n)));
	and(wire_n00il_dataout, wire_n0iiO_dataout, ~((~ reset_n)));
	assign		wire_n00iO_dataout = (clken === 1'b1) ? wire_n1O0O_result[5] : n01ii;
	assign		wire_n00li_dataout = (clken === 1'b1) ? wire_n1O0O_result[6] : n010O;
	assign		wire_n00ll_dataout = (clken === 1'b1) ? wire_n1O0O_result[7] : n010l;
	assign		wire_n00lO_dataout = (clken === 1'b1) ? wire_n1O0O_result[8] : n010i;
	assign		wire_n00Oi_dataout = (clken === 1'b1) ? wire_n1O0O_result[9] : n011O;
	assign		wire_n00Ol_dataout = (clken === 1'b1) ? wire_n1O0O_result[10] : n011l;
	assign		wire_n00OO_dataout = (clken === 1'b1) ? wire_n1O0O_result[11] : n011i;
	and(wire_n01il_dataout, wire_n00iO_dataout, ~((~ reset_n)));
	and(wire_n01iO_dataout, wire_n00li_dataout, ~((~ reset_n)));
	and(wire_n01li_dataout, wire_n00ll_dataout, ~((~ reset_n)));
	and(wire_n01ll_dataout, wire_n00lO_dataout, ~((~ reset_n)));
	and(wire_n01lO_dataout, wire_n00Oi_dataout, ~((~ reset_n)));
	and(wire_n01Oi_dataout, wire_n00Ol_dataout, ~((~ reset_n)));
	and(wire_n01Ol_dataout, wire_n00OO_dataout, ~((~ reset_n)));
	and(wire_n01OO_dataout, wire_n0i1i_dataout, ~((~ reset_n)));
	assign		wire_n0i0i_dataout = (clken === 1'b1) ? wire_n1O0O_result[15] : n1OlO;
	assign		wire_n0i0l_dataout = (clken === 1'b1) ? wire_n1O0O_result[16] : n1Oll;
	assign		wire_n0i0O_dataout = (clken === 1'b1) ? wire_n1O0O_result[17] : n1Oli;
	assign		wire_n0i1i_dataout = (clken === 1'b1) ? wire_n1O0O_result[12] : n1OOO;
	assign		wire_n0i1l_dataout = (clken === 1'b1) ? wire_n1O0O_result[13] : n1OOl;
	assign		wire_n0i1O_dataout = (clken === 1'b1) ? wire_n1O0O_result[14] : n1OOi;
	assign		wire_n0iii_dataout = (clken === 1'b1) ? wire_n1O0O_result[18] : n1OiO;
	assign		wire_n0iil_dataout = (clken === 1'b1) ? wire_n1O0O_result[19] : n1Oil;
	assign		wire_n0iiO_dataout = (clken === 1'b1) ? wire_n1O0O_result[20] : n1Oii;
	and(wire_n0O0i_dataout, wire_ni1Ol_dataout, ~((~ reset_n)));
	and(wire_n0O0l_dataout, wire_ni1OO_dataout, ~((~ reset_n)));
	and(wire_n0O0O_dataout, wire_ni01i_dataout, ~((~ reset_n)));
	and(wire_n0O1O_dataout, wire_ni1Oi_dataout, ~((~ reset_n)));
	and(wire_n0Oii_dataout, wire_ni01l_dataout, ~((~ reset_n)));
	and(wire_n0Oil_dataout, wire_ni01O_dataout, ~((~ reset_n)));
	and(wire_n0OiO_dataout, wire_ni00i_dataout, ~((~ reset_n)));
	and(wire_n0Oli_dataout, wire_ni00l_dataout, ~((~ reset_n)));
	and(wire_n0Oll_dataout, wire_ni00O_dataout, ~((~ reset_n)));
	and(wire_n0OlO_dataout, wire_ni0ii_dataout, ~((~ reset_n)));
	and(wire_n0OOi_dataout, wire_ni0il_dataout, ~((~ reset_n)));
	and(wire_n0OOl_dataout, wire_ni0iO_dataout, ~((~ reset_n)));
	and(wire_n0OOO_dataout, wire_ni0li_dataout, ~((~ reset_n)));
	and(wire_n100i_dataout, wire_n1ili_dataout, ~((~ reset_n)));
	and(wire_n100l_dataout, wire_n1ill_dataout, ~((~ reset_n)));
	and(wire_n100O_dataout, wire_n1ilO_dataout, ~((~ reset_n)));
	or(wire_n10i_dataout, n1ii, (clken & ((((wire_n11i_q[1] & wire_n11i_q[3]) & (~ wire_n11i_q[0])) & (~ wire_n11i_q[2])) & (nlliOO6 ^ nlliOO5))));
	and(wire_n10ii_dataout, wire_n1iOi_dataout, ~((~ reset_n)));
	and(wire_n10il_dataout, wire_n1iOl_dataout, ~((~ reset_n)));
	or(wire_n10iO_dataout, wire_n1iOO_dataout, (~ reset_n));
	and(wire_n10li_dataout, wire_n1l1i_dataout, ~((~ reset_n)));
	or(wire_n10ll_dataout, wire_n1l1l_dataout, (~ reset_n));
	or(wire_n10lO_dataout, wire_n1l1O_dataout, (~ reset_n));
	or(wire_n10Oi_dataout, wire_n1l0i_dataout, (~ reset_n));
	and(wire_n10Ol_dataout, wire_n1l0l_dataout, ~((~ reset_n)));
	or(wire_n10OO_dataout, wire_n1l0O_dataout, (~ reset_n));
	and(wire_n11O_dataout, wire_n10i_dataout, ~((~ reset_n)));
	and(wire_n1i0i_dataout, wire_n1lli_dataout, ~((~ reset_n)));
	or(wire_n1i0l_dataout, wire_n1lll_dataout, (~ reset_n));
	or(wire_n1i0O_dataout, wire_n1llO_dataout, (~ reset_n));
	or(wire_n1i1i_dataout, wire_n1lii_dataout, (~ reset_n));
	and(wire_n1i1l_dataout, wire_n1lil_dataout, ~((~ reset_n)));
	or(wire_n1i1O_dataout, wire_n1liO_dataout, (~ reset_n));
	and(wire_n1iii_dataout, wire_n1lOi_dataout, ~((~ reset_n)));
	and(wire_n1iil_dataout, wire_n1lOl_dataout, ~((~ reset_n)));
	or(wire_n1iiO_dataout, wire_n1lOO_dataout, (~ reset_n));
	assign		wire_n1ili_dataout = (clken === 1'b1) ? wire_n1O1i_o[0] : n1O0l;
	assign		wire_n1ill_dataout = (clken === 1'b1) ? wire_n1O1i_o[1] : n101O;
	assign		wire_n1ilO_dataout = (clken === 1'b1) ? wire_n1O1i_o[2] : n101l;
	assign		wire_n1iOi_dataout = (clken === 1'b1) ? wire_n1O1i_o[3] : n101i;
	assign		wire_n1iOl_dataout = (clken === 1'b1) ? wire_n1O1i_o[4] : n11OO;
	assign		wire_n1iOO_dataout = (clken === 1'b1) ? (((nlOOOO ^ nlOOOl) ^ (~ (nlli1l20 ^ nlli1l19))) ^ (n11ll ^ n111l)) : n11Ol;
	assign		wire_n1l0i_dataout = (clken === 1'b1) ? n11ll : n11li;
	assign		wire_n1l0l_dataout = (clken === 1'b1) ? n11li : n11iO;
	assign		wire_n1l0O_dataout = (clken === 1'b1) ? n11iO : n11il;
	assign		wire_n1l1i_dataout = (clken === 1'b1) ? n11Ol : n11Oi;
	assign		wire_n1l1l_dataout = (clken === 1'b1) ? n11Oi : n11lO;
	assign		wire_n1l1O_dataout = (clken === 1'b1) ? n11lO : n11ll;
	assign		wire_n1lii_dataout = (clken === 1'b1) ? n11il : n11ii;
	assign		wire_n1lil_dataout = (clken === 1'b1) ? n11ii : n110O;
	assign		wire_n1liO_dataout = (clken === 1'b1) ? n110O : n110l;
	assign		wire_n1lli_dataout = (clken === 1'b1) ? n110l : n110i;
	assign		wire_n1lll_dataout = (clken === 1'b1) ? n110i : n111O;
	assign		wire_n1llO_dataout = (clken === 1'b1) ? n111O : n111l;
	assign		wire_n1lOi_dataout = (clken === 1'b1) ? n111l : n111i;
	assign		wire_n1lOl_dataout = (clken === 1'b1) ? n111i : nlOOOO;
	assign		wire_n1lOO_dataout = (clken === 1'b1) ? nlOOOO : nlOOOl;
	assign		wire_ni00i_dataout = (clken === 1'b1) ? n011i : n0llO;
	assign		wire_ni00l_dataout = (clken === 1'b1) ? n1OOO : n0lll;
	assign		wire_ni00O_dataout = (clken === 1'b1) ? wire_niiii_o[0] : n0lli;
	assign		wire_ni01i_dataout = (clken === 1'b1) ? n010i : n0lOO;
	assign		wire_ni01l_dataout = (clken === 1'b1) ? n011O : n0lOl;
	assign		wire_ni01O_dataout = (clken === 1'b1) ? n011l : n0lOi;
	assign		wire_ni0ii_dataout = (clken === 1'b1) ? wire_niiii_o[1] : n0liO;
	assign		wire_ni0il_dataout = (clken === 1'b1) ? wire_niiii_o[2] : n0lil;
	assign		wire_ni0iO_dataout = (clken === 1'b1) ? wire_niiii_o[3] : n0lii;
	assign		wire_ni0li_dataout = (clken === 1'b1) ? wire_niiii_o[4] : n0l0O;
	assign		wire_ni0ll_dataout = (clken === 1'b1) ? wire_niiii_o[5] : n0l0l;
	assign		wire_ni0lO_dataout = (clken === 1'b1) ? wire_niiii_o[6] : n0l0i;
	assign		wire_ni0Oi_dataout = (clken === 1'b1) ? wire_niiii_o[7] : n0l1O;
	assign		wire_ni0Ol_dataout = (clken === 1'b1) ? n1OOl : n0l1l;
	assign		wire_ni0OO_dataout = (clken === 1'b1) ? n1OOi : n0l1i;
	and(wire_ni10l_dataout, wire_ni0Ol_dataout, ~((~ reset_n)));
	and(wire_ni10O_dataout, wire_ni0OO_dataout, ~((~ reset_n)));
	and(wire_ni11i_dataout, wire_ni0ll_dataout, ~((~ reset_n)));
	and(wire_ni11l_dataout, wire_ni0lO_dataout, ~((~ reset_n)));
	and(wire_ni11O_dataout, wire_ni0Oi_dataout, ~((~ reset_n)));
	and(wire_ni1ii_dataout, wire_nii1i_dataout, ~((~ reset_n)));
	and(wire_ni1il_dataout, wire_nii1l_dataout, ~((~ reset_n)));
	and(wire_ni1iO_dataout, wire_nii1O_dataout, ~((~ reset_n)));
	and(wire_ni1li_dataout, wire_nii0i_dataout, ~((~ reset_n)));
	and(wire_ni1ll_dataout, wire_nii0l_dataout, ~((~ reset_n)));
	and(wire_ni1lO_dataout, wire_nii0O_dataout, ~((~ reset_n)));
	assign		wire_ni1Oi_dataout = (clken === 1'b1) ? n01ii : ni10i;
	assign		wire_ni1Ol_dataout = (clken === 1'b1) ? n010O : n0O1l;
	assign		wire_ni1OO_dataout = (clken === 1'b1) ? n010l : n0O1i;
	assign		wire_nii0i_dataout = (clken === 1'b1) ? n1OiO : n0ilO;
	assign		wire_nii0l_dataout = (clken === 1'b1) ? n1Oil : n0ill;
	assign		wire_nii0O_dataout = (clken === 1'b1) ? n1Oii : n0ili;
	assign		wire_nii1i_dataout = (clken === 1'b1) ? n1OlO : n0iOO;
	assign		wire_nii1l_dataout = (clken === 1'b1) ? n1Oll : n0iOl;
	assign		wire_nii1O_dataout = (clken === 1'b1) ? n1Oli : n0iOi;
	and(wire_niO0i_dataout, wire_nl10l_dataout, ~((~ reset_n)));
	and(wire_niO0l_dataout, wire_nl10O_dataout, ~((~ reset_n)));
	and(wire_niO0O_dataout, wire_nl1ii_dataout, ~((~ reset_n)));
	and(wire_niO1i_dataout, wire_nl11l_dataout, ~((~ reset_n)));
	and(wire_niO1l_dataout, wire_nl11O_dataout, ~((~ reset_n)));
	and(wire_niO1O_dataout, wire_nl10i_dataout, ~((~ reset_n)));
	and(wire_niOii_dataout, wire_nl1il_dataout, ~((~ reset_n)));
	and(wire_niOil_dataout, wire_nl1iO_dataout, ~((~ reset_n)));
	and(wire_niOiO_dataout, wire_nl1li_dataout, ~((~ reset_n)));
	and(wire_niOli_dataout, wire_nl1ll_dataout, ~((~ reset_n)));
	and(wire_niOll_dataout, wire_nl1lO_dataout, ~((~ reset_n)));
	and(wire_niOlO_dataout, wire_nl1Oi_dataout, ~((~ reset_n)));
	and(wire_niOOi_dataout, wire_nl1Ol_dataout, ~((~ reset_n)));
	and(wire_niOOl_dataout, wire_nl1OO_dataout, ~((~ reset_n)));
	and(wire_niOOO_dataout, wire_nl01i_dataout, ~((~ reset_n)));
	and(wire_nl00i_dataout, wire_nl00l_dataout, ~((~ reset_n)));
	assign		wire_nl00l_dataout = (clken === 1'b1) ? (~ nlliiO) : nilOO;
	assign		wire_nl01i_dataout = (clken === 1'b1) ? wire_niilO_result[29] : nil1i;
	assign		wire_nl01l_dataout = (clken === 1'b1) ? wire_niilO_result[30] : niiOO;
	assign		wire_nl10i_dataout = (clken === 1'b1) ? wire_niilO_result[17] : nilOi;
	assign		wire_nl10l_dataout = (clken === 1'b1) ? wire_niilO_result[18] : nillO;
	assign		wire_nl10O_dataout = (clken === 1'b1) ? wire_niilO_result[19] : nilll;
	and(wire_nl11i_dataout, wire_nl01l_dataout, ~((~ reset_n)));
	assign		wire_nl11l_dataout = (clken === 1'b1) ? wire_niilO_result[15] : nl00O;
	assign		wire_nl11O_dataout = (clken === 1'b1) ? wire_niilO_result[16] : nilOl;
	assign		wire_nl1ii_dataout = (clken === 1'b1) ? wire_niilO_result[20] : nilli;
	assign		wire_nl1il_dataout = (clken === 1'b1) ? wire_niilO_result[21] : niliO;
	assign		wire_nl1iO_dataout = (clken === 1'b1) ? wire_niilO_result[22] : nilil;
	assign		wire_nl1li_dataout = (clken === 1'b1) ? wire_niilO_result[23] : nilii;
	assign		wire_nl1ll_dataout = (clken === 1'b1) ? wire_niilO_result[24] : nil0O;
	assign		wire_nl1lO_dataout = (clken === 1'b1) ? wire_niilO_result[25] : nil0l;
	assign		wire_nl1Oi_dataout = (clken === 1'b1) ? wire_niilO_result[26] : nil0i;
	assign		wire_nl1Ol_dataout = (clken === 1'b1) ? wire_niilO_result[27] : nil1O;
	assign		wire_nl1OO_dataout = (clken === 1'b1) ? wire_niilO_result[28] : nil1l;
	and(wire_nlili_dataout, wire_nllll_dataout, ~((~ reset_n)));
	and(wire_nlill_dataout, wire_nlllO_dataout, ~((~ reset_n)));
	and(wire_nlilO_dataout, wire_nllOi_dataout, ~((~ reset_n)));
	and(wire_nliOi_dataout, wire_nllOl_dataout, ~((~ reset_n)));
	and(wire_nliOl_dataout, wire_nllOO_dataout, ~((~ reset_n)));
	and(wire_nliOO_dataout, wire_nlO1i_dataout, ~((~ reset_n)));
	and(wire_nll0i_dataout, wire_nlO0l_dataout, ~((~ reset_n)));
	and(wire_nll0l_dataout, wire_nlO0O_dataout, ~((~ reset_n)));
	and(wire_nll0O_dataout, wire_nlOii_dataout, ~((~ reset_n)));
	and(wire_nll1i_dataout, wire_nlO1l_dataout, ~((~ reset_n)));
	and(wire_nll1l_dataout, wire_nlO1O_dataout, ~((~ reset_n)));
	and(wire_nll1O_dataout, wire_nlO0i_dataout, ~((~ reset_n)));
	and(wire_nllii_dataout, wire_nlOil_dataout, ~((~ reset_n)));
	and(wire_nllil_dataout, wire_nlOiO_dataout, ~((~ reset_n)));
	and(wire_nlliO_dataout, wire_nlOli_dataout, ~((~ reset_n)));
	and(wire_nllli_dataout, wire_nlOll_dataout, ~((~ reset_n)));
	assign		wire_nllll_dataout = (clken === 1'b1) ? wire_niill_result[15] : nlOOO;
	assign		wire_nlllO_dataout = (clken === 1'b1) ? wire_niill_result[16] : nliil;
	assign		wire_nllOi_dataout = (clken === 1'b1) ? wire_niill_result[17] : nliii;
	assign		wire_nllOl_dataout = (clken === 1'b1) ? wire_niill_result[18] : nli0O;
	assign		wire_nllOO_dataout = (clken === 1'b1) ? wire_niill_result[19] : nli0l;
	and(wire_nlO00i_dataout, wire_nlOl0O_dataout, ~((~ reset_n)));
	and(wire_nlO00l_dataout, wire_nlOlii_dataout, ~((~ reset_n)));
	and(wire_nlO00O_dataout, wire_nlOlil_dataout, ~((~ reset_n)));
	and(wire_nlO01i_dataout, wire_nlOl1O_dataout, ~((~ reset_n)));
	and(wire_nlO01l_dataout, wire_nlOl0i_dataout, ~((~ reset_n)));
	and(wire_nlO01O_dataout, wire_nlOl0l_dataout, ~((~ reset_n)));
	assign		wire_nlO0i_dataout = (clken === 1'b1) ? wire_niill_result[23] : nli1i;
	and(wire_nlO0ii_dataout, wire_nlOliO_dataout, ~((~ reset_n)));
	and(wire_nlO0il_dataout, wire_nlOlli_dataout, ~((~ reset_n)));
	and(wire_nlO0iO_dataout, wire_nlOlll_dataout, ~((~ reset_n)));
	assign		wire_nlO0l_dataout = (clken === 1'b1) ? wire_niill_result[24] : nl0OO;
	and(wire_nlO0li_dataout, wire_nlOllO_dataout, ~((~ reset_n)));
	and(wire_nlO0ll_dataout, wire_nlOlOi_dataout, ~((~ reset_n)));
	and(wire_nlO0lO_dataout, wire_nlOlOl_dataout, ~((~ reset_n)));
	assign		wire_nlO0O_dataout = (clken === 1'b1) ? wire_niill_result[25] : nl0Ol;
	and(wire_nlO0Oi_dataout, wire_nlOlOO_dataout, ~((~ reset_n)));
	and(wire_nlO0Ol_dataout, wire_nlOO1i_dataout, ~((~ reset_n)));
	and(wire_nlO0OO_dataout, wire_nlOO1l_dataout, ~((~ reset_n)));
	assign		wire_nlO1i_dataout = (clken === 1'b1) ? wire_niill_result[20] : nli0i;
	and(wire_nlO1iO_dataout, wire_nlOill_dataout, ~((~ reset_n)));
	assign		wire_nlO1l_dataout = (clken === 1'b1) ? wire_niill_result[21] : nli1O;
	and(wire_nlO1li_dataout, wire_nlOilO_dataout, ~((~ reset_n)));
	and(wire_nlO1ll_dataout, wire_nlOiOi_dataout, ~((~ reset_n)));
	and(wire_nlO1lO_dataout, wire_nlOiOl_dataout, ~((~ reset_n)));
	assign		wire_nlO1O_dataout = (clken === 1'b1) ? wire_niill_result[22] : nli1l;
	and(wire_nlO1Oi_dataout, wire_nlOiOO_dataout, ~((~ reset_n)));
	and(wire_nlO1Ol_dataout, wire_nlOl1i_dataout, ~((~ reset_n)));
	and(wire_nlO1OO_dataout, wire_nlOl1l_dataout, ~((~ reset_n)));
	and(wire_nlOi0i_dataout, wire_nlOO0O_dataout, ~((~ reset_n)));
	and(wire_nlOi0l_dataout, wire_nlOOii_dataout, ~((~ reset_n)));
	and(wire_nlOi0O_dataout, wire_nlOOil_dataout, ~((~ reset_n)));
	and(wire_nlOi1i_dataout, wire_nlOO1O_dataout, ~((~ reset_n)));
	and(wire_nlOi1l_dataout, wire_nlOO0i_dataout, ~((~ reset_n)));
	and(wire_nlOi1O_dataout, wire_nlOO0l_dataout, ~((~ reset_n)));
	assign		wire_nlOii_dataout = (clken === 1'b1) ? wire_niill_result[26] : nl0Oi;
	and(wire_nlOiii_dataout, wire_nlOOiO_dataout, ~((~ reset_n)));
	and(wire_nlOiil_dataout, wire_nlOOli_dataout, ~((~ reset_n)));
	and(wire_nlOiiO_dataout, wire_nlOOll_dataout, ~((~ reset_n)));
	assign		wire_nlOil_dataout = (clken === 1'b1) ? wire_niill_result[27] : nl0lO;
	and(wire_nlOili_dataout, wire_nlOOlO_dataout, ~((~ reset_n)));
	assign		wire_nlOill_dataout = (clken === 1'b1) ? phi_inc_i[0] : nlOOOi;
	assign		wire_nlOilO_dataout = (clken === 1'b1) ? phi_inc_i[1] : nlO1il;
	assign		wire_nlOiO_dataout = (clken === 1'b1) ? wire_niill_result[28] : nl0ll;
	assign		wire_nlOiOi_dataout = (clken === 1'b1) ? phi_inc_i[2] : nlO1ii;
	assign		wire_nlOiOl_dataout = (clken === 1'b1) ? phi_inc_i[3] : nlO10O;
	assign		wire_nlOiOO_dataout = (clken === 1'b1) ? phi_inc_i[4] : nlO10l;
	assign		wire_nlOl0i_dataout = (clken === 1'b1) ? phi_inc_i[8] : nlO11i;
	assign		wire_nlOl0l_dataout = (clken === 1'b1) ? phi_inc_i[9] : nllOOO;
	assign		wire_nlOl0O_dataout = (clken === 1'b1) ? phi_inc_i[10] : nllOOl;
	assign		wire_nlOl1i_dataout = (clken === 1'b1) ? phi_inc_i[5] : nlO10i;
	assign		wire_nlOl1l_dataout = (clken === 1'b1) ? phi_inc_i[6] : nlO11O;
	assign		wire_nlOl1O_dataout = (clken === 1'b1) ? phi_inc_i[7] : nlO11l;
	assign		wire_nlOli_dataout = (clken === 1'b1) ? wire_niill_result[29] : nl0li;
	assign		wire_nlOlii_dataout = (clken === 1'b1) ? phi_inc_i[11] : nllOOi;
	assign		wire_nlOlil_dataout = (clken === 1'b1) ? phi_inc_i[12] : nllOlO;
	assign		wire_nlOliO_dataout = (clken === 1'b1) ? phi_inc_i[13] : nllOll;
	assign		wire_nlOll_dataout = (clken === 1'b1) ? wire_niill_result[30] : nl0iO;
	assign		wire_nlOlli_dataout = (clken === 1'b1) ? phi_inc_i[14] : nllOli;
	assign		wire_nlOlll_dataout = (clken === 1'b1) ? phi_inc_i[15] : nllOiO;
	assign		wire_nlOllO_dataout = (clken === 1'b1) ? phi_inc_i[16] : nllOil;
	assign		wire_nlOlOi_dataout = (clken === 1'b1) ? phi_inc_i[17] : nllOii;
	assign		wire_nlOlOl_dataout = (clken === 1'b1) ? phi_inc_i[18] : nllO0O;
	assign		wire_nlOlOO_dataout = (clken === 1'b1) ? phi_inc_i[19] : nllO0l;
	assign		wire_nlOO0i_dataout = (clken === 1'b1) ? phi_inc_i[23] : nllO1i;
	assign		wire_nlOO0l_dataout = (clken === 1'b1) ? phi_inc_i[24] : nlllOO;
	assign		wire_nlOO0O_dataout = (clken === 1'b1) ? phi_inc_i[25] : nlllOl;
	assign		wire_nlOO1i_dataout = (clken === 1'b1) ? phi_inc_i[20] : nllO0i;
	assign		wire_nlOO1l_dataout = (clken === 1'b1) ? phi_inc_i[21] : nllO1O;
	assign		wire_nlOO1O_dataout = (clken === 1'b1) ? phi_inc_i[22] : nllO1l;
	and(wire_nlOOi_dataout, wire_nlOOl_dataout, ~((~ reset_n)));
	assign		wire_nlOOii_dataout = (clken === 1'b1) ? phi_inc_i[26] : nlllOi;
	assign		wire_nlOOil_dataout = (clken === 1'b1) ? phi_inc_i[27] : nllllO;
	assign		wire_nlOOiO_dataout = (clken === 1'b1) ? phi_inc_i[28] : nlllll;
	assign		wire_nlOOl_dataout = (clken === 1'b1) ? (~ nlliOl) : nliiO;
	assign		wire_nlOOli_dataout = (clken === 1'b1) ? phi_inc_i[29] : nlllli;
	assign		wire_nlOOll_dataout = (clken === 1'b1) ? phi_inc_i[30] : nllliO;
	assign		wire_nlOOlO_dataout = (clken === 1'b1) ? phi_inc_i[31] : nlllil;
	oper_add   n1O1i
	( 
	.a({((nlli0i18 ^ nlli0i17) & nlOOOl), nlOOOO, n111i, n111l, n111O}),
	.b({{4{1'b0}}, nlOOOl}),
	.cin(1'b0),
	.cout(),
	.o(wire_n1O1i_o));
	defparam
		n1O1i.sgate_representation = 0,
		n1O1i.width_a = 5,
		n1O1i.width_b = 5,
		n1O1i.width_o = 5;
	oper_add   niiii
	( 
	.a({1'b0, ((nlli0l16 ^ nlli0l15) & n1Oii), n1Oil, n1OiO, n1Oli, n1Oll, n1OlO, ((nlli0O14 ^ nlli0O13) & n1OOi), n1OOl}),
	.b({{2{1'b0}}, 1'b1, {6{1'b0}}}),
	.cin(1'b0),
	.cout(),
	.o(wire_niiii_o));
	defparam
		niiii.sgate_representation = 0,
		niiii.width_a = 9,
		niiii.width_b = 9,
		niiii.width_o = 9;
	assign
		fcos_o = {wire_nl0ii_result[15:0]},
		fsin_o = {wire_niiOi_result[15:0]},
		nlliiO = (((((((((((((((((~ wire_niilO_result[15]) & (~ wire_niilO_result[16])) & (~ wire_niilO_result[17])) & (~ wire_niilO_result[18])) & (~ wire_niilO_result[19])) & (~ wire_niilO_result[20])) & (~ wire_niilO_result[21])) & (~ wire_niilO_result[22])) & (~ wire_niilO_result[23])) & (~ wire_niilO_result[24])) & (~ wire_niilO_result[25])) & (~ wire_niilO_result[26])) & (~ wire_niilO_result[27])) & (~ wire_niilO_result[28])) & (~ wire_niilO_result[29])) & (~ wire_niilO_result[30])) & (~ wire_niilO_result[31])),
		nlliOl = ((((((((((((((((((~ wire_niill_result[15]) & (~ wire_niill_result[16])) & (~ wire_niill_result[17])) & (~ wire_niill_result[18])) & (~ wire_niill_result[19])) & (~ wire_niill_result[20])) & (~ wire_niill_result[21])) & (~ wire_niill_result[22])) & (~ wire_niill_result[23])) & (~ wire_niill_result[24])) & (~ wire_niill_result[25])) & (~ wire_niill_result[26])) & (~ wire_niill_result[27])) & (~ wire_niill_result[28])) & (~ wire_niill_result[29])) & (~ wire_niill_result[30])) & (~ wire_niill_result[31])) & (nllilO8 ^ nllilO7)),
		nlll1O = 1'b1,
		out_valid = n1ii;
endmodule //nco10
//synopsys translate_on
//VALID FILE
